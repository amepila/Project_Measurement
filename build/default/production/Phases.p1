Version 3.2 HI-TECH Software Intermediate Code
"5 Phases.c
[c E3104 0 1 .. ]
[n E3104 . SPI_LOW_POLARITY SPI_HIGH_POLARITY  ]
[c E3108 0 1 .. ]
[n E3108 . SPI_LOW_PHASE SPI_HIGH_PHASE  ]
[c E3112 0 1 2 .. ]
[n E3112 . SPI_SERIAL_CLK4 SPI_SERIAL_CLK16 SPI_SERIAL_CLK64  ]
"30 SPI.h
[s S285 `E3104 1 `E3108 1 `E3112 1 ]
[n S285 . SPI_Polarity SPI_Phase SPI_Clk ]
"13 Phases.c
[c E3332 0 1 2 3 .. ]
[n E3332 . INITIAL_LOAD GENERAL_VIEW VIEW_MENU SEND_DATA  ]
[c E3295 0 1 2 3 4 5 6 7 8 .. ]
[n E3295 . MAIN_MENU ENERGY POWER_1 POWER_2 RMS_VI POWER_FACTOR PHASE_ANGLE FREQUENCY TEMPERATURE  ]
"19 Phases.h
[s S288 `E3332 1 `E3295 1 ]
[n S288 . phaseState stateMain ]
"114 ATM90E36A.h
[v _ATM_init `(v ~T0 @X0 0 ef ]
"59 GPIO.h
[v _delay `(v ~T0 @X0 0 ef1`ul ]
"31 LCDNokia5110.h
[v _LCDNokia_clear `(v ~T0 @X0 0 ef ]
"35
[v _LCDNokia_gotoXY `(v ~T0 @X0 0 ef2`uc`uc ]
"41
[v _LCDNokia_sendString `(v ~T0 @X0 0 ef1`*Cuc ]
"6 Buttons.h
[v _getButton1 `(uc ~T0 @X0 0 ef ]
"14
[v _getButton3 `(uc ~T0 @X0 0 ef ]
"10
[v _getButton2 `(uc ~T0 @X0 0 ef ]
"222 Phases.c
[c E3350 0 1 2 3 4 5 .. ]
[n E3350 . ACTIVE_ENERGY REACTIVE_ENERGY APPARENT_ENERGY FUNDAMENTAL_ENERGY HARMONIC_ENERGY EXIT_ENERGY  ]
"226
[c E3371 0 1 2 .. ]
[n E3371 . TYPES_POWER1 PHASES_POWER1 EXIT_POWER1  ]
"230
[c E3389 0 1 2 .. ]
[n E3389 . FH_POWER2 PHASES_POWER2 EXIT_POWER2  ]
"234
[c E3407 0 1 2 .. ]
[n E3407 . PHASES_RMSVI NEUTRAL_RMSVI EXIT_RMSVI  ]
"238
[c E3425 0 1 .. ]
[n E3425 . PHASES_PF EXIT_PF  ]
"242
[c E3441 0 1 2 3 .. ]
[n E3441 . PHASES_PA VI_PA THDN_PA EXIT_PA  ]
"246
[c E3460 0 1 .. ]
[n E3460 . SHOW_FREQUENCY EXIT_FREQUENCY  ]
"250
[c E3477 0 1 .. ]
[n E3477 . SHOW_TEMPERATURE EXIT_TEMPERATURE  ]
"411
[c E3128 1200 2400 9600 .. ]
[n E3128 . BD_1200 BD_2400 BD_9600  ]
"16 UART.h
[v _UART_init `(v ~T0 @X0 0 ef1`E3128 ]
"36 SPI.h
[v _SPI_init `(v ~T0 @X0 0 ef1`*CS285 ]
"24 LCDNokia5110.h
[v _LCDNokia_init `(v ~T0 @X0 0 ef ]
"48 Phases.h
[s S290 `uc 1 `E3350 1 `E3295 1 ]
[n S290 . dummy phaseState stateMain ]
"46 LCDNokia5110.h
[v _LCDNokia_printValue `(v ~T0 @X0 0 ef1`ul ]
"759 Phases.c
[c E3171 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 .. ]
[n E3171 . ACTIVE_ENERGY_TYPE REACTIVE_ENERGY_TYPE APPARENT_ENERGY_TYPE FUNDAMENTAL_ENERGY_TYPE HARMONIC_ENERGY_TYPE ACTIVE_POWER_TYPE REACTIVE_POWER_TYPE APPARENT_POWER_TYPE POWER_FACTOR_TYPE FUNDAMENTAL_POWER HARMONIC_POWER VOLTAGE_RMS CURRENT_RMS THDN_TYPE FREQUENCY_TYPE PHASE_ANGLE_TYPE TEMPERATURE_TYPE  ]
[c E3190 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 .. ]
[n E3190 . TOTAL_FORW_ACTIVE_ENERGY PHASE_A_FORW_ACTIVE_ENERGY PHASE_B_FORW_ACTIVE_ENERGY PHASE_C_FORW_ACTIVE_ENERGY TOTAL_REV_ACTIVE_ENERGY PHASE_A_REV_ACTIVE_ENERGY PHASE_B_REV_ACTIVE_ENERGY PHASE_C_REV_ACTIVE_ENERGY TOTAL_FORW_REACTIVE_ENERGY PHASE_A_FORW_REACTIVE_ENERGY PHASE_B_FORW_REACTIVE_ENERGY PHASE_C_FORW_REACTIVE_ENERGY TOTAL_REVERSE_REACTIVE_ENERGY PHASE_A_REV_REACTIVE_ENERGY PHASE_B_REV_REACTIVE_ENERGY PHASE_C_REV_REACTIVE_ENERGY TOTAL_ARIT_APPARENT_ENERGY PHASE_A_APPARENT_ENERGY PHASE_B_APPARENT_ENERGY PHASE_C_APPARENT_ENERGY TOTAL_VECT_APPARENT_ENERGY TOTAL_FORW_ACTIVE_FUND_ENERGY PHASE_A_FORW_ACTIVE_FUND_ENERGY PHASE_B_FORW_ACTIVE_FUND_ENERGY PHASE_C_FORW_ACTIVE_FUND_ENERGY TOTAL_REV_ACTIVE_FUND_ENERGY PHASE_A_REV_ACTIVE_FUND_ENERGY PHASE_B_REV_ACTIVE_FUND_ENERGY PHASE_C_REV_ACTIVE_FUND_ENERGY TOTAL_FORW_ACTIVE_HARM_ENERGY PHASE_A_FORW_ACTIVE_HARM_ENERGY PHASE_B_FORW_ACTIVE_HARM_ENERGY PHASE_C_FORW_ACTIVE_HARM_ENERGY TOTAL_REV_ACTIVE_HARM_ENERGY PHASE_A_REV_ACTIVE_HARM_ENERGY PHASE_B_REV_ACTIVE_HARM_ENERGY PHASE_C_REV_ACTIVE_HARM_ENERGY TOTAL_ACTIVE_POWER PHASE_A_ACTIVE_POWER PHASE_B_ACTIVE_POWER PHASE_C_ACTIVE_POWER TOTAL_REACTIVE_POWER PHASE_A_REACTIVE_POWER PHASE_B_REACTIVE_POWER PHASE_C_REACTIVE_POWER TOTAL_APPARENT_POWER PHASE_A_APPARENT_POWER PHASE_B_APPARENT_POWER PHASE_C_APPARENT_POWER TOTAL_POWER_FACTOR PHASE_A_POWER_FACTOR PHASE_B_POWER_FACTOR PHASE_C_POWER_FACTOR TOTAL_ACTIVE_FUND_POWER PHASE_A_ACTIVE_FUND_POWER PHASE_B_ACTIVE_FUND_POWER PHASE_C_ACTIVE_FUND_POWER TOTAL_ACTIVE_HARM_POWER PHASE_A_ACTIVE_HARM_POWER PHASE_B_ACTIVE_HARM_POWER PHASE_C_ACTIVE_HARM_POWER NLINE_SAMPLED_CURRENT_RMS PHASE_A_VOLTAGE_RMS PHASE_B_VOLTAGE_RMS PHASE_C_VOLTAGE_RMS NLINE_CALCULATED_CURRENT_RMS PHASE_A_CURRENT_RMS PHASE_B_CURRENT_RMS PHASE_C_CURRENT_RMS PHASE_A_VOLTAGE_THDN PHASE_B_VOLTAGE_THDN PHASE_C_VOLTAGE_THDN PHASE_A_CURRENT_THDN PHASE_B_CURRENT_THDN PHASE_C_CURRENT_THDN FREQUENCY_REG PHASE_A_MEAN_ANGLE_PHASE PHASE_B_MEAN_ANGLE_PHASE PHASE_C_MEAN_ANGLE_PHASE TEMPERATURE_REG PHASE_A_VOLTAGE_ANGLE_PHASE PHASE_B_VOLTAGE_ANGLE_PHASE PHASE_C_VOLTAGE_ANGLE_PHASE  ]
"118 ATM90E36A.h
[v _ATM_registers `(ui ~T0 @X0 0 ef2`E3171`E3190 ]
"75 Phases.h
[s S292 `uc 1 `E3371 1 `E3295 1 ]
[n S292 . dummy phaseState stateMain ]
"102
[s S294 `uc 1 `E3389 1 `E3295 1 ]
[n S294 . dummy phaseState stateMain ]
"129
[s S296 `uc 1 `E3407 1 `E3295 1 ]
[n S296 . dummy phaseState stateMain ]
"154
[s S298 `E3425 1 `E3295 1 ]
[n S298 . phaseState stateMain ]
"180
[s S300 `uc 1 `E3441 1 `E3295 1 ]
[n S300 . dummy phaseState stateMain ]
"203
[s S302 `uc 1 `E3460 1 `E3295 1 ]
[n S302 . dummy phaseState stateMain ]
"227
[s S304 `uc 1 `E3477 1 `E3295 1 ]
[n S304 . dummy phaseState stateMain ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic18f2331.h: 50: extern volatile unsigned char DFLTCON @ 0xF60;
"52 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic18f2331.h
[; ;pic18f2331.h: 52: asm("DFLTCON equ 0F60h");
[; <" DFLTCON equ 0F60h ;# ">
[; ;pic18f2331.h: 55: typedef union {
[; ;pic18f2331.h: 56: struct {
[; ;pic18f2331.h: 57: unsigned FLTCK :3;
[; ;pic18f2331.h: 58: unsigned FLT1EN :1;
[; ;pic18f2331.h: 59: unsigned FLT2EN :1;
[; ;pic18f2331.h: 60: unsigned FLT3EN :1;
[; ;pic18f2331.h: 61: unsigned FLT4EN :1;
[; ;pic18f2331.h: 62: };
[; ;pic18f2331.h: 63: struct {
[; ;pic18f2331.h: 64: unsigned FLTCK0 :1;
[; ;pic18f2331.h: 65: unsigned FLTCK1 :1;
[; ;pic18f2331.h: 66: unsigned FLTCK2 :1;
[; ;pic18f2331.h: 67: };
[; ;pic18f2331.h: 68: } DFLTCONbits_t;
[; ;pic18f2331.h: 69: extern volatile DFLTCONbits_t DFLTCONbits @ 0xF60;
[; ;pic18f2331.h: 114: extern volatile unsigned char CAP3CON @ 0xF61;
"116
[; ;pic18f2331.h: 116: asm("CAP3CON equ 0F61h");
[; <" CAP3CON equ 0F61h ;# ">
[; ;pic18f2331.h: 119: typedef union {
[; ;pic18f2331.h: 120: struct {
[; ;pic18f2331.h: 121: unsigned CAP3M :4;
[; ;pic18f2331.h: 122: unsigned :1;
[; ;pic18f2331.h: 123: unsigned CAP3TMR :1;
[; ;pic18f2331.h: 124: unsigned CAP3REN :1;
[; ;pic18f2331.h: 125: };
[; ;pic18f2331.h: 126: struct {
[; ;pic18f2331.h: 127: unsigned CAP3M0 :1;
[; ;pic18f2331.h: 128: unsigned CAP3M1 :1;
[; ;pic18f2331.h: 129: unsigned CAP3M2 :1;
[; ;pic18f2331.h: 130: unsigned CAP3M3 :1;
[; ;pic18f2331.h: 131: };
[; ;pic18f2331.h: 132: } CAP3CONbits_t;
[; ;pic18f2331.h: 133: extern volatile CAP3CONbits_t CAP3CONbits @ 0xF61;
[; ;pic18f2331.h: 173: extern volatile unsigned char CAP2CON @ 0xF62;
"175
[; ;pic18f2331.h: 175: asm("CAP2CON equ 0F62h");
[; <" CAP2CON equ 0F62h ;# ">
[; ;pic18f2331.h: 178: typedef union {
[; ;pic18f2331.h: 179: struct {
[; ;pic18f2331.h: 180: unsigned CAP2M :4;
[; ;pic18f2331.h: 181: unsigned :1;
[; ;pic18f2331.h: 182: unsigned CAP2TMR :1;
[; ;pic18f2331.h: 183: unsigned CAP2REN :1;
[; ;pic18f2331.h: 184: };
[; ;pic18f2331.h: 185: struct {
[; ;pic18f2331.h: 186: unsigned CAP2M0 :1;
[; ;pic18f2331.h: 187: unsigned CAP2M1 :1;
[; ;pic18f2331.h: 188: unsigned CAP2M2 :1;
[; ;pic18f2331.h: 189: unsigned CAP2M3 :1;
[; ;pic18f2331.h: 190: };
[; ;pic18f2331.h: 191: } CAP2CONbits_t;
[; ;pic18f2331.h: 192: extern volatile CAP2CONbits_t CAP2CONbits @ 0xF62;
[; ;pic18f2331.h: 232: extern volatile unsigned char CAP1CON @ 0xF63;
"234
[; ;pic18f2331.h: 234: asm("CAP1CON equ 0F63h");
[; <" CAP1CON equ 0F63h ;# ">
[; ;pic18f2331.h: 237: typedef union {
[; ;pic18f2331.h: 238: struct {
[; ;pic18f2331.h: 239: unsigned CAP1M :4;
[; ;pic18f2331.h: 240: unsigned :1;
[; ;pic18f2331.h: 241: unsigned CAP1TMR :1;
[; ;pic18f2331.h: 242: unsigned CAP1REN :1;
[; ;pic18f2331.h: 243: };
[; ;pic18f2331.h: 244: struct {
[; ;pic18f2331.h: 245: unsigned CAP1M0 :1;
[; ;pic18f2331.h: 246: unsigned CAP1M1 :1;
[; ;pic18f2331.h: 247: unsigned CAP1M2 :1;
[; ;pic18f2331.h: 248: unsigned CAP1M3 :1;
[; ;pic18f2331.h: 249: };
[; ;pic18f2331.h: 250: } CAP1CONbits_t;
[; ;pic18f2331.h: 251: extern volatile CAP1CONbits_t CAP1CONbits @ 0xF63;
[; ;pic18f2331.h: 291: extern volatile unsigned char CAP3BUFL @ 0xF64;
"293
[; ;pic18f2331.h: 293: asm("CAP3BUFL equ 0F64h");
[; <" CAP3BUFL equ 0F64h ;# ">
[; ;pic18f2331.h: 296: extern volatile unsigned char MAXCNTL @ 0xF64;
"298
[; ;pic18f2331.h: 298: asm("MAXCNTL equ 0F64h");
[; <" MAXCNTL equ 0F64h ;# ">
[; ;pic18f2331.h: 303: extern volatile unsigned char CAP3BUFH @ 0xF65;
"305
[; ;pic18f2331.h: 305: asm("CAP3BUFH equ 0F65h");
[; <" CAP3BUFH equ 0F65h ;# ">
[; ;pic18f2331.h: 308: extern volatile unsigned char MAXCNTH @ 0xF65;
"310
[; ;pic18f2331.h: 310: asm("MAXCNTH equ 0F65h");
[; <" MAXCNTH equ 0F65h ;# ">
[; ;pic18f2331.h: 315: extern volatile unsigned char CAP2BUFL @ 0xF66;
"317
[; ;pic18f2331.h: 317: asm("CAP2BUFL equ 0F66h");
[; <" CAP2BUFL equ 0F66h ;# ">
[; ;pic18f2331.h: 320: extern volatile unsigned char POSCNTL @ 0xF66;
"322
[; ;pic18f2331.h: 322: asm("POSCNTL equ 0F66h");
[; <" POSCNTL equ 0F66h ;# ">
[; ;pic18f2331.h: 327: extern volatile unsigned char CAP2BUFH @ 0xF67;
"329
[; ;pic18f2331.h: 329: asm("CAP2BUFH equ 0F67h");
[; <" CAP2BUFH equ 0F67h ;# ">
[; ;pic18f2331.h: 332: extern volatile unsigned char POSCNTH @ 0xF67;
"334
[; ;pic18f2331.h: 334: asm("POSCNTH equ 0F67h");
[; <" POSCNTH equ 0F67h ;# ">
[; ;pic18f2331.h: 339: extern volatile unsigned char CAP1BUFL @ 0xF68;
"341
[; ;pic18f2331.h: 341: asm("CAP1BUFL equ 0F68h");
[; <" CAP1BUFL equ 0F68h ;# ">
[; ;pic18f2331.h: 344: extern volatile unsigned char VELRL @ 0xF68;
"346
[; ;pic18f2331.h: 346: asm("VELRL equ 0F68h");
[; <" VELRL equ 0F68h ;# ">
[; ;pic18f2331.h: 351: extern volatile unsigned char CAP1BUFH @ 0xF69;
"353
[; ;pic18f2331.h: 353: asm("CAP1BUFH equ 0F69h");
[; <" CAP1BUFH equ 0F69h ;# ">
[; ;pic18f2331.h: 356: extern volatile unsigned char VELRH @ 0xF69;
"358
[; ;pic18f2331.h: 358: asm("VELRH equ 0F69h");
[; <" VELRH equ 0F69h ;# ">
[; ;pic18f2331.h: 363: extern volatile unsigned char OVDCONS @ 0xF6A;
"365
[; ;pic18f2331.h: 365: asm("OVDCONS equ 0F6Ah");
[; <" OVDCONS equ 0F6Ah ;# ">
[; ;pic18f2331.h: 368: typedef union {
[; ;pic18f2331.h: 369: struct {
[; ;pic18f2331.h: 370: unsigned POUT :8;
[; ;pic18f2331.h: 371: };
[; ;pic18f2331.h: 372: struct {
[; ;pic18f2331.h: 373: unsigned POUT0 :1;
[; ;pic18f2331.h: 374: unsigned POUT1 :1;
[; ;pic18f2331.h: 375: unsigned POUT2 :1;
[; ;pic18f2331.h: 376: unsigned POUT3 :1;
[; ;pic18f2331.h: 377: unsigned POUT4 :1;
[; ;pic18f2331.h: 378: unsigned POUT5 :1;
[; ;pic18f2331.h: 379: unsigned POUT6 :1;
[; ;pic18f2331.h: 380: unsigned POUT7 :1;
[; ;pic18f2331.h: 381: };
[; ;pic18f2331.h: 382: } OVDCONSbits_t;
[; ;pic18f2331.h: 383: extern volatile OVDCONSbits_t OVDCONSbits @ 0xF6A;
[; ;pic18f2331.h: 433: extern volatile unsigned char OVDCOND @ 0xF6B;
"435
[; ;pic18f2331.h: 435: asm("OVDCOND equ 0F6Bh");
[; <" OVDCOND equ 0F6Bh ;# ">
[; ;pic18f2331.h: 438: typedef union {
[; ;pic18f2331.h: 439: struct {
[; ;pic18f2331.h: 440: unsigned POVD :8;
[; ;pic18f2331.h: 441: };
[; ;pic18f2331.h: 442: struct {
[; ;pic18f2331.h: 443: unsigned POVD0 :1;
[; ;pic18f2331.h: 444: unsigned POVD1 :1;
[; ;pic18f2331.h: 445: unsigned POVD2 :1;
[; ;pic18f2331.h: 446: unsigned POVD3 :1;
[; ;pic18f2331.h: 447: unsigned POVD4 :1;
[; ;pic18f2331.h: 448: unsigned POVD5 :1;
[; ;pic18f2331.h: 449: unsigned POVD6 :1;
[; ;pic18f2331.h: 450: unsigned POVD7 :1;
[; ;pic18f2331.h: 451: };
[; ;pic18f2331.h: 452: } OVDCONDbits_t;
[; ;pic18f2331.h: 453: extern volatile OVDCONDbits_t OVDCONDbits @ 0xF6B;
[; ;pic18f2331.h: 503: extern volatile unsigned char FLTCONFIG @ 0xF6C;
"505
[; ;pic18f2331.h: 505: asm("FLTCONFIG equ 0F6Ch");
[; <" FLTCONFIG equ 0F6Ch ;# ">
[; ;pic18f2331.h: 508: typedef union {
[; ;pic18f2331.h: 509: struct {
[; ;pic18f2331.h: 510: unsigned FLTAEN :1;
[; ;pic18f2331.h: 511: unsigned FLTAMOD :1;
[; ;pic18f2331.h: 512: unsigned FLTAS :1;
[; ;pic18f2331.h: 513: unsigned FLTCON :1;
[; ;pic18f2331.h: 514: unsigned FLTBEN :1;
[; ;pic18f2331.h: 515: unsigned FLTBMOD :1;
[; ;pic18f2331.h: 516: unsigned FLTBS :1;
[; ;pic18f2331.h: 517: unsigned BRFEN :1;
[; ;pic18f2331.h: 518: };
[; ;pic18f2331.h: 519: } FLTCONFIGbits_t;
[; ;pic18f2331.h: 520: extern volatile FLTCONFIGbits_t FLTCONFIGbits @ 0xF6C;
[; ;pic18f2331.h: 565: extern volatile unsigned char DTCON @ 0xF6D;
"567
[; ;pic18f2331.h: 567: asm("DTCON equ 0F6Dh");
[; <" DTCON equ 0F6Dh ;# ">
[; ;pic18f2331.h: 570: typedef union {
[; ;pic18f2331.h: 571: struct {
[; ;pic18f2331.h: 572: unsigned DTA :6;
[; ;pic18f2331.h: 573: unsigned DTAPS :2;
[; ;pic18f2331.h: 574: };
[; ;pic18f2331.h: 575: struct {
[; ;pic18f2331.h: 576: unsigned DT0 :1;
[; ;pic18f2331.h: 577: unsigned DT1 :1;
[; ;pic18f2331.h: 578: unsigned DT2 :1;
[; ;pic18f2331.h: 579: unsigned DT3 :1;
[; ;pic18f2331.h: 580: unsigned DT4 :1;
[; ;pic18f2331.h: 581: unsigned DT5 :1;
[; ;pic18f2331.h: 582: unsigned DTPS0 :1;
[; ;pic18f2331.h: 583: unsigned DTPS1 :1;
[; ;pic18f2331.h: 584: };
[; ;pic18f2331.h: 585: struct {
[; ;pic18f2331.h: 586: unsigned DTA0 :1;
[; ;pic18f2331.h: 587: unsigned DTA1 :1;
[; ;pic18f2331.h: 588: unsigned DTA2 :1;
[; ;pic18f2331.h: 589: unsigned DTA3 :1;
[; ;pic18f2331.h: 590: unsigned DTA4 :1;
[; ;pic18f2331.h: 591: unsigned DTA5 :1;
[; ;pic18f2331.h: 592: unsigned DTAPS0 :1;
[; ;pic18f2331.h: 593: unsigned DTAPS1 :1;
[; ;pic18f2331.h: 594: };
[; ;pic18f2331.h: 595: } DTCONbits_t;
[; ;pic18f2331.h: 596: extern volatile DTCONbits_t DTCONbits @ 0xF6D;
[; ;pic18f2331.h: 691: extern volatile unsigned char PWMCON1 @ 0xF6E;
"693
[; ;pic18f2331.h: 693: asm("PWMCON1 equ 0F6Eh");
[; <" PWMCON1 equ 0F6Eh ;# ">
[; ;pic18f2331.h: 696: typedef union {
[; ;pic18f2331.h: 697: struct {
[; ;pic18f2331.h: 698: unsigned OSYNC :1;
[; ;pic18f2331.h: 699: unsigned UDIS :1;
[; ;pic18f2331.h: 700: unsigned :1;
[; ;pic18f2331.h: 701: unsigned SEVTDIR :1;
[; ;pic18f2331.h: 702: unsigned SEVOPS :4;
[; ;pic18f2331.h: 703: };
[; ;pic18f2331.h: 704: struct {
[; ;pic18f2331.h: 705: unsigned :4;
[; ;pic18f2331.h: 706: unsigned SEVOPS0 :1;
[; ;pic18f2331.h: 707: unsigned SEVOPS1 :1;
[; ;pic18f2331.h: 708: unsigned SEVOPS2 :1;
[; ;pic18f2331.h: 709: unsigned SEVOPS3 :1;
[; ;pic18f2331.h: 710: };
[; ;pic18f2331.h: 711: } PWMCON1bits_t;
[; ;pic18f2331.h: 712: extern volatile PWMCON1bits_t PWMCON1bits @ 0xF6E;
[; ;pic18f2331.h: 757: extern volatile unsigned char PWMCON0 @ 0xF6F;
"759
[; ;pic18f2331.h: 759: asm("PWMCON0 equ 0F6Fh");
[; <" PWMCON0 equ 0F6Fh ;# ">
[; ;pic18f2331.h: 762: typedef union {
[; ;pic18f2331.h: 763: struct {
[; ;pic18f2331.h: 764: unsigned PMOD :4;
[; ;pic18f2331.h: 765: unsigned PWMEN :3;
[; ;pic18f2331.h: 766: };
[; ;pic18f2331.h: 767: struct {
[; ;pic18f2331.h: 768: unsigned PMOD0 :1;
[; ;pic18f2331.h: 769: unsigned PMOD1 :1;
[; ;pic18f2331.h: 770: unsigned PMOD2 :1;
[; ;pic18f2331.h: 771: unsigned PMOD3 :1;
[; ;pic18f2331.h: 772: unsigned PWMEN0 :1;
[; ;pic18f2331.h: 773: unsigned PWMEN1 :1;
[; ;pic18f2331.h: 774: unsigned PWMEN2 :1;
[; ;pic18f2331.h: 775: };
[; ;pic18f2331.h: 776: } PWMCON0bits_t;
[; ;pic18f2331.h: 777: extern volatile PWMCON0bits_t PWMCON0bits @ 0xF6F;
[; ;pic18f2331.h: 827: extern volatile unsigned char SEVTCMPH @ 0xF70;
"829
[; ;pic18f2331.h: 829: asm("SEVTCMPH equ 0F70h");
[; <" SEVTCMPH equ 0F70h ;# ">
[; ;pic18f2331.h: 834: extern volatile unsigned char SEVTCMPL @ 0xF71;
"836
[; ;pic18f2331.h: 836: asm("SEVTCMPL equ 0F71h");
[; <" SEVTCMPL equ 0F71h ;# ">
[; ;pic18f2331.h: 841: extern volatile unsigned char PDC2H @ 0xF74;
"843
[; ;pic18f2331.h: 843: asm("PDC2H equ 0F74h");
[; <" PDC2H equ 0F74h ;# ">
[; ;pic18f2331.h: 848: extern volatile unsigned char PDC2L @ 0xF75;
"850
[; ;pic18f2331.h: 850: asm("PDC2L equ 0F75h");
[; <" PDC2L equ 0F75h ;# ">
[; ;pic18f2331.h: 855: extern volatile unsigned char PDC1H @ 0xF76;
"857
[; ;pic18f2331.h: 857: asm("PDC1H equ 0F76h");
[; <" PDC1H equ 0F76h ;# ">
[; ;pic18f2331.h: 862: extern volatile unsigned char PDC1L @ 0xF77;
"864
[; ;pic18f2331.h: 864: asm("PDC1L equ 0F77h");
[; <" PDC1L equ 0F77h ;# ">
[; ;pic18f2331.h: 869: extern volatile unsigned char PDC0H @ 0xF78;
"871
[; ;pic18f2331.h: 871: asm("PDC0H equ 0F78h");
[; <" PDC0H equ 0F78h ;# ">
[; ;pic18f2331.h: 876: extern volatile unsigned char PDC0L @ 0xF79;
"878
[; ;pic18f2331.h: 878: asm("PDC0L equ 0F79h");
[; <" PDC0L equ 0F79h ;# ">
[; ;pic18f2331.h: 883: extern volatile unsigned char PTPERH @ 0xF7A;
"885
[; ;pic18f2331.h: 885: asm("PTPERH equ 0F7Ah");
[; <" PTPERH equ 0F7Ah ;# ">
[; ;pic18f2331.h: 890: extern volatile unsigned char PTPERL @ 0xF7B;
"892
[; ;pic18f2331.h: 892: asm("PTPERL equ 0F7Bh");
[; <" PTPERL equ 0F7Bh ;# ">
[; ;pic18f2331.h: 897: extern volatile unsigned char PTMRH @ 0xF7C;
"899
[; ;pic18f2331.h: 899: asm("PTMRH equ 0F7Ch");
[; <" PTMRH equ 0F7Ch ;# ">
[; ;pic18f2331.h: 904: extern volatile unsigned char PTMRL @ 0xF7D;
"906
[; ;pic18f2331.h: 906: asm("PTMRL equ 0F7Dh");
[; <" PTMRL equ 0F7Dh ;# ">
[; ;pic18f2331.h: 911: extern volatile unsigned char PTCON1 @ 0xF7E;
"913
[; ;pic18f2331.h: 913: asm("PTCON1 equ 0F7Eh");
[; <" PTCON1 equ 0F7Eh ;# ">
[; ;pic18f2331.h: 916: typedef union {
[; ;pic18f2331.h: 917: struct {
[; ;pic18f2331.h: 918: unsigned :6;
[; ;pic18f2331.h: 919: unsigned PTDIR :1;
[; ;pic18f2331.h: 920: unsigned PTEN :1;
[; ;pic18f2331.h: 921: };
[; ;pic18f2331.h: 922: } PTCON1bits_t;
[; ;pic18f2331.h: 923: extern volatile PTCON1bits_t PTCON1bits @ 0xF7E;
[; ;pic18f2331.h: 938: extern volatile unsigned char PTCON0 @ 0xF7F;
"940
[; ;pic18f2331.h: 940: asm("PTCON0 equ 0F7Fh");
[; <" PTCON0 equ 0F7Fh ;# ">
[; ;pic18f2331.h: 943: typedef union {
[; ;pic18f2331.h: 944: struct {
[; ;pic18f2331.h: 945: unsigned PTMOD :2;
[; ;pic18f2331.h: 946: unsigned PTCKPS :2;
[; ;pic18f2331.h: 947: unsigned PTOPS :4;
[; ;pic18f2331.h: 948: };
[; ;pic18f2331.h: 949: struct {
[; ;pic18f2331.h: 950: unsigned PTMOD0 :1;
[; ;pic18f2331.h: 951: unsigned PTMOD1 :1;
[; ;pic18f2331.h: 952: unsigned PTCKPS0 :1;
[; ;pic18f2331.h: 953: unsigned PTCKPS1 :1;
[; ;pic18f2331.h: 954: unsigned PTOPS0 :1;
[; ;pic18f2331.h: 955: unsigned PTOPS1 :1;
[; ;pic18f2331.h: 956: unsigned PTOPS2 :1;
[; ;pic18f2331.h: 957: unsigned PTOPS3 :1;
[; ;pic18f2331.h: 958: };
[; ;pic18f2331.h: 959: } PTCON0bits_t;
[; ;pic18f2331.h: 960: extern volatile PTCON0bits_t PTCON0bits @ 0xF7F;
[; ;pic18f2331.h: 1020: extern volatile unsigned char PORTA @ 0xF80;
"1022
[; ;pic18f2331.h: 1022: asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
[; ;pic18f2331.h: 1025: typedef union {
[; ;pic18f2331.h: 1026: struct {
[; ;pic18f2331.h: 1027: unsigned RA0 :1;
[; ;pic18f2331.h: 1028: unsigned RA1 :1;
[; ;pic18f2331.h: 1029: unsigned RA2 :1;
[; ;pic18f2331.h: 1030: unsigned RA3 :1;
[; ;pic18f2331.h: 1031: unsigned RA4 :1;
[; ;pic18f2331.h: 1032: unsigned :1;
[; ;pic18f2331.h: 1033: unsigned RA6 :1;
[; ;pic18f2331.h: 1034: unsigned RA7 :1;
[; ;pic18f2331.h: 1035: };
[; ;pic18f2331.h: 1036: struct {
[; ;pic18f2331.h: 1037: unsigned AN0 :1;
[; ;pic18f2331.h: 1038: unsigned AN1 :1;
[; ;pic18f2331.h: 1039: unsigned AN2 :1;
[; ;pic18f2331.h: 1040: unsigned AN3 :1;
[; ;pic18f2331.h: 1041: unsigned AN4 :1;
[; ;pic18f2331.h: 1042: unsigned :1;
[; ;pic18f2331.h: 1043: unsigned OSC2 :1;
[; ;pic18f2331.h: 1044: unsigned OSC1 :1;
[; ;pic18f2331.h: 1045: };
[; ;pic18f2331.h: 1046: struct {
[; ;pic18f2331.h: 1047: unsigned :2;
[; ;pic18f2331.h: 1048: unsigned VREFM :1;
[; ;pic18f2331.h: 1049: unsigned VREFP :1;
[; ;pic18f2331.h: 1050: unsigned :2;
[; ;pic18f2331.h: 1051: unsigned CLKO :1;
[; ;pic18f2331.h: 1052: unsigned CLKI :1;
[; ;pic18f2331.h: 1053: };
[; ;pic18f2331.h: 1054: struct {
[; ;pic18f2331.h: 1055: unsigned ULPWUIN :1;
[; ;pic18f2331.h: 1056: unsigned :6;
[; ;pic18f2331.h: 1057: unsigned RJPU :1;
[; ;pic18f2331.h: 1058: };
[; ;pic18f2331.h: 1059: } PORTAbits_t;
[; ;pic18f2331.h: 1060: extern volatile PORTAbits_t PORTAbits @ 0xF80;
[; ;pic18f2331.h: 1165: extern volatile unsigned char PORTB @ 0xF81;
"1167
[; ;pic18f2331.h: 1167: asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
[; ;pic18f2331.h: 1170: typedef union {
[; ;pic18f2331.h: 1171: struct {
[; ;pic18f2331.h: 1172: unsigned RB0 :1;
[; ;pic18f2331.h: 1173: unsigned RB1 :1;
[; ;pic18f2331.h: 1174: unsigned RB2 :1;
[; ;pic18f2331.h: 1175: unsigned RB3 :1;
[; ;pic18f2331.h: 1176: unsigned RB4 :1;
[; ;pic18f2331.h: 1177: unsigned RB5 :1;
[; ;pic18f2331.h: 1178: unsigned RB6 :1;
[; ;pic18f2331.h: 1179: unsigned RB7 :1;
[; ;pic18f2331.h: 1180: };
[; ;pic18f2331.h: 1181: struct {
[; ;pic18f2331.h: 1182: unsigned :3;
[; ;pic18f2331.h: 1183: unsigned CCP2_PA2 :1;
[; ;pic18f2331.h: 1184: };
[; ;pic18f2331.h: 1185: } PORTBbits_t;
[; ;pic18f2331.h: 1186: extern volatile PORTBbits_t PORTBbits @ 0xF81;
[; ;pic18f2331.h: 1236: extern volatile unsigned char PORTC @ 0xF82;
"1238
[; ;pic18f2331.h: 1238: asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
[; ;pic18f2331.h: 1241: typedef union {
[; ;pic18f2331.h: 1242: struct {
[; ;pic18f2331.h: 1243: unsigned RC0 :1;
[; ;pic18f2331.h: 1244: unsigned RC1 :1;
[; ;pic18f2331.h: 1245: unsigned RC2 :1;
[; ;pic18f2331.h: 1246: unsigned RC3 :1;
[; ;pic18f2331.h: 1247: unsigned RC4 :1;
[; ;pic18f2331.h: 1248: unsigned RC5 :1;
[; ;pic18f2331.h: 1249: unsigned RC6 :1;
[; ;pic18f2331.h: 1250: unsigned RC7 :1;
[; ;pic18f2331.h: 1251: };
[; ;pic18f2331.h: 1252: struct {
[; ;pic18f2331.h: 1253: unsigned T1OSO :1;
[; ;pic18f2331.h: 1254: unsigned T1OSI :1;
[; ;pic18f2331.h: 1255: unsigned CCP1 :1;
[; ;pic18f2331.h: 1256: unsigned INT0 :1;
[; ;pic18f2331.h: 1257: unsigned INT1 :1;
[; ;pic18f2331.h: 1258: unsigned INT2 :1;
[; ;pic18f2331.h: 1259: unsigned TX :1;
[; ;pic18f2331.h: 1260: unsigned RX :1;
[; ;pic18f2331.h: 1261: };
[; ;pic18f2331.h: 1262: struct {
[; ;pic18f2331.h: 1263: unsigned T13CKI :1;
[; ;pic18f2331.h: 1264: unsigned CCP2 :1;
[; ;pic18f2331.h: 1265: unsigned :1;
[; ;pic18f2331.h: 1266: unsigned T0CKI :1;
[; ;pic18f2331.h: 1267: unsigned SDA :1;
[; ;pic18f2331.h: 1268: unsigned SCK :1;
[; ;pic18f2331.h: 1269: unsigned CK :1;
[; ;pic18f2331.h: 1270: unsigned DT :1;
[; ;pic18f2331.h: 1271: };
[; ;pic18f2331.h: 1272: struct {
[; ;pic18f2331.h: 1273: unsigned :1;
[; ;pic18f2331.h: 1274: unsigned NOT_FLTA :1;
[; ;pic18f2331.h: 1275: };
[; ;pic18f2331.h: 1276: struct {
[; ;pic18f2331.h: 1277: unsigned :2;
[; ;pic18f2331.h: 1278: unsigned NOT_FLTB :1;
[; ;pic18f2331.h: 1279: };
[; ;pic18f2331.h: 1280: struct {
[; ;pic18f2331.h: 1281: unsigned :6;
[; ;pic18f2331.h: 1282: unsigned NOT_SS :1;
[; ;pic18f2331.h: 1283: };
[; ;pic18f2331.h: 1284: struct {
[; ;pic18f2331.h: 1285: unsigned :1;
[; ;pic18f2331.h: 1286: unsigned nFLTA :1;
[; ;pic18f2331.h: 1287: unsigned nFLTB :1;
[; ;pic18f2331.h: 1288: unsigned T5CKI :1;
[; ;pic18f2331.h: 1289: unsigned SDI :1;
[; ;pic18f2331.h: 1290: unsigned SCL :1;
[; ;pic18f2331.h: 1291: unsigned nSS :1;
[; ;pic18f2331.h: 1292: unsigned SDO :1;
[; ;pic18f2331.h: 1293: };
[; ;pic18f2331.h: 1294: struct {
[; ;pic18f2331.h: 1295: unsigned :1;
[; ;pic18f2331.h: 1296: unsigned FLTA :1;
[; ;pic18f2331.h: 1297: unsigned FLTB :1;
[; ;pic18f2331.h: 1298: unsigned :3;
[; ;pic18f2331.h: 1299: unsigned SS :1;
[; ;pic18f2331.h: 1300: };
[; ;pic18f2331.h: 1301: struct {
[; ;pic18f2331.h: 1302: unsigned :1;
[; ;pic18f2331.h: 1303: unsigned PA2 :1;
[; ;pic18f2331.h: 1304: unsigned PA1 :1;
[; ;pic18f2331.h: 1305: };
[; ;pic18f2331.h: 1306: } PORTCbits_t;
[; ;pic18f2331.h: 1307: extern volatile PORTCbits_t PORTCbits @ 0xF82;
[; ;pic18f2331.h: 1502: extern volatile unsigned char PORTE @ 0xF84;
"1504
[; ;pic18f2331.h: 1504: asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
[; ;pic18f2331.h: 1507: typedef union {
[; ;pic18f2331.h: 1508: struct {
[; ;pic18f2331.h: 1509: unsigned :3;
[; ;pic18f2331.h: 1510: unsigned RE3 :1;
[; ;pic18f2331.h: 1511: };
[; ;pic18f2331.h: 1512: struct {
[; ;pic18f2331.h: 1513: unsigned :3;
[; ;pic18f2331.h: 1514: unsigned NOT_MCLR :1;
[; ;pic18f2331.h: 1515: };
[; ;pic18f2331.h: 1516: struct {
[; ;pic18f2331.h: 1517: unsigned :3;
[; ;pic18f2331.h: 1518: unsigned nMCLR :1;
[; ;pic18f2331.h: 1519: };
[; ;pic18f2331.h: 1520: struct {
[; ;pic18f2331.h: 1521: unsigned :3;
[; ;pic18f2331.h: 1522: unsigned MCLR :1;
[; ;pic18f2331.h: 1523: };
[; ;pic18f2331.h: 1524: struct {
[; ;pic18f2331.h: 1525: unsigned :3;
[; ;pic18f2331.h: 1526: unsigned CCP9E :1;
[; ;pic18f2331.h: 1527: };
[; ;pic18f2331.h: 1528: struct {
[; ;pic18f2331.h: 1529: unsigned :3;
[; ;pic18f2331.h: 1530: unsigned PC3E :1;
[; ;pic18f2331.h: 1531: };
[; ;pic18f2331.h: 1532: } PORTEbits_t;
[; ;pic18f2331.h: 1533: extern volatile PORTEbits_t PORTEbits @ 0xF84;
[; ;pic18f2331.h: 1568: extern volatile unsigned short TMR5 @ 0xF87;
"1570
[; ;pic18f2331.h: 1570: asm("TMR5 equ 0F87h");
[; <" TMR5 equ 0F87h ;# ">
[; ;pic18f2331.h: 1575: extern volatile unsigned char TMR5L @ 0xF87;
"1577
[; ;pic18f2331.h: 1577: asm("TMR5L equ 0F87h");
[; <" TMR5L equ 0F87h ;# ">
[; ;pic18f2331.h: 1582: extern volatile unsigned char TMR5H @ 0xF88;
"1584
[; ;pic18f2331.h: 1584: asm("TMR5H equ 0F88h");
[; <" TMR5H equ 0F88h ;# ">
[; ;pic18f2331.h: 1589: extern volatile unsigned char LATA @ 0xF89;
"1591
[; ;pic18f2331.h: 1591: asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
[; ;pic18f2331.h: 1594: typedef union {
[; ;pic18f2331.h: 1595: struct {
[; ;pic18f2331.h: 1596: unsigned LATA0 :1;
[; ;pic18f2331.h: 1597: unsigned LATA1 :1;
[; ;pic18f2331.h: 1598: unsigned LATA2 :1;
[; ;pic18f2331.h: 1599: unsigned LATA3 :1;
[; ;pic18f2331.h: 1600: unsigned LATA4 :1;
[; ;pic18f2331.h: 1601: unsigned :1;
[; ;pic18f2331.h: 1602: unsigned LATA6 :1;
[; ;pic18f2331.h: 1603: unsigned LATA7 :1;
[; ;pic18f2331.h: 1604: };
[; ;pic18f2331.h: 1605: struct {
[; ;pic18f2331.h: 1606: unsigned LA0 :1;
[; ;pic18f2331.h: 1607: unsigned LA1 :1;
[; ;pic18f2331.h: 1608: unsigned LA2 :1;
[; ;pic18f2331.h: 1609: unsigned LA3 :1;
[; ;pic18f2331.h: 1610: unsigned LA4 :1;
[; ;pic18f2331.h: 1611: unsigned :1;
[; ;pic18f2331.h: 1612: unsigned LA6 :1;
[; ;pic18f2331.h: 1613: unsigned LA7 :1;
[; ;pic18f2331.h: 1614: };
[; ;pic18f2331.h: 1615: } LATAbits_t;
[; ;pic18f2331.h: 1616: extern volatile LATAbits_t LATAbits @ 0xF89;
[; ;pic18f2331.h: 1691: extern volatile unsigned char LATB @ 0xF8A;
"1693
[; ;pic18f2331.h: 1693: asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
[; ;pic18f2331.h: 1696: typedef union {
[; ;pic18f2331.h: 1697: struct {
[; ;pic18f2331.h: 1698: unsigned LATB0 :1;
[; ;pic18f2331.h: 1699: unsigned LATB1 :1;
[; ;pic18f2331.h: 1700: unsigned LATB2 :1;
[; ;pic18f2331.h: 1701: unsigned LATB3 :1;
[; ;pic18f2331.h: 1702: unsigned LATB4 :1;
[; ;pic18f2331.h: 1703: unsigned LATB5 :1;
[; ;pic18f2331.h: 1704: unsigned LATB6 :1;
[; ;pic18f2331.h: 1705: unsigned LATB7 :1;
[; ;pic18f2331.h: 1706: };
[; ;pic18f2331.h: 1707: struct {
[; ;pic18f2331.h: 1708: unsigned LB0 :1;
[; ;pic18f2331.h: 1709: unsigned LB1 :1;
[; ;pic18f2331.h: 1710: unsigned LB2 :1;
[; ;pic18f2331.h: 1711: unsigned LB3 :1;
[; ;pic18f2331.h: 1712: unsigned LB4 :1;
[; ;pic18f2331.h: 1713: unsigned LB5 :1;
[; ;pic18f2331.h: 1714: unsigned LB6 :1;
[; ;pic18f2331.h: 1715: unsigned LB7 :1;
[; ;pic18f2331.h: 1716: };
[; ;pic18f2331.h: 1717: } LATBbits_t;
[; ;pic18f2331.h: 1718: extern volatile LATBbits_t LATBbits @ 0xF8A;
[; ;pic18f2331.h: 1803: extern volatile unsigned char LATC @ 0xF8B;
"1805
[; ;pic18f2331.h: 1805: asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
[; ;pic18f2331.h: 1808: typedef union {
[; ;pic18f2331.h: 1809: struct {
[; ;pic18f2331.h: 1810: unsigned LATC0 :1;
[; ;pic18f2331.h: 1811: unsigned LATC1 :1;
[; ;pic18f2331.h: 1812: unsigned LATC2 :1;
[; ;pic18f2331.h: 1813: unsigned LATC3 :1;
[; ;pic18f2331.h: 1814: unsigned LATC4 :1;
[; ;pic18f2331.h: 1815: unsigned LATC5 :1;
[; ;pic18f2331.h: 1816: unsigned LATC6 :1;
[; ;pic18f2331.h: 1817: unsigned LATC7 :1;
[; ;pic18f2331.h: 1818: };
[; ;pic18f2331.h: 1819: struct {
[; ;pic18f2331.h: 1820: unsigned LC0 :1;
[; ;pic18f2331.h: 1821: unsigned LC1 :1;
[; ;pic18f2331.h: 1822: unsigned LC2 :1;
[; ;pic18f2331.h: 1823: unsigned LC3 :1;
[; ;pic18f2331.h: 1824: unsigned LC4 :1;
[; ;pic18f2331.h: 1825: unsigned LC5 :1;
[; ;pic18f2331.h: 1826: unsigned LC6 :1;
[; ;pic18f2331.h: 1827: unsigned LC7 :1;
[; ;pic18f2331.h: 1828: };
[; ;pic18f2331.h: 1829: } LATCbits_t;
[; ;pic18f2331.h: 1830: extern volatile LATCbits_t LATCbits @ 0xF8B;
[; ;pic18f2331.h: 1915: extern volatile unsigned short PR5 @ 0xF90;
"1917
[; ;pic18f2331.h: 1917: asm("PR5 equ 0F90h");
[; <" PR5 equ 0F90h ;# ">
[; ;pic18f2331.h: 1922: extern volatile unsigned char PR5L @ 0xF90;
"1924
[; ;pic18f2331.h: 1924: asm("PR5L equ 0F90h");
[; <" PR5L equ 0F90h ;# ">
[; ;pic18f2331.h: 1929: extern volatile unsigned char PR5H @ 0xF91;
"1931
[; ;pic18f2331.h: 1931: asm("PR5H equ 0F91h");
[; <" PR5H equ 0F91h ;# ">
[; ;pic18f2331.h: 1936: extern volatile unsigned char TRISA @ 0xF92;
"1938
[; ;pic18f2331.h: 1938: asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
[; ;pic18f2331.h: 1941: extern volatile unsigned char DDRA @ 0xF92;
"1943
[; ;pic18f2331.h: 1943: asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
[; ;pic18f2331.h: 1946: typedef union {
[; ;pic18f2331.h: 1947: struct {
[; ;pic18f2331.h: 1948: unsigned TRISA0 :1;
[; ;pic18f2331.h: 1949: unsigned TRISA1 :1;
[; ;pic18f2331.h: 1950: unsigned TRISA2 :1;
[; ;pic18f2331.h: 1951: unsigned TRISA3 :1;
[; ;pic18f2331.h: 1952: unsigned TRISA4 :1;
[; ;pic18f2331.h: 1953: unsigned :1;
[; ;pic18f2331.h: 1954: unsigned TRISA6 :1;
[; ;pic18f2331.h: 1955: unsigned TRISA7 :1;
[; ;pic18f2331.h: 1956: };
[; ;pic18f2331.h: 1957: struct {
[; ;pic18f2331.h: 1958: unsigned RA0 :1;
[; ;pic18f2331.h: 1959: unsigned RA1 :1;
[; ;pic18f2331.h: 1960: unsigned RA2 :1;
[; ;pic18f2331.h: 1961: unsigned RA3 :1;
[; ;pic18f2331.h: 1962: unsigned RA4 :1;
[; ;pic18f2331.h: 1963: unsigned :1;
[; ;pic18f2331.h: 1964: unsigned RA6 :1;
[; ;pic18f2331.h: 1965: unsigned RA7 :1;
[; ;pic18f2331.h: 1966: };
[; ;pic18f2331.h: 1967: } TRISAbits_t;
[; ;pic18f2331.h: 1968: extern volatile TRISAbits_t TRISAbits @ 0xF92;
[; ;pic18f2331.h: 2041: typedef union {
[; ;pic18f2331.h: 2042: struct {
[; ;pic18f2331.h: 2043: unsigned TRISA0 :1;
[; ;pic18f2331.h: 2044: unsigned TRISA1 :1;
[; ;pic18f2331.h: 2045: unsigned TRISA2 :1;
[; ;pic18f2331.h: 2046: unsigned TRISA3 :1;
[; ;pic18f2331.h: 2047: unsigned TRISA4 :1;
[; ;pic18f2331.h: 2048: unsigned :1;
[; ;pic18f2331.h: 2049: unsigned TRISA6 :1;
[; ;pic18f2331.h: 2050: unsigned TRISA7 :1;
[; ;pic18f2331.h: 2051: };
[; ;pic18f2331.h: 2052: struct {
[; ;pic18f2331.h: 2053: unsigned RA0 :1;
[; ;pic18f2331.h: 2054: unsigned RA1 :1;
[; ;pic18f2331.h: 2055: unsigned RA2 :1;
[; ;pic18f2331.h: 2056: unsigned RA3 :1;
[; ;pic18f2331.h: 2057: unsigned RA4 :1;
[; ;pic18f2331.h: 2058: unsigned :1;
[; ;pic18f2331.h: 2059: unsigned RA6 :1;
[; ;pic18f2331.h: 2060: unsigned RA7 :1;
[; ;pic18f2331.h: 2061: };
[; ;pic18f2331.h: 2062: } DDRAbits_t;
[; ;pic18f2331.h: 2063: extern volatile DDRAbits_t DDRAbits @ 0xF92;
[; ;pic18f2331.h: 2138: extern volatile unsigned char TRISB @ 0xF93;
"2140
[; ;pic18f2331.h: 2140: asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
[; ;pic18f2331.h: 2143: extern volatile unsigned char DDRB @ 0xF93;
"2145
[; ;pic18f2331.h: 2145: asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
[; ;pic18f2331.h: 2148: typedef union {
[; ;pic18f2331.h: 2149: struct {
[; ;pic18f2331.h: 2150: unsigned TRISB0 :1;
[; ;pic18f2331.h: 2151: unsigned TRISB1 :1;
[; ;pic18f2331.h: 2152: unsigned TRISB2 :1;
[; ;pic18f2331.h: 2153: unsigned TRISB3 :1;
[; ;pic18f2331.h: 2154: unsigned TRISB4 :1;
[; ;pic18f2331.h: 2155: unsigned TRISB5 :1;
[; ;pic18f2331.h: 2156: unsigned TRISB6 :1;
[; ;pic18f2331.h: 2157: unsigned TRISB7 :1;
[; ;pic18f2331.h: 2158: };
[; ;pic18f2331.h: 2159: struct {
[; ;pic18f2331.h: 2160: unsigned RB0 :1;
[; ;pic18f2331.h: 2161: unsigned RB1 :1;
[; ;pic18f2331.h: 2162: unsigned RB2 :1;
[; ;pic18f2331.h: 2163: unsigned RB3 :1;
[; ;pic18f2331.h: 2164: unsigned RB4 :1;
[; ;pic18f2331.h: 2165: unsigned RB5 :1;
[; ;pic18f2331.h: 2166: unsigned RB6 :1;
[; ;pic18f2331.h: 2167: unsigned RB7 :1;
[; ;pic18f2331.h: 2168: };
[; ;pic18f2331.h: 2169: } TRISBbits_t;
[; ;pic18f2331.h: 2170: extern volatile TRISBbits_t TRISBbits @ 0xF93;
[; ;pic18f2331.h: 2253: typedef union {
[; ;pic18f2331.h: 2254: struct {
[; ;pic18f2331.h: 2255: unsigned TRISB0 :1;
[; ;pic18f2331.h: 2256: unsigned TRISB1 :1;
[; ;pic18f2331.h: 2257: unsigned TRISB2 :1;
[; ;pic18f2331.h: 2258: unsigned TRISB3 :1;
[; ;pic18f2331.h: 2259: unsigned TRISB4 :1;
[; ;pic18f2331.h: 2260: unsigned TRISB5 :1;
[; ;pic18f2331.h: 2261: unsigned TRISB6 :1;
[; ;pic18f2331.h: 2262: unsigned TRISB7 :1;
[; ;pic18f2331.h: 2263: };
[; ;pic18f2331.h: 2264: struct {
[; ;pic18f2331.h: 2265: unsigned RB0 :1;
[; ;pic18f2331.h: 2266: unsigned RB1 :1;
[; ;pic18f2331.h: 2267: unsigned RB2 :1;
[; ;pic18f2331.h: 2268: unsigned RB3 :1;
[; ;pic18f2331.h: 2269: unsigned RB4 :1;
[; ;pic18f2331.h: 2270: unsigned RB5 :1;
[; ;pic18f2331.h: 2271: unsigned RB6 :1;
[; ;pic18f2331.h: 2272: unsigned RB7 :1;
[; ;pic18f2331.h: 2273: };
[; ;pic18f2331.h: 2274: } DDRBbits_t;
[; ;pic18f2331.h: 2275: extern volatile DDRBbits_t DDRBbits @ 0xF93;
[; ;pic18f2331.h: 2360: extern volatile unsigned char TRISC @ 0xF94;
"2362
[; ;pic18f2331.h: 2362: asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
[; ;pic18f2331.h: 2365: extern volatile unsigned char DDRC @ 0xF94;
"2367
[; ;pic18f2331.h: 2367: asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
[; ;pic18f2331.h: 2370: typedef union {
[; ;pic18f2331.h: 2371: struct {
[; ;pic18f2331.h: 2372: unsigned TRISC0 :1;
[; ;pic18f2331.h: 2373: unsigned TRISC1 :1;
[; ;pic18f2331.h: 2374: unsigned TRISC2 :1;
[; ;pic18f2331.h: 2375: unsigned TRISC3 :1;
[; ;pic18f2331.h: 2376: unsigned TRISC4 :1;
[; ;pic18f2331.h: 2377: unsigned TRISC5 :1;
[; ;pic18f2331.h: 2378: unsigned TRISC6 :1;
[; ;pic18f2331.h: 2379: unsigned TRISC7 :1;
[; ;pic18f2331.h: 2380: };
[; ;pic18f2331.h: 2381: struct {
[; ;pic18f2331.h: 2382: unsigned RC0 :1;
[; ;pic18f2331.h: 2383: unsigned RC1 :1;
[; ;pic18f2331.h: 2384: unsigned RC2 :1;
[; ;pic18f2331.h: 2385: unsigned RC3 :1;
[; ;pic18f2331.h: 2386: unsigned RC4 :1;
[; ;pic18f2331.h: 2387: unsigned RC5 :1;
[; ;pic18f2331.h: 2388: unsigned RC6 :1;
[; ;pic18f2331.h: 2389: unsigned RC7 :1;
[; ;pic18f2331.h: 2390: };
[; ;pic18f2331.h: 2391: } TRISCbits_t;
[; ;pic18f2331.h: 2392: extern volatile TRISCbits_t TRISCbits @ 0xF94;
[; ;pic18f2331.h: 2475: typedef union {
[; ;pic18f2331.h: 2476: struct {
[; ;pic18f2331.h: 2477: unsigned TRISC0 :1;
[; ;pic18f2331.h: 2478: unsigned TRISC1 :1;
[; ;pic18f2331.h: 2479: unsigned TRISC2 :1;
[; ;pic18f2331.h: 2480: unsigned TRISC3 :1;
[; ;pic18f2331.h: 2481: unsigned TRISC4 :1;
[; ;pic18f2331.h: 2482: unsigned TRISC5 :1;
[; ;pic18f2331.h: 2483: unsigned TRISC6 :1;
[; ;pic18f2331.h: 2484: unsigned TRISC7 :1;
[; ;pic18f2331.h: 2485: };
[; ;pic18f2331.h: 2486: struct {
[; ;pic18f2331.h: 2487: unsigned RC0 :1;
[; ;pic18f2331.h: 2488: unsigned RC1 :1;
[; ;pic18f2331.h: 2489: unsigned RC2 :1;
[; ;pic18f2331.h: 2490: unsigned RC3 :1;
[; ;pic18f2331.h: 2491: unsigned RC4 :1;
[; ;pic18f2331.h: 2492: unsigned RC5 :1;
[; ;pic18f2331.h: 2493: unsigned RC6 :1;
[; ;pic18f2331.h: 2494: unsigned RC7 :1;
[; ;pic18f2331.h: 2495: };
[; ;pic18f2331.h: 2496: } DDRCbits_t;
[; ;pic18f2331.h: 2497: extern volatile DDRCbits_t DDRCbits @ 0xF94;
[; ;pic18f2331.h: 2582: extern volatile unsigned char ADCHS @ 0xF99;
"2584
[; ;pic18f2331.h: 2584: asm("ADCHS equ 0F99h");
[; <" ADCHS equ 0F99h ;# ">
[; ;pic18f2331.h: 2587: typedef union {
[; ;pic18f2331.h: 2588: struct {
[; ;pic18f2331.h: 2589: unsigned SASEL :2;
[; ;pic18f2331.h: 2590: unsigned SCSEL :2;
[; ;pic18f2331.h: 2591: unsigned SBSEL :2;
[; ;pic18f2331.h: 2592: unsigned SDSEL :2;
[; ;pic18f2331.h: 2593: };
[; ;pic18f2331.h: 2594: struct {
[; ;pic18f2331.h: 2595: unsigned GASEL0 :1;
[; ;pic18f2331.h: 2596: unsigned GASEL1 :1;
[; ;pic18f2331.h: 2597: unsigned GCSEL0 :1;
[; ;pic18f2331.h: 2598: unsigned GCSEL1 :1;
[; ;pic18f2331.h: 2599: unsigned GBSEL0 :1;
[; ;pic18f2331.h: 2600: unsigned GBSEL1 :1;
[; ;pic18f2331.h: 2601: unsigned GDSEL0 :1;
[; ;pic18f2331.h: 2602: unsigned GDSEL1 :1;
[; ;pic18f2331.h: 2603: };
[; ;pic18f2331.h: 2604: struct {
[; ;pic18f2331.h: 2605: unsigned SASEL0 :1;
[; ;pic18f2331.h: 2606: unsigned SASEL1 :1;
[; ;pic18f2331.h: 2607: unsigned SCSEL0 :1;
[; ;pic18f2331.h: 2608: unsigned SCSEL1 :1;
[; ;pic18f2331.h: 2609: unsigned SBSEL0 :1;
[; ;pic18f2331.h: 2610: unsigned SBSEL1 :1;
[; ;pic18f2331.h: 2611: unsigned SDSEL0 :1;
[; ;pic18f2331.h: 2612: unsigned SDSEL1 :1;
[; ;pic18f2331.h: 2613: };
[; ;pic18f2331.h: 2614: } ADCHSbits_t;
[; ;pic18f2331.h: 2615: extern volatile ADCHSbits_t ADCHSbits @ 0xF99;
[; ;pic18f2331.h: 2720: extern volatile unsigned char ADCON3 @ 0xF9A;
"2722
[; ;pic18f2331.h: 2722: asm("ADCON3 equ 0F9Ah");
[; <" ADCON3 equ 0F9Ah ;# ">
[; ;pic18f2331.h: 2725: typedef union {
[; ;pic18f2331.h: 2726: struct {
[; ;pic18f2331.h: 2727: unsigned SSRC :5;
[; ;pic18f2331.h: 2728: unsigned :1;
[; ;pic18f2331.h: 2729: unsigned ADRS :2;
[; ;pic18f2331.h: 2730: };
[; ;pic18f2331.h: 2731: struct {
[; ;pic18f2331.h: 2732: unsigned SSRC0 :1;
[; ;pic18f2331.h: 2733: unsigned SSRC1 :1;
[; ;pic18f2331.h: 2734: unsigned SSRC2 :1;
[; ;pic18f2331.h: 2735: unsigned SSRC3 :1;
[; ;pic18f2331.h: 2736: unsigned SSRC4 :1;
[; ;pic18f2331.h: 2737: unsigned :1;
[; ;pic18f2331.h: 2738: unsigned ADRS0 :1;
[; ;pic18f2331.h: 2739: unsigned ADRS1 :1;
[; ;pic18f2331.h: 2740: };
[; ;pic18f2331.h: 2741: } ADCON3bits_t;
[; ;pic18f2331.h: 2742: extern volatile ADCON3bits_t ADCON3bits @ 0xF9A;
[; ;pic18f2331.h: 2792: extern volatile unsigned char OSCTUNE @ 0xF9B;
"2794
[; ;pic18f2331.h: 2794: asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
[; ;pic18f2331.h: 2797: typedef union {
[; ;pic18f2331.h: 2798: struct {
[; ;pic18f2331.h: 2799: unsigned TUN :6;
[; ;pic18f2331.h: 2800: };
[; ;pic18f2331.h: 2801: struct {
[; ;pic18f2331.h: 2802: unsigned TUN0 :1;
[; ;pic18f2331.h: 2803: unsigned TUN1 :1;
[; ;pic18f2331.h: 2804: unsigned TUN2 :1;
[; ;pic18f2331.h: 2805: unsigned TUN3 :1;
[; ;pic18f2331.h: 2806: unsigned TUN4 :1;
[; ;pic18f2331.h: 2807: unsigned TUN5 :1;
[; ;pic18f2331.h: 2808: };
[; ;pic18f2331.h: 2809: } OSCTUNEbits_t;
[; ;pic18f2331.h: 2810: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0xF9B;
[; ;pic18f2331.h: 2850: extern volatile unsigned char PIE1 @ 0xF9D;
"2852
[; ;pic18f2331.h: 2852: asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
[; ;pic18f2331.h: 2855: typedef union {
[; ;pic18f2331.h: 2856: struct {
[; ;pic18f2331.h: 2857: unsigned TMR1IE :1;
[; ;pic18f2331.h: 2858: unsigned TMR2IE :1;
[; ;pic18f2331.h: 2859: unsigned CCP1IE :1;
[; ;pic18f2331.h: 2860: unsigned SSPIE :1;
[; ;pic18f2331.h: 2861: unsigned TXIE :1;
[; ;pic18f2331.h: 2862: unsigned RCIE :1;
[; ;pic18f2331.h: 2863: unsigned ADIE :1;
[; ;pic18f2331.h: 2864: };
[; ;pic18f2331.h: 2865: struct {
[; ;pic18f2331.h: 2866: unsigned :4;
[; ;pic18f2331.h: 2867: unsigned TBIE :1;
[; ;pic18f2331.h: 2868: };
[; ;pic18f2331.h: 2869: struct {
[; ;pic18f2331.h: 2870: unsigned :4;
[; ;pic18f2331.h: 2871: unsigned TX1IE :1;
[; ;pic18f2331.h: 2872: unsigned RC1IE :1;
[; ;pic18f2331.h: 2873: };
[; ;pic18f2331.h: 2874: } PIE1bits_t;
[; ;pic18f2331.h: 2875: extern volatile PIE1bits_t PIE1bits @ 0xF9D;
[; ;pic18f2331.h: 2930: extern volatile unsigned char PIR1 @ 0xF9E;
"2932
[; ;pic18f2331.h: 2932: asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
[; ;pic18f2331.h: 2935: typedef union {
[; ;pic18f2331.h: 2936: struct {
[; ;pic18f2331.h: 2937: unsigned TMR1IF :1;
[; ;pic18f2331.h: 2938: unsigned TMR2IF :1;
[; ;pic18f2331.h: 2939: unsigned CCP1IF :1;
[; ;pic18f2331.h: 2940: unsigned SSPIF :1;
[; ;pic18f2331.h: 2941: unsigned TXIF :1;
[; ;pic18f2331.h: 2942: unsigned RCIF :1;
[; ;pic18f2331.h: 2943: unsigned ADIF :1;
[; ;pic18f2331.h: 2944: };
[; ;pic18f2331.h: 2945: struct {
[; ;pic18f2331.h: 2946: unsigned :4;
[; ;pic18f2331.h: 2947: unsigned TBIF :1;
[; ;pic18f2331.h: 2948: };
[; ;pic18f2331.h: 2949: struct {
[; ;pic18f2331.h: 2950: unsigned :4;
[; ;pic18f2331.h: 2951: unsigned TX1IF :1;
[; ;pic18f2331.h: 2952: unsigned RC1IF :1;
[; ;pic18f2331.h: 2953: };
[; ;pic18f2331.h: 2954: } PIR1bits_t;
[; ;pic18f2331.h: 2955: extern volatile PIR1bits_t PIR1bits @ 0xF9E;
[; ;pic18f2331.h: 3010: extern volatile unsigned char IPR1 @ 0xF9F;
"3012
[; ;pic18f2331.h: 3012: asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
[; ;pic18f2331.h: 3015: typedef union {
[; ;pic18f2331.h: 3016: struct {
[; ;pic18f2331.h: 3017: unsigned TMR1IP :1;
[; ;pic18f2331.h: 3018: unsigned TMR2IP :1;
[; ;pic18f2331.h: 3019: unsigned CCP1IP :1;
[; ;pic18f2331.h: 3020: unsigned SSPIP :1;
[; ;pic18f2331.h: 3021: unsigned TXIP :1;
[; ;pic18f2331.h: 3022: unsigned RCIP :1;
[; ;pic18f2331.h: 3023: unsigned ADIP :1;
[; ;pic18f2331.h: 3024: };
[; ;pic18f2331.h: 3025: struct {
[; ;pic18f2331.h: 3026: unsigned :4;
[; ;pic18f2331.h: 3027: unsigned TBIP :1;
[; ;pic18f2331.h: 3028: };
[; ;pic18f2331.h: 3029: struct {
[; ;pic18f2331.h: 3030: unsigned :4;
[; ;pic18f2331.h: 3031: unsigned TX1IP :1;
[; ;pic18f2331.h: 3032: unsigned RC1IP :1;
[; ;pic18f2331.h: 3033: };
[; ;pic18f2331.h: 3034: } IPR1bits_t;
[; ;pic18f2331.h: 3035: extern volatile IPR1bits_t IPR1bits @ 0xF9F;
[; ;pic18f2331.h: 3090: extern volatile unsigned char PIE2 @ 0xFA0;
"3092
[; ;pic18f2331.h: 3092: asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
[; ;pic18f2331.h: 3095: typedef union {
[; ;pic18f2331.h: 3096: struct {
[; ;pic18f2331.h: 3097: unsigned CCP2IE :1;
[; ;pic18f2331.h: 3098: unsigned :1;
[; ;pic18f2331.h: 3099: unsigned LVDIE :1;
[; ;pic18f2331.h: 3100: unsigned :1;
[; ;pic18f2331.h: 3101: unsigned EEIE :1;
[; ;pic18f2331.h: 3102: unsigned :2;
[; ;pic18f2331.h: 3103: unsigned OSFIE :1;
[; ;pic18f2331.h: 3104: };
[; ;pic18f2331.h: 3105: } PIE2bits_t;
[; ;pic18f2331.h: 3106: extern volatile PIE2bits_t PIE2bits @ 0xFA0;
[; ;pic18f2331.h: 3131: extern volatile unsigned char PIR2 @ 0xFA1;
"3133
[; ;pic18f2331.h: 3133: asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
[; ;pic18f2331.h: 3136: typedef union {
[; ;pic18f2331.h: 3137: struct {
[; ;pic18f2331.h: 3138: unsigned CCP2IF :1;
[; ;pic18f2331.h: 3139: unsigned :1;
[; ;pic18f2331.h: 3140: unsigned LVDIF :1;
[; ;pic18f2331.h: 3141: unsigned :1;
[; ;pic18f2331.h: 3142: unsigned EEIF :1;
[; ;pic18f2331.h: 3143: unsigned :2;
[; ;pic18f2331.h: 3144: unsigned OSFIF :1;
[; ;pic18f2331.h: 3145: };
[; ;pic18f2331.h: 3146: } PIR2bits_t;
[; ;pic18f2331.h: 3147: extern volatile PIR2bits_t PIR2bits @ 0xFA1;
[; ;pic18f2331.h: 3172: extern volatile unsigned char IPR2 @ 0xFA2;
"3174
[; ;pic18f2331.h: 3174: asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
[; ;pic18f2331.h: 3177: typedef union {
[; ;pic18f2331.h: 3178: struct {
[; ;pic18f2331.h: 3179: unsigned CCP2IP :1;
[; ;pic18f2331.h: 3180: unsigned :1;
[; ;pic18f2331.h: 3181: unsigned LVDIP :1;
[; ;pic18f2331.h: 3182: unsigned :1;
[; ;pic18f2331.h: 3183: unsigned EEIP :1;
[; ;pic18f2331.h: 3184: unsigned :2;
[; ;pic18f2331.h: 3185: unsigned OSFIP :1;
[; ;pic18f2331.h: 3186: };
[; ;pic18f2331.h: 3187: } IPR2bits_t;
[; ;pic18f2331.h: 3188: extern volatile IPR2bits_t IPR2bits @ 0xFA2;
[; ;pic18f2331.h: 3213: extern volatile unsigned char PIE3 @ 0xFA3;
"3215
[; ;pic18f2331.h: 3215: asm("PIE3 equ 0FA3h");
[; <" PIE3 equ 0FA3h ;# ">
[; ;pic18f2331.h: 3218: typedef union {
[; ;pic18f2331.h: 3219: struct {
[; ;pic18f2331.h: 3220: unsigned TMR5IE :1;
[; ;pic18f2331.h: 3221: unsigned IC1IE :1;
[; ;pic18f2331.h: 3222: unsigned IC2QEIE :1;
[; ;pic18f2331.h: 3223: unsigned IC3DRIE :1;
[; ;pic18f2331.h: 3224: unsigned PTIE :1;
[; ;pic18f2331.h: 3225: };
[; ;pic18f2331.h: 3226: struct {
[; ;pic18f2331.h: 3227: unsigned RXB0IE :1;
[; ;pic18f2331.h: 3228: unsigned RXB1IE :1;
[; ;pic18f2331.h: 3229: unsigned TXB0IE :1;
[; ;pic18f2331.h: 3230: unsigned TXB1IE :1;
[; ;pic18f2331.h: 3231: unsigned TXB2IE :1;
[; ;pic18f2331.h: 3232: };
[; ;pic18f2331.h: 3233: struct {
[; ;pic18f2331.h: 3234: unsigned :1;
[; ;pic18f2331.h: 3235: unsigned RXBNIE :1;
[; ;pic18f2331.h: 3236: unsigned :2;
[; ;pic18f2331.h: 3237: unsigned TXBNIE :1;
[; ;pic18f2331.h: 3238: };
[; ;pic18f2331.h: 3239: } PIE3bits_t;
[; ;pic18f2331.h: 3240: extern volatile PIE3bits_t PIE3bits @ 0xFA3;
[; ;pic18f2331.h: 3305: extern volatile unsigned char PIR3 @ 0xFA4;
"3307
[; ;pic18f2331.h: 3307: asm("PIR3 equ 0FA4h");
[; <" PIR3 equ 0FA4h ;# ">
[; ;pic18f2331.h: 3310: typedef union {
[; ;pic18f2331.h: 3311: struct {
[; ;pic18f2331.h: 3312: unsigned TMR5IF :1;
[; ;pic18f2331.h: 3313: unsigned IC1IF :1;
[; ;pic18f2331.h: 3314: unsigned IC2QEIF :1;
[; ;pic18f2331.h: 3315: unsigned IC3DRIF :1;
[; ;pic18f2331.h: 3316: unsigned PTIF :1;
[; ;pic18f2331.h: 3317: };
[; ;pic18f2331.h: 3318: struct {
[; ;pic18f2331.h: 3319: unsigned :1;
[; ;pic18f2331.h: 3320: unsigned RXBNIF :1;
[; ;pic18f2331.h: 3321: unsigned :2;
[; ;pic18f2331.h: 3322: unsigned TXBNIF :1;
[; ;pic18f2331.h: 3323: };
[; ;pic18f2331.h: 3324: } PIR3bits_t;
[; ;pic18f2331.h: 3325: extern volatile PIR3bits_t PIR3bits @ 0xFA4;
[; ;pic18f2331.h: 3365: extern volatile unsigned char IPR3 @ 0xFA5;
"3367
[; ;pic18f2331.h: 3367: asm("IPR3 equ 0FA5h");
[; <" IPR3 equ 0FA5h ;# ">
[; ;pic18f2331.h: 3370: typedef union {
[; ;pic18f2331.h: 3371: struct {
[; ;pic18f2331.h: 3372: unsigned TMR5IP :1;
[; ;pic18f2331.h: 3373: unsigned IC1IP :1;
[; ;pic18f2331.h: 3374: unsigned IC2QEIP :1;
[; ;pic18f2331.h: 3375: unsigned IC3DRIP :1;
[; ;pic18f2331.h: 3376: unsigned PTIP :1;
[; ;pic18f2331.h: 3377: };
[; ;pic18f2331.h: 3378: struct {
[; ;pic18f2331.h: 3379: unsigned :1;
[; ;pic18f2331.h: 3380: unsigned RXBNIP :1;
[; ;pic18f2331.h: 3381: unsigned :2;
[; ;pic18f2331.h: 3382: unsigned TXBNIP :1;
[; ;pic18f2331.h: 3383: };
[; ;pic18f2331.h: 3384: } IPR3bits_t;
[; ;pic18f2331.h: 3385: extern volatile IPR3bits_t IPR3bits @ 0xFA5;
[; ;pic18f2331.h: 3425: extern volatile unsigned char EECON1 @ 0xFA6;
"3427
[; ;pic18f2331.h: 3427: asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
[; ;pic18f2331.h: 3430: typedef union {
[; ;pic18f2331.h: 3431: struct {
[; ;pic18f2331.h: 3432: unsigned RD :1;
[; ;pic18f2331.h: 3433: unsigned WR :1;
[; ;pic18f2331.h: 3434: unsigned WREN :1;
[; ;pic18f2331.h: 3435: unsigned WRERR :1;
[; ;pic18f2331.h: 3436: unsigned FREE :1;
[; ;pic18f2331.h: 3437: unsigned :1;
[; ;pic18f2331.h: 3438: unsigned CFGS :1;
[; ;pic18f2331.h: 3439: unsigned EEPGD :1;
[; ;pic18f2331.h: 3440: };
[; ;pic18f2331.h: 3441: struct {
[; ;pic18f2331.h: 3442: unsigned :6;
[; ;pic18f2331.h: 3443: unsigned EEFS :1;
[; ;pic18f2331.h: 3444: };
[; ;pic18f2331.h: 3445: } EECON1bits_t;
[; ;pic18f2331.h: 3446: extern volatile EECON1bits_t EECON1bits @ 0xFA6;
[; ;pic18f2331.h: 3491: extern volatile unsigned char EECON2 @ 0xFA7;
"3493
[; ;pic18f2331.h: 3493: asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
[; ;pic18f2331.h: 3498: extern volatile unsigned char EEDATA @ 0xFA8;
"3500
[; ;pic18f2331.h: 3500: asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
[; ;pic18f2331.h: 3505: extern volatile unsigned char EEADR @ 0xFA9;
"3507
[; ;pic18f2331.h: 3507: asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
[; ;pic18f2331.h: 3512: extern volatile unsigned char BAUDCON @ 0xFAA;
"3514
[; ;pic18f2331.h: 3514: asm("BAUDCON equ 0FAAh");
[; <" BAUDCON equ 0FAAh ;# ">
[; ;pic18f2331.h: 3517: extern volatile unsigned char BAUDCTL @ 0xFAA;
"3519
[; ;pic18f2331.h: 3519: asm("BAUDCTL equ 0FAAh");
[; <" BAUDCTL equ 0FAAh ;# ">
[; ;pic18f2331.h: 3522: typedef union {
[; ;pic18f2331.h: 3523: struct {
[; ;pic18f2331.h: 3524: unsigned ABDEN :1;
[; ;pic18f2331.h: 3525: unsigned WUE :1;
[; ;pic18f2331.h: 3526: unsigned :1;
[; ;pic18f2331.h: 3527: unsigned BRG16 :1;
[; ;pic18f2331.h: 3528: unsigned TXCKP :1;
[; ;pic18f2331.h: 3529: unsigned RXDTP :1;
[; ;pic18f2331.h: 3530: unsigned RCIDL :1;
[; ;pic18f2331.h: 3531: unsigned ABDOVF :1;
[; ;pic18f2331.h: 3532: };
[; ;pic18f2331.h: 3533: struct {
[; ;pic18f2331.h: 3534: unsigned :4;
[; ;pic18f2331.h: 3535: unsigned SCKP :1;
[; ;pic18f2331.h: 3536: unsigned :1;
[; ;pic18f2331.h: 3537: unsigned RCMT :1;
[; ;pic18f2331.h: 3538: };
[; ;pic18f2331.h: 3539: struct {
[; ;pic18f2331.h: 3540: unsigned :5;
[; ;pic18f2331.h: 3541: unsigned RXCKP :1;
[; ;pic18f2331.h: 3542: };
[; ;pic18f2331.h: 3543: struct {
[; ;pic18f2331.h: 3544: unsigned :1;
[; ;pic18f2331.h: 3545: unsigned W4E :1;
[; ;pic18f2331.h: 3546: };
[; ;pic18f2331.h: 3547: } BAUDCONbits_t;
[; ;pic18f2331.h: 3548: extern volatile BAUDCONbits_t BAUDCONbits @ 0xFAA;
[; ;pic18f2331.h: 3606: typedef union {
[; ;pic18f2331.h: 3607: struct {
[; ;pic18f2331.h: 3608: unsigned ABDEN :1;
[; ;pic18f2331.h: 3609: unsigned WUE :1;
[; ;pic18f2331.h: 3610: unsigned :1;
[; ;pic18f2331.h: 3611: unsigned BRG16 :1;
[; ;pic18f2331.h: 3612: unsigned TXCKP :1;
[; ;pic18f2331.h: 3613: unsigned RXDTP :1;
[; ;pic18f2331.h: 3614: unsigned RCIDL :1;
[; ;pic18f2331.h: 3615: unsigned ABDOVF :1;
[; ;pic18f2331.h: 3616: };
[; ;pic18f2331.h: 3617: struct {
[; ;pic18f2331.h: 3618: unsigned :4;
[; ;pic18f2331.h: 3619: unsigned SCKP :1;
[; ;pic18f2331.h: 3620: unsigned :1;
[; ;pic18f2331.h: 3621: unsigned RCMT :1;
[; ;pic18f2331.h: 3622: };
[; ;pic18f2331.h: 3623: struct {
[; ;pic18f2331.h: 3624: unsigned :5;
[; ;pic18f2331.h: 3625: unsigned RXCKP :1;
[; ;pic18f2331.h: 3626: };
[; ;pic18f2331.h: 3627: struct {
[; ;pic18f2331.h: 3628: unsigned :1;
[; ;pic18f2331.h: 3629: unsigned W4E :1;
[; ;pic18f2331.h: 3630: };
[; ;pic18f2331.h: 3631: } BAUDCTLbits_t;
[; ;pic18f2331.h: 3632: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0xFAA;
[; ;pic18f2331.h: 3692: extern volatile unsigned char RCSTA @ 0xFAB;
"3694
[; ;pic18f2331.h: 3694: asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
[; ;pic18f2331.h: 3697: extern volatile unsigned char RCSTA1 @ 0xFAB;
"3699
[; ;pic18f2331.h: 3699: asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
[; ;pic18f2331.h: 3702: typedef union {
[; ;pic18f2331.h: 3703: struct {
[; ;pic18f2331.h: 3704: unsigned RX9D :1;
[; ;pic18f2331.h: 3705: unsigned OERR :1;
[; ;pic18f2331.h: 3706: unsigned FERR :1;
[; ;pic18f2331.h: 3707: unsigned ADDEN :1;
[; ;pic18f2331.h: 3708: unsigned CREN :1;
[; ;pic18f2331.h: 3709: unsigned SREN :1;
[; ;pic18f2331.h: 3710: unsigned RX9 :1;
[; ;pic18f2331.h: 3711: unsigned SPEN :1;
[; ;pic18f2331.h: 3712: };
[; ;pic18f2331.h: 3713: struct {
[; ;pic18f2331.h: 3714: unsigned :3;
[; ;pic18f2331.h: 3715: unsigned ADEN :1;
[; ;pic18f2331.h: 3716: };
[; ;pic18f2331.h: 3717: struct {
[; ;pic18f2331.h: 3718: unsigned :5;
[; ;pic18f2331.h: 3719: unsigned SRENA :1;
[; ;pic18f2331.h: 3720: };
[; ;pic18f2331.h: 3721: struct {
[; ;pic18f2331.h: 3722: unsigned :6;
[; ;pic18f2331.h: 3723: unsigned RC8_9 :1;
[; ;pic18f2331.h: 3724: };
[; ;pic18f2331.h: 3725: struct {
[; ;pic18f2331.h: 3726: unsigned :6;
[; ;pic18f2331.h: 3727: unsigned RC9 :1;
[; ;pic18f2331.h: 3728: };
[; ;pic18f2331.h: 3729: struct {
[; ;pic18f2331.h: 3730: unsigned RCD8 :1;
[; ;pic18f2331.h: 3731: };
[; ;pic18f2331.h: 3732: } RCSTAbits_t;
[; ;pic18f2331.h: 3733: extern volatile RCSTAbits_t RCSTAbits @ 0xFAB;
[; ;pic18f2331.h: 3801: typedef union {
[; ;pic18f2331.h: 3802: struct {
[; ;pic18f2331.h: 3803: unsigned RX9D :1;
[; ;pic18f2331.h: 3804: unsigned OERR :1;
[; ;pic18f2331.h: 3805: unsigned FERR :1;
[; ;pic18f2331.h: 3806: unsigned ADDEN :1;
[; ;pic18f2331.h: 3807: unsigned CREN :1;
[; ;pic18f2331.h: 3808: unsigned SREN :1;
[; ;pic18f2331.h: 3809: unsigned RX9 :1;
[; ;pic18f2331.h: 3810: unsigned SPEN :1;
[; ;pic18f2331.h: 3811: };
[; ;pic18f2331.h: 3812: struct {
[; ;pic18f2331.h: 3813: unsigned :3;
[; ;pic18f2331.h: 3814: unsigned ADEN :1;
[; ;pic18f2331.h: 3815: };
[; ;pic18f2331.h: 3816: struct {
[; ;pic18f2331.h: 3817: unsigned :5;
[; ;pic18f2331.h: 3818: unsigned SRENA :1;
[; ;pic18f2331.h: 3819: };
[; ;pic18f2331.h: 3820: struct {
[; ;pic18f2331.h: 3821: unsigned :6;
[; ;pic18f2331.h: 3822: unsigned RC8_9 :1;
[; ;pic18f2331.h: 3823: };
[; ;pic18f2331.h: 3824: struct {
[; ;pic18f2331.h: 3825: unsigned :6;
[; ;pic18f2331.h: 3826: unsigned RC9 :1;
[; ;pic18f2331.h: 3827: };
[; ;pic18f2331.h: 3828: struct {
[; ;pic18f2331.h: 3829: unsigned RCD8 :1;
[; ;pic18f2331.h: 3830: };
[; ;pic18f2331.h: 3831: } RCSTA1bits_t;
[; ;pic18f2331.h: 3832: extern volatile RCSTA1bits_t RCSTA1bits @ 0xFAB;
[; ;pic18f2331.h: 3902: extern volatile unsigned char TXSTA @ 0xFAC;
"3904
[; ;pic18f2331.h: 3904: asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
[; ;pic18f2331.h: 3907: extern volatile unsigned char TXSTA1 @ 0xFAC;
"3909
[; ;pic18f2331.h: 3909: asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
[; ;pic18f2331.h: 3912: typedef union {
[; ;pic18f2331.h: 3913: struct {
[; ;pic18f2331.h: 3914: unsigned TX9D :1;
[; ;pic18f2331.h: 3915: unsigned TRMT :1;
[; ;pic18f2331.h: 3916: unsigned BRGH :1;
[; ;pic18f2331.h: 3917: unsigned SENDB :1;
[; ;pic18f2331.h: 3918: unsigned SYNC :1;
[; ;pic18f2331.h: 3919: unsigned TXEN :1;
[; ;pic18f2331.h: 3920: unsigned TX9 :1;
[; ;pic18f2331.h: 3921: unsigned CSRC :1;
[; ;pic18f2331.h: 3922: };
[; ;pic18f2331.h: 3923: struct {
[; ;pic18f2331.h: 3924: unsigned TX9D1 :1;
[; ;pic18f2331.h: 3925: unsigned TRMT1 :1;
[; ;pic18f2331.h: 3926: unsigned BRGH1 :1;
[; ;pic18f2331.h: 3927: unsigned SENDB1 :1;
[; ;pic18f2331.h: 3928: unsigned SYNC1 :1;
[; ;pic18f2331.h: 3929: unsigned TXEN1 :1;
[; ;pic18f2331.h: 3930: unsigned TX91 :1;
[; ;pic18f2331.h: 3931: unsigned CSRC1 :1;
[; ;pic18f2331.h: 3932: };
[; ;pic18f2331.h: 3933: struct {
[; ;pic18f2331.h: 3934: unsigned :6;
[; ;pic18f2331.h: 3935: unsigned TX8_9 :1;
[; ;pic18f2331.h: 3936: };
[; ;pic18f2331.h: 3937: struct {
[; ;pic18f2331.h: 3938: unsigned TXD8 :1;
[; ;pic18f2331.h: 3939: };
[; ;pic18f2331.h: 3940: } TXSTAbits_t;
[; ;pic18f2331.h: 3941: extern volatile TXSTAbits_t TXSTAbits @ 0xFAC;
[; ;pic18f2331.h: 4034: typedef union {
[; ;pic18f2331.h: 4035: struct {
[; ;pic18f2331.h: 4036: unsigned TX9D :1;
[; ;pic18f2331.h: 4037: unsigned TRMT :1;
[; ;pic18f2331.h: 4038: unsigned BRGH :1;
[; ;pic18f2331.h: 4039: unsigned SENDB :1;
[; ;pic18f2331.h: 4040: unsigned SYNC :1;
[; ;pic18f2331.h: 4041: unsigned TXEN :1;
[; ;pic18f2331.h: 4042: unsigned TX9 :1;
[; ;pic18f2331.h: 4043: unsigned CSRC :1;
[; ;pic18f2331.h: 4044: };
[; ;pic18f2331.h: 4045: struct {
[; ;pic18f2331.h: 4046: unsigned TX9D1 :1;
[; ;pic18f2331.h: 4047: unsigned TRMT1 :1;
[; ;pic18f2331.h: 4048: unsigned BRGH1 :1;
[; ;pic18f2331.h: 4049: unsigned SENDB1 :1;
[; ;pic18f2331.h: 4050: unsigned SYNC1 :1;
[; ;pic18f2331.h: 4051: unsigned TXEN1 :1;
[; ;pic18f2331.h: 4052: unsigned TX91 :1;
[; ;pic18f2331.h: 4053: unsigned CSRC1 :1;
[; ;pic18f2331.h: 4054: };
[; ;pic18f2331.h: 4055: struct {
[; ;pic18f2331.h: 4056: unsigned :6;
[; ;pic18f2331.h: 4057: unsigned TX8_9 :1;
[; ;pic18f2331.h: 4058: };
[; ;pic18f2331.h: 4059: struct {
[; ;pic18f2331.h: 4060: unsigned TXD8 :1;
[; ;pic18f2331.h: 4061: };
[; ;pic18f2331.h: 4062: } TXSTA1bits_t;
[; ;pic18f2331.h: 4063: extern volatile TXSTA1bits_t TXSTA1bits @ 0xFAC;
[; ;pic18f2331.h: 4158: extern volatile unsigned char TXREG @ 0xFAD;
"4160
[; ;pic18f2331.h: 4160: asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
[; ;pic18f2331.h: 4163: extern volatile unsigned char TXREG1 @ 0xFAD;
"4165
[; ;pic18f2331.h: 4165: asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
[; ;pic18f2331.h: 4170: extern volatile unsigned char RCREG @ 0xFAE;
"4172
[; ;pic18f2331.h: 4172: asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
[; ;pic18f2331.h: 4175: extern volatile unsigned char RCREG1 @ 0xFAE;
"4177
[; ;pic18f2331.h: 4177: asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
[; ;pic18f2331.h: 4182: extern volatile unsigned char SPBRG @ 0xFAF;
"4184
[; ;pic18f2331.h: 4184: asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
[; ;pic18f2331.h: 4187: extern volatile unsigned char SPBRG1 @ 0xFAF;
"4189
[; ;pic18f2331.h: 4189: asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
[; ;pic18f2331.h: 4194: extern volatile unsigned char SPBRGH @ 0xFB0;
"4196
[; ;pic18f2331.h: 4196: asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
[; ;pic18f2331.h: 4201: extern volatile unsigned char QEICON @ 0xFB6;
"4203
[; ;pic18f2331.h: 4203: asm("QEICON equ 0FB6h");
[; <" QEICON equ 0FB6h ;# ">
[; ;pic18f2331.h: 4206: typedef union {
[; ;pic18f2331.h: 4207: struct {
[; ;pic18f2331.h: 4208: unsigned :5;
[; ;pic18f2331.h: 4209: unsigned UP_NOT_DOWN :1;
[; ;pic18f2331.h: 4210: };
[; ;pic18f2331.h: 4211: struct {
[; ;pic18f2331.h: 4212: unsigned :7;
[; ;pic18f2331.h: 4213: unsigned NOT_VELM :1;
[; ;pic18f2331.h: 4214: };
[; ;pic18f2331.h: 4215: struct {
[; ;pic18f2331.h: 4216: unsigned PDEC :2;
[; ;pic18f2331.h: 4217: unsigned QEIM :3;
[; ;pic18f2331.h: 4218: unsigned UP_nDOWN :1;
[; ;pic18f2331.h: 4219: unsigned ERROR :1;
[; ;pic18f2331.h: 4220: unsigned nVELM :1;
[; ;pic18f2331.h: 4221: };
[; ;pic18f2331.h: 4222: struct {
[; ;pic18f2331.h: 4223: unsigned PDEC0 :1;
[; ;pic18f2331.h: 4224: unsigned PDEC1 :1;
[; ;pic18f2331.h: 4225: unsigned QEIM0 :1;
[; ;pic18f2331.h: 4226: unsigned QEIM1 :1;
[; ;pic18f2331.h: 4227: unsigned QEIM2 :1;
[; ;pic18f2331.h: 4228: unsigned UP_DOWN :1;
[; ;pic18f2331.h: 4229: unsigned :1;
[; ;pic18f2331.h: 4230: unsigned VELM :1;
[; ;pic18f2331.h: 4231: };
[; ;pic18f2331.h: 4232: struct {
[; ;pic18f2331.h: 4233: unsigned :5;
[; ;pic18f2331.h: 4234: unsigned UP :1;
[; ;pic18f2331.h: 4235: };
[; ;pic18f2331.h: 4236: struct {
[; ;pic18f2331.h: 4237: unsigned :5;
[; ;pic18f2331.h: 4238: unsigned DOWN :1;
[; ;pic18f2331.h: 4239: };
[; ;pic18f2331.h: 4240: struct {
[; ;pic18f2331.h: 4241: unsigned :5;
[; ;pic18f2331.h: 4242: unsigned NOT_DOWN :1;
[; ;pic18f2331.h: 4243: };
[; ;pic18f2331.h: 4244: struct {
[; ;pic18f2331.h: 4245: unsigned :5;
[; ;pic18f2331.h: 4246: unsigned nDOWN :1;
[; ;pic18f2331.h: 4247: };
[; ;pic18f2331.h: 4248: struct {
[; ;pic18f2331.h: 4249: unsigned :5;
[; ;pic18f2331.h: 4250: unsigned UPDOWN :1;
[; ;pic18f2331.h: 4251: };
[; ;pic18f2331.h: 4252: } QEICONbits_t;
[; ;pic18f2331.h: 4253: extern volatile QEICONbits_t QEICONbits @ 0xFB6;
[; ;pic18f2331.h: 4353: extern volatile unsigned char T5CON @ 0xFB7;
"4355
[; ;pic18f2331.h: 4355: asm("T5CON equ 0FB7h");
[; <" T5CON equ 0FB7h ;# ">
[; ;pic18f2331.h: 4358: typedef union {
[; ;pic18f2331.h: 4359: struct {
[; ;pic18f2331.h: 4360: unsigned :2;
[; ;pic18f2331.h: 4361: unsigned NOT_T5SYNC :1;
[; ;pic18f2331.h: 4362: };
[; ;pic18f2331.h: 4363: struct {
[; ;pic18f2331.h: 4364: unsigned :6;
[; ;pic18f2331.h: 4365: unsigned NOT_RESEN :1;
[; ;pic18f2331.h: 4366: };
[; ;pic18f2331.h: 4367: struct {
[; ;pic18f2331.h: 4368: unsigned TMR5ON :1;
[; ;pic18f2331.h: 4369: unsigned TMR5CS :1;
[; ;pic18f2331.h: 4370: unsigned nT5SYNC :1;
[; ;pic18f2331.h: 4371: unsigned T5PS :2;
[; ;pic18f2331.h: 4372: unsigned T5MOD :1;
[; ;pic18f2331.h: 4373: unsigned nRESEN :1;
[; ;pic18f2331.h: 4374: unsigned T5SEN :1;
[; ;pic18f2331.h: 4375: };
[; ;pic18f2331.h: 4376: struct {
[; ;pic18f2331.h: 4377: unsigned :2;
[; ;pic18f2331.h: 4378: unsigned T5SYNC :1;
[; ;pic18f2331.h: 4379: unsigned T5PS0 :1;
[; ;pic18f2331.h: 4380: unsigned T5PS1 :1;
[; ;pic18f2331.h: 4381: unsigned :1;
[; ;pic18f2331.h: 4382: unsigned RESEN :1;
[; ;pic18f2331.h: 4383: };
[; ;pic18f2331.h: 4384: struct {
[; ;pic18f2331.h: 4385: unsigned :1;
[; ;pic18f2331.h: 4386: unsigned RD165 :1;
[; ;pic18f2331.h: 4387: unsigned :1;
[; ;pic18f2331.h: 4388: unsigned SOSCEN5 :1;
[; ;pic18f2331.h: 4389: };
[; ;pic18f2331.h: 4390: } T5CONbits_t;
[; ;pic18f2331.h: 4391: extern volatile T5CONbits_t T5CONbits @ 0xFB7;
[; ;pic18f2331.h: 4471: extern volatile unsigned char ANSEL0 @ 0xFB8;
"4473
[; ;pic18f2331.h: 4473: asm("ANSEL0 equ 0FB8h");
[; <" ANSEL0 equ 0FB8h ;# ">
[; ;pic18f2331.h: 4476: typedef union {
[; ;pic18f2331.h: 4477: struct {
[; ;pic18f2331.h: 4478: unsigned ANS0 :1;
[; ;pic18f2331.h: 4479: unsigned ANS1 :1;
[; ;pic18f2331.h: 4480: unsigned ANS2 :1;
[; ;pic18f2331.h: 4481: unsigned ANS3 :1;
[; ;pic18f2331.h: 4482: unsigned ANS4 :1;
[; ;pic18f2331.h: 4483: };
[; ;pic18f2331.h: 4484: } ANSEL0bits_t;
[; ;pic18f2331.h: 4485: extern volatile ANSEL0bits_t ANSEL0bits @ 0xFB8;
[; ;pic18f2331.h: 4515: extern volatile unsigned char CCP2CON @ 0xFBA;
"4517
[; ;pic18f2331.h: 4517: asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
[; ;pic18f2331.h: 4520: typedef union {
[; ;pic18f2331.h: 4521: struct {
[; ;pic18f2331.h: 4522: unsigned CCP2M :4;
[; ;pic18f2331.h: 4523: unsigned DC2B :2;
[; ;pic18f2331.h: 4524: };
[; ;pic18f2331.h: 4525: struct {
[; ;pic18f2331.h: 4526: unsigned CCP2M0 :1;
[; ;pic18f2331.h: 4527: unsigned CCP2M1 :1;
[; ;pic18f2331.h: 4528: unsigned CCP2M2 :1;
[; ;pic18f2331.h: 4529: unsigned CCP2M3 :1;
[; ;pic18f2331.h: 4530: unsigned CCP2Y :1;
[; ;pic18f2331.h: 4531: unsigned CCP2X :1;
[; ;pic18f2331.h: 4532: };
[; ;pic18f2331.h: 4533: struct {
[; ;pic18f2331.h: 4534: unsigned :4;
[; ;pic18f2331.h: 4535: unsigned DC2B0 :1;
[; ;pic18f2331.h: 4536: unsigned DC2B1 :1;
[; ;pic18f2331.h: 4537: };
[; ;pic18f2331.h: 4538: } CCP2CONbits_t;
[; ;pic18f2331.h: 4539: extern volatile CCP2CONbits_t CCP2CONbits @ 0xFBA;
[; ;pic18f2331.h: 4594: extern volatile unsigned short CCPR2 @ 0xFBB;
"4596
[; ;pic18f2331.h: 4596: asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
[; ;pic18f2331.h: 4601: extern volatile unsigned char CCPR2L @ 0xFBB;
"4603
[; ;pic18f2331.h: 4603: asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
[; ;pic18f2331.h: 4608: extern volatile unsigned char CCPR2H @ 0xFBC;
"4610
[; ;pic18f2331.h: 4610: asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
[; ;pic18f2331.h: 4615: extern volatile unsigned char CCP1CON @ 0xFBD;
"4617
[; ;pic18f2331.h: 4617: asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
[; ;pic18f2331.h: 4620: typedef union {
[; ;pic18f2331.h: 4621: struct {
[; ;pic18f2331.h: 4622: unsigned CCP1M :4;
[; ;pic18f2331.h: 4623: unsigned DC1B :2;
[; ;pic18f2331.h: 4624: };
[; ;pic18f2331.h: 4625: struct {
[; ;pic18f2331.h: 4626: unsigned CCP1M0 :1;
[; ;pic18f2331.h: 4627: unsigned CCP1M1 :1;
[; ;pic18f2331.h: 4628: unsigned CCP1M2 :1;
[; ;pic18f2331.h: 4629: unsigned CCP1M3 :1;
[; ;pic18f2331.h: 4630: unsigned CCP1Y :1;
[; ;pic18f2331.h: 4631: unsigned CCP1X :1;
[; ;pic18f2331.h: 4632: };
[; ;pic18f2331.h: 4633: struct {
[; ;pic18f2331.h: 4634: unsigned :4;
[; ;pic18f2331.h: 4635: unsigned DC1B0 :1;
[; ;pic18f2331.h: 4636: unsigned DC1B1 :1;
[; ;pic18f2331.h: 4637: };
[; ;pic18f2331.h: 4638: } CCP1CONbits_t;
[; ;pic18f2331.h: 4639: extern volatile CCP1CONbits_t CCP1CONbits @ 0xFBD;
[; ;pic18f2331.h: 4694: extern volatile unsigned short CCPR1 @ 0xFBE;
"4696
[; ;pic18f2331.h: 4696: asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
[; ;pic18f2331.h: 4701: extern volatile unsigned char CCPR1L @ 0xFBE;
"4703
[; ;pic18f2331.h: 4703: asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
[; ;pic18f2331.h: 4708: extern volatile unsigned char CCPR1H @ 0xFBF;
"4710
[; ;pic18f2331.h: 4710: asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
[; ;pic18f2331.h: 4715: extern volatile unsigned char ADCON2 @ 0xFC0;
"4717
[; ;pic18f2331.h: 4717: asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
[; ;pic18f2331.h: 4720: typedef union {
[; ;pic18f2331.h: 4721: struct {
[; ;pic18f2331.h: 4722: unsigned ADCS :3;
[; ;pic18f2331.h: 4723: unsigned ACQT :4;
[; ;pic18f2331.h: 4724: unsigned ADFM :1;
[; ;pic18f2331.h: 4725: };
[; ;pic18f2331.h: 4726: struct {
[; ;pic18f2331.h: 4727: unsigned ADCS0 :1;
[; ;pic18f2331.h: 4728: unsigned ADCS1 :1;
[; ;pic18f2331.h: 4729: unsigned ADCS2 :1;
[; ;pic18f2331.h: 4730: unsigned ACQT0 :1;
[; ;pic18f2331.h: 4731: unsigned ACQT1 :1;
[; ;pic18f2331.h: 4732: unsigned ACQT2 :1;
[; ;pic18f2331.h: 4733: unsigned ACQT3 :1;
[; ;pic18f2331.h: 4734: };
[; ;pic18f2331.h: 4735: } ADCON2bits_t;
[; ;pic18f2331.h: 4736: extern volatile ADCON2bits_t ADCON2bits @ 0xFC0;
[; ;pic18f2331.h: 4791: extern volatile unsigned char ADCON1 @ 0xFC1;
"4793
[; ;pic18f2331.h: 4793: asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
[; ;pic18f2331.h: 4796: typedef union {
[; ;pic18f2331.h: 4797: struct {
[; ;pic18f2331.h: 4798: unsigned ADPNT :2;
[; ;pic18f2331.h: 4799: unsigned BFOVFL :1;
[; ;pic18f2331.h: 4800: unsigned BFEMT :1;
[; ;pic18f2331.h: 4801: unsigned FIFOEN :1;
[; ;pic18f2331.h: 4802: unsigned :1;
[; ;pic18f2331.h: 4803: unsigned VCFG :2;
[; ;pic18f2331.h: 4804: };
[; ;pic18f2331.h: 4805: struct {
[; ;pic18f2331.h: 4806: unsigned ADPNT0 :1;
[; ;pic18f2331.h: 4807: unsigned ADPNT1 :1;
[; ;pic18f2331.h: 4808: unsigned :4;
[; ;pic18f2331.h: 4809: unsigned VCFG0 :1;
[; ;pic18f2331.h: 4810: unsigned VCFG1 :1;
[; ;pic18f2331.h: 4811: };
[; ;pic18f2331.h: 4812: struct {
[; ;pic18f2331.h: 4813: unsigned :2;
[; ;pic18f2331.h: 4814: unsigned FFOVFL :1;
[; ;pic18f2331.h: 4815: };
[; ;pic18f2331.h: 4816: struct {
[; ;pic18f2331.h: 4817: unsigned :3;
[; ;pic18f2331.h: 4818: unsigned CHSN3 :1;
[; ;pic18f2331.h: 4819: unsigned VCFG01 :1;
[; ;pic18f2331.h: 4820: };
[; ;pic18f2331.h: 4821: } ADCON1bits_t;
[; ;pic18f2331.h: 4822: extern volatile ADCON1bits_t ADCON1bits @ 0xFC1;
[; ;pic18f2331.h: 4887: extern volatile unsigned char ADCON0 @ 0xFC2;
"4889
[; ;pic18f2331.h: 4889: asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
[; ;pic18f2331.h: 4892: typedef union {
[; ;pic18f2331.h: 4893: struct {
[; ;pic18f2331.h: 4894: unsigned :1;
[; ;pic18f2331.h: 4895: unsigned GO_NOT_DONE :1;
[; ;pic18f2331.h: 4896: };
[; ;pic18f2331.h: 4897: struct {
[; ;pic18f2331.h: 4898: unsigned ADON :1;
[; ;pic18f2331.h: 4899: unsigned GO_nDONE :1;
[; ;pic18f2331.h: 4900: unsigned ACMOD :2;
[; ;pic18f2331.h: 4901: unsigned ACSCH :1;
[; ;pic18f2331.h: 4902: unsigned ACONV :1;
[; ;pic18f2331.h: 4903: };
[; ;pic18f2331.h: 4904: struct {
[; ;pic18f2331.h: 4905: unsigned :1;
[; ;pic18f2331.h: 4906: unsigned GO_DONE :1;
[; ;pic18f2331.h: 4907: unsigned ACMOD0 :1;
[; ;pic18f2331.h: 4908: unsigned ACMOD1 :1;
[; ;pic18f2331.h: 4909: };
[; ;pic18f2331.h: 4910: struct {
[; ;pic18f2331.h: 4911: unsigned :1;
[; ;pic18f2331.h: 4912: unsigned DONE :1;
[; ;pic18f2331.h: 4913: };
[; ;pic18f2331.h: 4914: struct {
[; ;pic18f2331.h: 4915: unsigned :1;
[; ;pic18f2331.h: 4916: unsigned GO :1;
[; ;pic18f2331.h: 4917: };
[; ;pic18f2331.h: 4918: struct {
[; ;pic18f2331.h: 4919: unsigned :1;
[; ;pic18f2331.h: 4920: unsigned NOT_DONE :1;
[; ;pic18f2331.h: 4921: };
[; ;pic18f2331.h: 4922: struct {
[; ;pic18f2331.h: 4923: unsigned :1;
[; ;pic18f2331.h: 4924: unsigned nDONE :1;
[; ;pic18f2331.h: 4925: };
[; ;pic18f2331.h: 4926: struct {
[; ;pic18f2331.h: 4927: unsigned :1;
[; ;pic18f2331.h: 4928: unsigned GODONE :1;
[; ;pic18f2331.h: 4929: };
[; ;pic18f2331.h: 4930: } ADCON0bits_t;
[; ;pic18f2331.h: 4931: extern volatile ADCON0bits_t ADCON0bits @ 0xFC2;
[; ;pic18f2331.h: 5006: extern volatile unsigned short ADRES @ 0xFC3;
"5008
[; ;pic18f2331.h: 5008: asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
[; ;pic18f2331.h: 5013: extern volatile unsigned char ADRESL @ 0xFC3;
"5015
[; ;pic18f2331.h: 5015: asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
[; ;pic18f2331.h: 5020: extern volatile unsigned char ADRESH @ 0xFC4;
"5022
[; ;pic18f2331.h: 5022: asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
[; ;pic18f2331.h: 5027: extern volatile unsigned char SSPCON @ 0xFC6;
"5029
[; ;pic18f2331.h: 5029: asm("SSPCON equ 0FC6h");
[; <" SSPCON equ 0FC6h ;# ">
[; ;pic18f2331.h: 5032: extern volatile unsigned char SSPCON1 @ 0xFC6;
"5034
[; ;pic18f2331.h: 5034: asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
[; ;pic18f2331.h: 5037: typedef union {
[; ;pic18f2331.h: 5038: struct {
[; ;pic18f2331.h: 5039: unsigned SSPM :4;
[; ;pic18f2331.h: 5040: unsigned CKP :1;
[; ;pic18f2331.h: 5041: unsigned SSPEN :1;
[; ;pic18f2331.h: 5042: unsigned SSPOV :1;
[; ;pic18f2331.h: 5043: unsigned WCOL :1;
[; ;pic18f2331.h: 5044: };
[; ;pic18f2331.h: 5045: struct {
[; ;pic18f2331.h: 5046: unsigned SSPM0 :1;
[; ;pic18f2331.h: 5047: unsigned SSPM1 :1;
[; ;pic18f2331.h: 5048: unsigned SSPM2 :1;
[; ;pic18f2331.h: 5049: unsigned SSPM3 :1;
[; ;pic18f2331.h: 5050: };
[; ;pic18f2331.h: 5051: } SSPCONbits_t;
[; ;pic18f2331.h: 5052: extern volatile SSPCONbits_t SSPCONbits @ 0xFC6;
[; ;pic18f2331.h: 5100: typedef union {
[; ;pic18f2331.h: 5101: struct {
[; ;pic18f2331.h: 5102: unsigned SSPM :4;
[; ;pic18f2331.h: 5103: unsigned CKP :1;
[; ;pic18f2331.h: 5104: unsigned SSPEN :1;
[; ;pic18f2331.h: 5105: unsigned SSPOV :1;
[; ;pic18f2331.h: 5106: unsigned WCOL :1;
[; ;pic18f2331.h: 5107: };
[; ;pic18f2331.h: 5108: struct {
[; ;pic18f2331.h: 5109: unsigned SSPM0 :1;
[; ;pic18f2331.h: 5110: unsigned SSPM1 :1;
[; ;pic18f2331.h: 5111: unsigned SSPM2 :1;
[; ;pic18f2331.h: 5112: unsigned SSPM3 :1;
[; ;pic18f2331.h: 5113: };
[; ;pic18f2331.h: 5114: } SSPCON1bits_t;
[; ;pic18f2331.h: 5115: extern volatile SSPCON1bits_t SSPCON1bits @ 0xFC6;
[; ;pic18f2331.h: 5165: extern volatile unsigned char SSPSTAT @ 0xFC7;
"5167
[; ;pic18f2331.h: 5167: asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
[; ;pic18f2331.h: 5170: typedef union {
[; ;pic18f2331.h: 5171: struct {
[; ;pic18f2331.h: 5172: unsigned :2;
[; ;pic18f2331.h: 5173: unsigned R_NOT_W :1;
[; ;pic18f2331.h: 5174: };
[; ;pic18f2331.h: 5175: struct {
[; ;pic18f2331.h: 5176: unsigned :5;
[; ;pic18f2331.h: 5177: unsigned D_NOT_A :1;
[; ;pic18f2331.h: 5178: };
[; ;pic18f2331.h: 5179: struct {
[; ;pic18f2331.h: 5180: unsigned BF :1;
[; ;pic18f2331.h: 5181: unsigned UA :1;
[; ;pic18f2331.h: 5182: unsigned R_nW :1;
[; ;pic18f2331.h: 5183: unsigned S :1;
[; ;pic18f2331.h: 5184: unsigned P :1;
[; ;pic18f2331.h: 5185: unsigned D_nA :1;
[; ;pic18f2331.h: 5186: unsigned CKE :1;
[; ;pic18f2331.h: 5187: unsigned SMP :1;
[; ;pic18f2331.h: 5188: };
[; ;pic18f2331.h: 5189: struct {
[; ;pic18f2331.h: 5190: unsigned :2;
[; ;pic18f2331.h: 5191: unsigned R_W :1;
[; ;pic18f2331.h: 5192: unsigned :2;
[; ;pic18f2331.h: 5193: unsigned D_A :1;
[; ;pic18f2331.h: 5194: };
[; ;pic18f2331.h: 5195: struct {
[; ;pic18f2331.h: 5196: unsigned :2;
[; ;pic18f2331.h: 5197: unsigned nW :1;
[; ;pic18f2331.h: 5198: unsigned :2;
[; ;pic18f2331.h: 5199: unsigned nA :1;
[; ;pic18f2331.h: 5200: };
[; ;pic18f2331.h: 5201: struct {
[; ;pic18f2331.h: 5202: unsigned :2;
[; ;pic18f2331.h: 5203: unsigned NOT_WRITE :1;
[; ;pic18f2331.h: 5204: };
[; ;pic18f2331.h: 5205: struct {
[; ;pic18f2331.h: 5206: unsigned :5;
[; ;pic18f2331.h: 5207: unsigned NOT_ADDRESS :1;
[; ;pic18f2331.h: 5208: };
[; ;pic18f2331.h: 5209: struct {
[; ;pic18f2331.h: 5210: unsigned :2;
[; ;pic18f2331.h: 5211: unsigned nWRITE :1;
[; ;pic18f2331.h: 5212: unsigned :2;
[; ;pic18f2331.h: 5213: unsigned nADDRESS :1;
[; ;pic18f2331.h: 5214: };
[; ;pic18f2331.h: 5215: struct {
[; ;pic18f2331.h: 5216: unsigned :2;
[; ;pic18f2331.h: 5217: unsigned READ_WRITE :1;
[; ;pic18f2331.h: 5218: unsigned :2;
[; ;pic18f2331.h: 5219: unsigned DATA_ADDRESS :1;
[; ;pic18f2331.h: 5220: };
[; ;pic18f2331.h: 5221: struct {
[; ;pic18f2331.h: 5222: unsigned :2;
[; ;pic18f2331.h: 5223: unsigned R :1;
[; ;pic18f2331.h: 5224: unsigned :2;
[; ;pic18f2331.h: 5225: unsigned D :1;
[; ;pic18f2331.h: 5226: };
[; ;pic18f2331.h: 5227: struct {
[; ;pic18f2331.h: 5228: unsigned :2;
[; ;pic18f2331.h: 5229: unsigned RW :1;
[; ;pic18f2331.h: 5230: unsigned START :1;
[; ;pic18f2331.h: 5231: unsigned STOP :1;
[; ;pic18f2331.h: 5232: unsigned DA :1;
[; ;pic18f2331.h: 5233: };
[; ;pic18f2331.h: 5234: struct {
[; ;pic18f2331.h: 5235: unsigned :2;
[; ;pic18f2331.h: 5236: unsigned NOT_W :1;
[; ;pic18f2331.h: 5237: unsigned :2;
[; ;pic18f2331.h: 5238: unsigned NOT_A :1;
[; ;pic18f2331.h: 5239: };
[; ;pic18f2331.h: 5240: } SSPSTATbits_t;
[; ;pic18f2331.h: 5241: extern volatile SSPSTATbits_t SSPSTATbits @ 0xFC7;
[; ;pic18f2331.h: 5386: extern volatile unsigned char SSPADD @ 0xFC8;
"5388
[; ;pic18f2331.h: 5388: asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
[; ;pic18f2331.h: 5393: extern volatile unsigned char SSPBUF @ 0xFC9;
"5395
[; ;pic18f2331.h: 5395: asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
[; ;pic18f2331.h: 5400: extern volatile unsigned char T2CON @ 0xFCA;
"5402
[; ;pic18f2331.h: 5402: asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
[; ;pic18f2331.h: 5405: typedef union {
[; ;pic18f2331.h: 5406: struct {
[; ;pic18f2331.h: 5407: unsigned T2CKPS :2;
[; ;pic18f2331.h: 5408: unsigned TMR2ON :1;
[; ;pic18f2331.h: 5409: unsigned TOUTPS :4;
[; ;pic18f2331.h: 5410: };
[; ;pic18f2331.h: 5411: struct {
[; ;pic18f2331.h: 5412: unsigned T2CKPS0 :1;
[; ;pic18f2331.h: 5413: unsigned T2CKPS1 :1;
[; ;pic18f2331.h: 5414: unsigned :1;
[; ;pic18f2331.h: 5415: unsigned T2OUTPS0 :1;
[; ;pic18f2331.h: 5416: unsigned T2OUTPS1 :1;
[; ;pic18f2331.h: 5417: unsigned T2OUTPS2 :1;
[; ;pic18f2331.h: 5418: unsigned T2OUTPS3 :1;
[; ;pic18f2331.h: 5419: };
[; ;pic18f2331.h: 5420: struct {
[; ;pic18f2331.h: 5421: unsigned :3;
[; ;pic18f2331.h: 5422: unsigned TOUTPS0 :1;
[; ;pic18f2331.h: 5423: unsigned TOUTPS1 :1;
[; ;pic18f2331.h: 5424: unsigned TOUTPS2 :1;
[; ;pic18f2331.h: 5425: unsigned TOUTPS3 :1;
[; ;pic18f2331.h: 5426: };
[; ;pic18f2331.h: 5427: } T2CONbits_t;
[; ;pic18f2331.h: 5428: extern volatile T2CONbits_t T2CONbits @ 0xFCA;
[; ;pic18f2331.h: 5498: extern volatile unsigned char PR2 @ 0xFCB;
"5500
[; ;pic18f2331.h: 5500: asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
[; ;pic18f2331.h: 5503: extern volatile unsigned char MEMCON @ 0xFCB;
"5505
[; ;pic18f2331.h: 5505: asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
[; ;pic18f2331.h: 5508: typedef union {
[; ;pic18f2331.h: 5509: struct {
[; ;pic18f2331.h: 5510: unsigned :7;
[; ;pic18f2331.h: 5511: unsigned EBDIS :1;
[; ;pic18f2331.h: 5512: };
[; ;pic18f2331.h: 5513: struct {
[; ;pic18f2331.h: 5514: unsigned :4;
[; ;pic18f2331.h: 5515: unsigned WAIT0 :1;
[; ;pic18f2331.h: 5516: };
[; ;pic18f2331.h: 5517: struct {
[; ;pic18f2331.h: 5518: unsigned :5;
[; ;pic18f2331.h: 5519: unsigned WAIT1 :1;
[; ;pic18f2331.h: 5520: };
[; ;pic18f2331.h: 5521: struct {
[; ;pic18f2331.h: 5522: unsigned WM0 :1;
[; ;pic18f2331.h: 5523: };
[; ;pic18f2331.h: 5524: struct {
[; ;pic18f2331.h: 5525: unsigned :1;
[; ;pic18f2331.h: 5526: unsigned WM1 :1;
[; ;pic18f2331.h: 5527: };
[; ;pic18f2331.h: 5528: } PR2bits_t;
[; ;pic18f2331.h: 5529: extern volatile PR2bits_t PR2bits @ 0xFCB;
[; ;pic18f2331.h: 5557: typedef union {
[; ;pic18f2331.h: 5558: struct {
[; ;pic18f2331.h: 5559: unsigned :7;
[; ;pic18f2331.h: 5560: unsigned EBDIS :1;
[; ;pic18f2331.h: 5561: };
[; ;pic18f2331.h: 5562: struct {
[; ;pic18f2331.h: 5563: unsigned :4;
[; ;pic18f2331.h: 5564: unsigned WAIT0 :1;
[; ;pic18f2331.h: 5565: };
[; ;pic18f2331.h: 5566: struct {
[; ;pic18f2331.h: 5567: unsigned :5;
[; ;pic18f2331.h: 5568: unsigned WAIT1 :1;
[; ;pic18f2331.h: 5569: };
[; ;pic18f2331.h: 5570: struct {
[; ;pic18f2331.h: 5571: unsigned WM0 :1;
[; ;pic18f2331.h: 5572: };
[; ;pic18f2331.h: 5573: struct {
[; ;pic18f2331.h: 5574: unsigned :1;
[; ;pic18f2331.h: 5575: unsigned WM1 :1;
[; ;pic18f2331.h: 5576: };
[; ;pic18f2331.h: 5577: } MEMCONbits_t;
[; ;pic18f2331.h: 5578: extern volatile MEMCONbits_t MEMCONbits @ 0xFCB;
[; ;pic18f2331.h: 5608: extern volatile unsigned char TMR2 @ 0xFCC;
"5610
[; ;pic18f2331.h: 5610: asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
[; ;pic18f2331.h: 5615: extern volatile unsigned char T1CON @ 0xFCD;
"5617
[; ;pic18f2331.h: 5617: asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
[; ;pic18f2331.h: 5620: typedef union {
[; ;pic18f2331.h: 5621: struct {
[; ;pic18f2331.h: 5622: unsigned :2;
[; ;pic18f2331.h: 5623: unsigned NOT_T1SYNC :1;
[; ;pic18f2331.h: 5624: };
[; ;pic18f2331.h: 5625: struct {
[; ;pic18f2331.h: 5626: unsigned TMR1ON :1;
[; ;pic18f2331.h: 5627: unsigned TMR1CS :1;
[; ;pic18f2331.h: 5628: unsigned nT1SYNC :1;
[; ;pic18f2331.h: 5629: unsigned T1OSCEN :1;
[; ;pic18f2331.h: 5630: unsigned T1CKPS :2;
[; ;pic18f2331.h: 5631: unsigned T1RUN :1;
[; ;pic18f2331.h: 5632: unsigned RD16 :1;
[; ;pic18f2331.h: 5633: };
[; ;pic18f2331.h: 5634: struct {
[; ;pic18f2331.h: 5635: unsigned :2;
[; ;pic18f2331.h: 5636: unsigned T1SYNC :1;
[; ;pic18f2331.h: 5637: unsigned :1;
[; ;pic18f2331.h: 5638: unsigned T1CKPS0 :1;
[; ;pic18f2331.h: 5639: unsigned T1CKPS1 :1;
[; ;pic18f2331.h: 5640: };
[; ;pic18f2331.h: 5641: struct {
[; ;pic18f2331.h: 5642: unsigned :2;
[; ;pic18f2331.h: 5643: unsigned T1INSYNC :1;
[; ;pic18f2331.h: 5644: };
[; ;pic18f2331.h: 5645: struct {
[; ;pic18f2331.h: 5646: unsigned :3;
[; ;pic18f2331.h: 5647: unsigned SOSCEN :1;
[; ;pic18f2331.h: 5648: unsigned :3;
[; ;pic18f2331.h: 5649: unsigned T1RD16 :1;
[; ;pic18f2331.h: 5650: };
[; ;pic18f2331.h: 5651: } T1CONbits_t;
[; ;pic18f2331.h: 5652: extern volatile T1CONbits_t T1CONbits @ 0xFCD;
[; ;pic18f2331.h: 5727: extern volatile unsigned short TMR1 @ 0xFCE;
"5729
[; ;pic18f2331.h: 5729: asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
[; ;pic18f2331.h: 5734: extern volatile unsigned char TMR1L @ 0xFCE;
"5736
[; ;pic18f2331.h: 5736: asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
[; ;pic18f2331.h: 5741: extern volatile unsigned char TMR1H @ 0xFCF;
"5743
[; ;pic18f2331.h: 5743: asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
[; ;pic18f2331.h: 5748: extern volatile unsigned char RCON @ 0xFD0;
"5750
[; ;pic18f2331.h: 5750: asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
[; ;pic18f2331.h: 5753: typedef union {
[; ;pic18f2331.h: 5754: struct {
[; ;pic18f2331.h: 5755: unsigned NOT_BOR :1;
[; ;pic18f2331.h: 5756: };
[; ;pic18f2331.h: 5757: struct {
[; ;pic18f2331.h: 5758: unsigned :1;
[; ;pic18f2331.h: 5759: unsigned NOT_POR :1;
[; ;pic18f2331.h: 5760: };
[; ;pic18f2331.h: 5761: struct {
[; ;pic18f2331.h: 5762: unsigned :2;
[; ;pic18f2331.h: 5763: unsigned NOT_PD :1;
[; ;pic18f2331.h: 5764: };
[; ;pic18f2331.h: 5765: struct {
[; ;pic18f2331.h: 5766: unsigned :3;
[; ;pic18f2331.h: 5767: unsigned NOT_TO :1;
[; ;pic18f2331.h: 5768: };
[; ;pic18f2331.h: 5769: struct {
[; ;pic18f2331.h: 5770: unsigned :4;
[; ;pic18f2331.h: 5771: unsigned NOT_RI :1;
[; ;pic18f2331.h: 5772: };
[; ;pic18f2331.h: 5773: struct {
[; ;pic18f2331.h: 5774: unsigned nBOR :1;
[; ;pic18f2331.h: 5775: unsigned nPOR :1;
[; ;pic18f2331.h: 5776: unsigned nPD :1;
[; ;pic18f2331.h: 5777: unsigned nTO :1;
[; ;pic18f2331.h: 5778: unsigned nRI :1;
[; ;pic18f2331.h: 5779: unsigned :2;
[; ;pic18f2331.h: 5780: unsigned IPEN :1;
[; ;pic18f2331.h: 5781: };
[; ;pic18f2331.h: 5782: struct {
[; ;pic18f2331.h: 5783: unsigned :7;
[; ;pic18f2331.h: 5784: unsigned NOT_IPEN :1;
[; ;pic18f2331.h: 5785: };
[; ;pic18f2331.h: 5786: struct {
[; ;pic18f2331.h: 5787: unsigned BOR :1;
[; ;pic18f2331.h: 5788: unsigned POR :1;
[; ;pic18f2331.h: 5789: unsigned PD :1;
[; ;pic18f2331.h: 5790: unsigned TO :1;
[; ;pic18f2331.h: 5791: unsigned RI :1;
[; ;pic18f2331.h: 5792: unsigned :2;
[; ;pic18f2331.h: 5793: unsigned nIPEN :1;
[; ;pic18f2331.h: 5794: };
[; ;pic18f2331.h: 5795: } RCONbits_t;
[; ;pic18f2331.h: 5796: extern volatile RCONbits_t RCONbits @ 0xFD0;
[; ;pic18f2331.h: 5891: extern volatile unsigned char WDTCON @ 0xFD1;
"5893
[; ;pic18f2331.h: 5893: asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
[; ;pic18f2331.h: 5896: typedef union {
[; ;pic18f2331.h: 5897: struct {
[; ;pic18f2331.h: 5898: unsigned SWDTEN :1;
[; ;pic18f2331.h: 5899: unsigned :6;
[; ;pic18f2331.h: 5900: unsigned WDTW :1;
[; ;pic18f2331.h: 5901: };
[; ;pic18f2331.h: 5902: } WDTCONbits_t;
[; ;pic18f2331.h: 5903: extern volatile WDTCONbits_t WDTCONbits @ 0xFD1;
[; ;pic18f2331.h: 5918: extern volatile unsigned char LVDCON @ 0xFD2;
"5920
[; ;pic18f2331.h: 5920: asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
[; ;pic18f2331.h: 5923: typedef union {
[; ;pic18f2331.h: 5924: struct {
[; ;pic18f2331.h: 5925: unsigned LVDL :4;
[; ;pic18f2331.h: 5926: unsigned LVDEN :1;
[; ;pic18f2331.h: 5927: unsigned IRVST :1;
[; ;pic18f2331.h: 5928: };
[; ;pic18f2331.h: 5929: struct {
[; ;pic18f2331.h: 5930: unsigned LVDL0 :1;
[; ;pic18f2331.h: 5931: unsigned LVDL1 :1;
[; ;pic18f2331.h: 5932: unsigned LVDL2 :1;
[; ;pic18f2331.h: 5933: unsigned LVDL3 :1;
[; ;pic18f2331.h: 5934: unsigned :1;
[; ;pic18f2331.h: 5935: unsigned IVRST :1;
[; ;pic18f2331.h: 5936: };
[; ;pic18f2331.h: 5937: } LVDCONbits_t;
[; ;pic18f2331.h: 5938: extern volatile LVDCONbits_t LVDCONbits @ 0xFD2;
[; ;pic18f2331.h: 5983: extern volatile unsigned char OSCCON @ 0xFD3;
"5985
[; ;pic18f2331.h: 5985: asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
[; ;pic18f2331.h: 5988: typedef union {
[; ;pic18f2331.h: 5989: struct {
[; ;pic18f2331.h: 5990: unsigned SCS :2;
[; ;pic18f2331.h: 5991: unsigned IOFS :1;
[; ;pic18f2331.h: 5992: unsigned OSTS :1;
[; ;pic18f2331.h: 5993: unsigned IRCF :3;
[; ;pic18f2331.h: 5994: unsigned IDLEN :1;
[; ;pic18f2331.h: 5995: };
[; ;pic18f2331.h: 5996: struct {
[; ;pic18f2331.h: 5997: unsigned SCS0 :1;
[; ;pic18f2331.h: 5998: unsigned SCS1 :1;
[; ;pic18f2331.h: 5999: unsigned :2;
[; ;pic18f2331.h: 6000: unsigned IRCF0 :1;
[; ;pic18f2331.h: 6001: unsigned IRCF1 :1;
[; ;pic18f2331.h: 6002: unsigned IRCF2 :1;
[; ;pic18f2331.h: 6003: };
[; ;pic18f2331.h: 6004: struct {
[; ;pic18f2331.h: 6005: unsigned :2;
[; ;pic18f2331.h: 6006: unsigned FLTS :1;
[; ;pic18f2331.h: 6007: };
[; ;pic18f2331.h: 6008: } OSCCONbits_t;
[; ;pic18f2331.h: 6009: extern volatile OSCCONbits_t OSCCONbits @ 0xFD3;
[; ;pic18f2331.h: 6069: extern volatile unsigned char T0CON @ 0xFD5;
"6071
[; ;pic18f2331.h: 6071: asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
[; ;pic18f2331.h: 6074: typedef union {
[; ;pic18f2331.h: 6075: struct {
[; ;pic18f2331.h: 6076: unsigned T0PS :3;
[; ;pic18f2331.h: 6077: unsigned PSA :1;
[; ;pic18f2331.h: 6078: unsigned T0SE :1;
[; ;pic18f2331.h: 6079: unsigned T0CS :1;
[; ;pic18f2331.h: 6080: unsigned T016BIT :1;
[; ;pic18f2331.h: 6081: unsigned TMR0ON :1;
[; ;pic18f2331.h: 6082: };
[; ;pic18f2331.h: 6083: struct {
[; ;pic18f2331.h: 6084: unsigned T0PS0 :1;
[; ;pic18f2331.h: 6085: unsigned T0PS1 :1;
[; ;pic18f2331.h: 6086: unsigned T0PS2 :1;
[; ;pic18f2331.h: 6087: unsigned T0PS3 :1;
[; ;pic18f2331.h: 6088: };
[; ;pic18f2331.h: 6089: } T0CONbits_t;
[; ;pic18f2331.h: 6090: extern volatile T0CONbits_t T0CONbits @ 0xFD5;
[; ;pic18f2331.h: 6145: extern volatile unsigned short TMR0 @ 0xFD6;
"6147
[; ;pic18f2331.h: 6147: asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
[; ;pic18f2331.h: 6152: extern volatile unsigned char TMR0L @ 0xFD6;
"6154
[; ;pic18f2331.h: 6154: asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
[; ;pic18f2331.h: 6159: extern volatile unsigned char TMR0H @ 0xFD7;
"6161
[; ;pic18f2331.h: 6161: asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
[; ;pic18f2331.h: 6166: extern volatile unsigned char STATUS @ 0xFD8;
"6168
[; ;pic18f2331.h: 6168: asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
[; ;pic18f2331.h: 6171: typedef union {
[; ;pic18f2331.h: 6172: struct {
[; ;pic18f2331.h: 6173: unsigned C :1;
[; ;pic18f2331.h: 6174: unsigned DC :1;
[; ;pic18f2331.h: 6175: unsigned Z :1;
[; ;pic18f2331.h: 6176: unsigned OV :1;
[; ;pic18f2331.h: 6177: unsigned N :1;
[; ;pic18f2331.h: 6178: };
[; ;pic18f2331.h: 6179: struct {
[; ;pic18f2331.h: 6180: unsigned CARRY :1;
[; ;pic18f2331.h: 6181: unsigned :1;
[; ;pic18f2331.h: 6182: unsigned ZERO :1;
[; ;pic18f2331.h: 6183: unsigned OVERFLOW :1;
[; ;pic18f2331.h: 6184: unsigned NEGATIVE :1;
[; ;pic18f2331.h: 6185: };
[; ;pic18f2331.h: 6186: } STATUSbits_t;
[; ;pic18f2331.h: 6187: extern volatile STATUSbits_t STATUSbits @ 0xFD8;
[; ;pic18f2331.h: 6237: extern volatile unsigned short FSR2 @ 0xFD9;
"6239
[; ;pic18f2331.h: 6239: asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
[; ;pic18f2331.h: 6244: extern volatile unsigned char FSR2L @ 0xFD9;
"6246
[; ;pic18f2331.h: 6246: asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
[; ;pic18f2331.h: 6251: extern volatile unsigned char FSR2H @ 0xFDA;
"6253
[; ;pic18f2331.h: 6253: asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
[; ;pic18f2331.h: 6258: extern volatile unsigned char PLUSW2 @ 0xFDB;
"6260
[; ;pic18f2331.h: 6260: asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
[; ;pic18f2331.h: 6265: extern volatile unsigned char PREINC2 @ 0xFDC;
"6267
[; ;pic18f2331.h: 6267: asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
[; ;pic18f2331.h: 6272: extern volatile unsigned char POSTDEC2 @ 0xFDD;
"6274
[; ;pic18f2331.h: 6274: asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
[; ;pic18f2331.h: 6279: extern volatile unsigned char POSTINC2 @ 0xFDE;
"6281
[; ;pic18f2331.h: 6281: asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
[; ;pic18f2331.h: 6286: extern volatile unsigned char INDF2 @ 0xFDF;
"6288
[; ;pic18f2331.h: 6288: asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
[; ;pic18f2331.h: 6293: extern volatile unsigned char BSR @ 0xFE0;
"6295
[; ;pic18f2331.h: 6295: asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
[; ;pic18f2331.h: 6300: extern volatile unsigned short FSR1 @ 0xFE1;
"6302
[; ;pic18f2331.h: 6302: asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
[; ;pic18f2331.h: 6307: extern volatile unsigned char FSR1L @ 0xFE1;
"6309
[; ;pic18f2331.h: 6309: asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
[; ;pic18f2331.h: 6314: extern volatile unsigned char FSR1H @ 0xFE2;
"6316
[; ;pic18f2331.h: 6316: asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
[; ;pic18f2331.h: 6321: extern volatile unsigned char PLUSW1 @ 0xFE3;
"6323
[; ;pic18f2331.h: 6323: asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
[; ;pic18f2331.h: 6328: extern volatile unsigned char PREINC1 @ 0xFE4;
"6330
[; ;pic18f2331.h: 6330: asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
[; ;pic18f2331.h: 6335: extern volatile unsigned char POSTDEC1 @ 0xFE5;
"6337
[; ;pic18f2331.h: 6337: asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
[; ;pic18f2331.h: 6342: extern volatile unsigned char POSTINC1 @ 0xFE6;
"6344
[; ;pic18f2331.h: 6344: asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
[; ;pic18f2331.h: 6349: extern volatile unsigned char INDF1 @ 0xFE7;
"6351
[; ;pic18f2331.h: 6351: asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
[; ;pic18f2331.h: 6356: extern volatile unsigned char WREG @ 0xFE8;
"6358
[; ;pic18f2331.h: 6358: asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
[; ;pic18f2331.h: 6363: extern volatile unsigned short FSR0 @ 0xFE9;
"6365
[; ;pic18f2331.h: 6365: asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
[; ;pic18f2331.h: 6370: extern volatile unsigned char FSR0L @ 0xFE9;
"6372
[; ;pic18f2331.h: 6372: asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
[; ;pic18f2331.h: 6377: extern volatile unsigned char FSR0H @ 0xFEA;
"6379
[; ;pic18f2331.h: 6379: asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
[; ;pic18f2331.h: 6384: extern volatile unsigned char PLUSW0 @ 0xFEB;
"6386
[; ;pic18f2331.h: 6386: asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
[; ;pic18f2331.h: 6391: extern volatile unsigned char PREINC0 @ 0xFEC;
"6393
[; ;pic18f2331.h: 6393: asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
[; ;pic18f2331.h: 6398: extern volatile unsigned char POSTDEC0 @ 0xFED;
"6400
[; ;pic18f2331.h: 6400: asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
[; ;pic18f2331.h: 6405: extern volatile unsigned char POSTINC0 @ 0xFEE;
"6407
[; ;pic18f2331.h: 6407: asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
[; ;pic18f2331.h: 6412: extern volatile unsigned char INDF0 @ 0xFEF;
"6414
[; ;pic18f2331.h: 6414: asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
[; ;pic18f2331.h: 6419: extern volatile unsigned char INTCON3 @ 0xFF0;
"6421
[; ;pic18f2331.h: 6421: asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
[; ;pic18f2331.h: 6424: typedef union {
[; ;pic18f2331.h: 6425: struct {
[; ;pic18f2331.h: 6426: unsigned INT1IF :1;
[; ;pic18f2331.h: 6427: unsigned INT2IF :1;
[; ;pic18f2331.h: 6428: unsigned :1;
[; ;pic18f2331.h: 6429: unsigned INT1IE :1;
[; ;pic18f2331.h: 6430: unsigned INT2IE :1;
[; ;pic18f2331.h: 6431: unsigned :1;
[; ;pic18f2331.h: 6432: unsigned INT1IP :1;
[; ;pic18f2331.h: 6433: unsigned INT2IP :1;
[; ;pic18f2331.h: 6434: };
[; ;pic18f2331.h: 6435: struct {
[; ;pic18f2331.h: 6436: unsigned INT1F :1;
[; ;pic18f2331.h: 6437: unsigned INT2F :1;
[; ;pic18f2331.h: 6438: unsigned :1;
[; ;pic18f2331.h: 6439: unsigned INT1E :1;
[; ;pic18f2331.h: 6440: unsigned INT2E :1;
[; ;pic18f2331.h: 6441: unsigned :1;
[; ;pic18f2331.h: 6442: unsigned INT1P :1;
[; ;pic18f2331.h: 6443: unsigned INT2P :1;
[; ;pic18f2331.h: 6444: };
[; ;pic18f2331.h: 6445: } INTCON3bits_t;
[; ;pic18f2331.h: 6446: extern volatile INTCON3bits_t INTCON3bits @ 0xFF0;
[; ;pic18f2331.h: 6511: extern volatile unsigned char INTCON2 @ 0xFF1;
"6513
[; ;pic18f2331.h: 6513: asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
[; ;pic18f2331.h: 6516: typedef union {
[; ;pic18f2331.h: 6517: struct {
[; ;pic18f2331.h: 6518: unsigned :7;
[; ;pic18f2331.h: 6519: unsigned NOT_RBPU :1;
[; ;pic18f2331.h: 6520: };
[; ;pic18f2331.h: 6521: struct {
[; ;pic18f2331.h: 6522: unsigned RBIP :1;
[; ;pic18f2331.h: 6523: unsigned :1;
[; ;pic18f2331.h: 6524: unsigned TMR0IP :1;
[; ;pic18f2331.h: 6525: unsigned :1;
[; ;pic18f2331.h: 6526: unsigned INTEDG2 :1;
[; ;pic18f2331.h: 6527: unsigned INTEDG1 :1;
[; ;pic18f2331.h: 6528: unsigned INTEDG0 :1;
[; ;pic18f2331.h: 6529: unsigned nRBPU :1;
[; ;pic18f2331.h: 6530: };
[; ;pic18f2331.h: 6531: struct {
[; ;pic18f2331.h: 6532: unsigned :2;
[; ;pic18f2331.h: 6533: unsigned T0IP :1;
[; ;pic18f2331.h: 6534: unsigned :4;
[; ;pic18f2331.h: 6535: unsigned RBPU :1;
[; ;pic18f2331.h: 6536: };
[; ;pic18f2331.h: 6537: } INTCON2bits_t;
[; ;pic18f2331.h: 6538: extern volatile INTCON2bits_t INTCON2bits @ 0xFF1;
[; ;pic18f2331.h: 6588: extern volatile unsigned char INTCON @ 0xFF2;
"6590
[; ;pic18f2331.h: 6590: asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
[; ;pic18f2331.h: 6593: typedef union {
[; ;pic18f2331.h: 6594: struct {
[; ;pic18f2331.h: 6595: unsigned RBIF :1;
[; ;pic18f2331.h: 6596: unsigned INT0IF :1;
[; ;pic18f2331.h: 6597: unsigned TMR0IF :1;
[; ;pic18f2331.h: 6598: unsigned RBIE :1;
[; ;pic18f2331.h: 6599: unsigned INT0IE :1;
[; ;pic18f2331.h: 6600: unsigned TMR0IE :1;
[; ;pic18f2331.h: 6601: unsigned PEIE_GIEL :1;
[; ;pic18f2331.h: 6602: unsigned GIE_GIEH :1;
[; ;pic18f2331.h: 6603: };
[; ;pic18f2331.h: 6604: struct {
[; ;pic18f2331.h: 6605: unsigned :1;
[; ;pic18f2331.h: 6606: unsigned INT0F :1;
[; ;pic18f2331.h: 6607: unsigned T0IF :1;
[; ;pic18f2331.h: 6608: unsigned :1;
[; ;pic18f2331.h: 6609: unsigned INT0E :1;
[; ;pic18f2331.h: 6610: unsigned T0IE :1;
[; ;pic18f2331.h: 6611: unsigned PEIE :1;
[; ;pic18f2331.h: 6612: unsigned GIE :1;
[; ;pic18f2331.h: 6613: };
[; ;pic18f2331.h: 6614: struct {
[; ;pic18f2331.h: 6615: unsigned :6;
[; ;pic18f2331.h: 6616: unsigned GIEL :1;
[; ;pic18f2331.h: 6617: unsigned GIEH :1;
[; ;pic18f2331.h: 6618: };
[; ;pic18f2331.h: 6619: } INTCONbits_t;
[; ;pic18f2331.h: 6620: extern volatile INTCONbits_t INTCONbits @ 0xFF2;
[; ;pic18f2331.h: 6705: extern volatile unsigned short PROD @ 0xFF3;
"6707
[; ;pic18f2331.h: 6707: asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
[; ;pic18f2331.h: 6712: extern volatile unsigned char PRODL @ 0xFF3;
"6714
[; ;pic18f2331.h: 6714: asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
[; ;pic18f2331.h: 6719: extern volatile unsigned char PRODH @ 0xFF4;
"6721
[; ;pic18f2331.h: 6721: asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
[; ;pic18f2331.h: 6726: extern volatile unsigned char TABLAT @ 0xFF5;
"6728
[; ;pic18f2331.h: 6728: asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
[; ;pic18f2331.h: 6734: extern volatile unsigned short long TBLPTR @ 0xFF6;
"6737
[; ;pic18f2331.h: 6737: asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
[; ;pic18f2331.h: 6742: extern volatile unsigned char TBLPTRL @ 0xFF6;
"6744
[; ;pic18f2331.h: 6744: asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
[; ;pic18f2331.h: 6749: extern volatile unsigned char TBLPTRH @ 0xFF7;
"6751
[; ;pic18f2331.h: 6751: asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
[; ;pic18f2331.h: 6756: extern volatile unsigned char TBLPTRU @ 0xFF8;
"6758
[; ;pic18f2331.h: 6758: asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
[; ;pic18f2331.h: 6764: extern volatile unsigned short long PCLAT @ 0xFF9;
"6767
[; ;pic18f2331.h: 6767: asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
[; ;pic18f2331.h: 6771: extern volatile unsigned short long PC @ 0xFF9;
"6774
[; ;pic18f2331.h: 6774: asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
[; ;pic18f2331.h: 6779: extern volatile unsigned char PCL @ 0xFF9;
"6781
[; ;pic18f2331.h: 6781: asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
[; ;pic18f2331.h: 6786: extern volatile unsigned char PCLATH @ 0xFFA;
"6788
[; ;pic18f2331.h: 6788: asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
[; ;pic18f2331.h: 6793: extern volatile unsigned char PCLATU @ 0xFFB;
"6795
[; ;pic18f2331.h: 6795: asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
[; ;pic18f2331.h: 6800: extern volatile unsigned char STKPTR @ 0xFFC;
"6802
[; ;pic18f2331.h: 6802: asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
[; ;pic18f2331.h: 6805: typedef union {
[; ;pic18f2331.h: 6806: struct {
[; ;pic18f2331.h: 6807: unsigned STKPTR :5;
[; ;pic18f2331.h: 6808: unsigned :1;
[; ;pic18f2331.h: 6809: unsigned STKUNF :1;
[; ;pic18f2331.h: 6810: unsigned STKFUL :1;
[; ;pic18f2331.h: 6811: };
[; ;pic18f2331.h: 6812: struct {
[; ;pic18f2331.h: 6813: unsigned STKPTR0 :1;
[; ;pic18f2331.h: 6814: unsigned STKPTR1 :1;
[; ;pic18f2331.h: 6815: unsigned STKPTR2 :1;
[; ;pic18f2331.h: 6816: unsigned STKPTR3 :1;
[; ;pic18f2331.h: 6817: unsigned STKPTR4 :1;
[; ;pic18f2331.h: 6818: unsigned :2;
[; ;pic18f2331.h: 6819: unsigned STKOVF :1;
[; ;pic18f2331.h: 6820: };
[; ;pic18f2331.h: 6821: } STKPTRbits_t;
[; ;pic18f2331.h: 6822: extern volatile STKPTRbits_t STKPTRbits @ 0xFFC;
[; ;pic18f2331.h: 6873: extern volatile unsigned short long TOS @ 0xFFD;
"6876
[; ;pic18f2331.h: 6876: asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
[; ;pic18f2331.h: 6881: extern volatile unsigned char TOSL @ 0xFFD;
"6883
[; ;pic18f2331.h: 6883: asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
[; ;pic18f2331.h: 6888: extern volatile unsigned char TOSH @ 0xFFE;
"6890
[; ;pic18f2331.h: 6890: asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
[; ;pic18f2331.h: 6895: extern volatile unsigned char TOSU @ 0xFFF;
"6897
[; ;pic18f2331.h: 6897: asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
[; ;pic18f2331.h: 6907: extern volatile __bit ABDEN @ (((unsigned) &BAUDCON)*8) + 0;
[; ;pic18f2331.h: 6909: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON)*8) + 7;
[; ;pic18f2331.h: 6911: extern volatile __bit ACMOD0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic18f2331.h: 6913: extern volatile __bit ACMOD1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic18f2331.h: 6915: extern volatile __bit ACONV @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic18f2331.h: 6917: extern volatile __bit ACQT0 @ (((unsigned) &ADCON2)*8) + 3;
[; ;pic18f2331.h: 6919: extern volatile __bit ACQT1 @ (((unsigned) &ADCON2)*8) + 4;
[; ;pic18f2331.h: 6921: extern volatile __bit ACQT2 @ (((unsigned) &ADCON2)*8) + 5;
[; ;pic18f2331.h: 6923: extern volatile __bit ACQT3 @ (((unsigned) &ADCON2)*8) + 6;
[; ;pic18f2331.h: 6925: extern volatile __bit ACSCH @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic18f2331.h: 6927: extern volatile __bit ADCS0 @ (((unsigned) &ADCON2)*8) + 0;
[; ;pic18f2331.h: 6929: extern volatile __bit ADCS1 @ (((unsigned) &ADCON2)*8) + 1;
[; ;pic18f2331.h: 6931: extern volatile __bit ADCS2 @ (((unsigned) &ADCON2)*8) + 2;
[; ;pic18f2331.h: 6933: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic18f2331.h: 6935: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic18f2331.h: 6937: extern volatile __bit ADFM @ (((unsigned) &ADCON2)*8) + 7;
[; ;pic18f2331.h: 6939: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic18f2331.h: 6941: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic18f2331.h: 6943: extern volatile __bit ADIP @ (((unsigned) &IPR1)*8) + 6;
[; ;pic18f2331.h: 6945: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic18f2331.h: 6947: extern volatile __bit ADPNT0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic18f2331.h: 6949: extern volatile __bit ADPNT1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic18f2331.h: 6951: extern volatile __bit ADRS0 @ (((unsigned) &ADCON3)*8) + 6;
[; ;pic18f2331.h: 6953: extern volatile __bit ADRS1 @ (((unsigned) &ADCON3)*8) + 7;
[; ;pic18f2331.h: 6955: extern volatile __bit AN0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic18f2331.h: 6957: extern volatile __bit AN1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic18f2331.h: 6959: extern volatile __bit AN2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic18f2331.h: 6961: extern volatile __bit AN3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic18f2331.h: 6963: extern volatile __bit AN4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic18f2331.h: 6965: extern volatile __bit ANS0 @ (((unsigned) &ANSEL0)*8) + 0;
[; ;pic18f2331.h: 6967: extern volatile __bit ANS1 @ (((unsigned) &ANSEL0)*8) + 1;
[; ;pic18f2331.h: 6969: extern volatile __bit ANS2 @ (((unsigned) &ANSEL0)*8) + 2;
[; ;pic18f2331.h: 6971: extern volatile __bit ANS3 @ (((unsigned) &ANSEL0)*8) + 3;
[; ;pic18f2331.h: 6973: extern volatile __bit ANS4 @ (((unsigned) &ANSEL0)*8) + 4;
[; ;pic18f2331.h: 6975: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic18f2331.h: 6977: extern volatile __bit BFEMT @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic18f2331.h: 6979: extern volatile __bit BFOVFL @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic18f2331.h: 6981: extern volatile __bit BOR @ (((unsigned) &RCON)*8) + 0;
[; ;pic18f2331.h: 6983: extern volatile __bit BRFEN @ (((unsigned) &FLTCONFIG)*8) + 7;
[; ;pic18f2331.h: 6985: extern volatile __bit BRG16 @ (((unsigned) &BAUDCON)*8) + 3;
[; ;pic18f2331.h: 6987: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic18f2331.h: 6989: extern volatile __bit BRGH1 @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic18f2331.h: 6991: extern volatile __bit CAP1M0 @ (((unsigned) &CAP1CON)*8) + 0;
[; ;pic18f2331.h: 6993: extern volatile __bit CAP1M1 @ (((unsigned) &CAP1CON)*8) + 1;
[; ;pic18f2331.h: 6995: extern volatile __bit CAP1M2 @ (((unsigned) &CAP1CON)*8) + 2;
[; ;pic18f2331.h: 6997: extern volatile __bit CAP1M3 @ (((unsigned) &CAP1CON)*8) + 3;
[; ;pic18f2331.h: 6999: extern volatile __bit CAP1REN @ (((unsigned) &CAP1CON)*8) + 6;
[; ;pic18f2331.h: 7001: extern volatile __bit CAP1TMR @ (((unsigned) &CAP1CON)*8) + 5;
[; ;pic18f2331.h: 7003: extern volatile __bit CAP2M0 @ (((unsigned) &CAP2CON)*8) + 0;
[; ;pic18f2331.h: 7005: extern volatile __bit CAP2M1 @ (((unsigned) &CAP2CON)*8) + 1;
[; ;pic18f2331.h: 7007: extern volatile __bit CAP2M2 @ (((unsigned) &CAP2CON)*8) + 2;
[; ;pic18f2331.h: 7009: extern volatile __bit CAP2M3 @ (((unsigned) &CAP2CON)*8) + 3;
[; ;pic18f2331.h: 7011: extern volatile __bit CAP2REN @ (((unsigned) &CAP2CON)*8) + 6;
[; ;pic18f2331.h: 7013: extern volatile __bit CAP2TMR @ (((unsigned) &CAP2CON)*8) + 5;
[; ;pic18f2331.h: 7015: extern volatile __bit CAP3M0 @ (((unsigned) &CAP3CON)*8) + 0;
[; ;pic18f2331.h: 7017: extern volatile __bit CAP3M1 @ (((unsigned) &CAP3CON)*8) + 1;
[; ;pic18f2331.h: 7019: extern volatile __bit CAP3M2 @ (((unsigned) &CAP3CON)*8) + 2;
[; ;pic18f2331.h: 7021: extern volatile __bit CAP3M3 @ (((unsigned) &CAP3CON)*8) + 3;
[; ;pic18f2331.h: 7023: extern volatile __bit CAP3REN @ (((unsigned) &CAP3CON)*8) + 6;
[; ;pic18f2331.h: 7025: extern volatile __bit CAP3TMR @ (((unsigned) &CAP3CON)*8) + 5;
[; ;pic18f2331.h: 7027: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic18f2331.h: 7029: extern volatile __bit CCP1 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic18f2331.h: 7031: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic18f2331.h: 7033: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic18f2331.h: 7035: extern volatile __bit CCP1IP @ (((unsigned) &IPR1)*8) + 2;
[; ;pic18f2331.h: 7037: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic18f2331.h: 7039: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic18f2331.h: 7041: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic18f2331.h: 7043: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic18f2331.h: 7045: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic18f2331.h: 7047: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic18f2331.h: 7049: extern volatile __bit CCP2 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 7051: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic18f2331.h: 7053: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic18f2331.h: 7055: extern volatile __bit CCP2IP @ (((unsigned) &IPR2)*8) + 0;
[; ;pic18f2331.h: 7057: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic18f2331.h: 7059: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic18f2331.h: 7061: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic18f2331.h: 7063: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic18f2331.h: 7065: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic18f2331.h: 7067: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic18f2331.h: 7069: extern volatile __bit CCP2_PA2 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic18f2331.h: 7071: extern volatile __bit CCP9E @ (((unsigned) &PORTE)*8) + 3;
[; ;pic18f2331.h: 7073: extern volatile __bit CFGS @ (((unsigned) &EECON1)*8) + 6;
[; ;pic18f2331.h: 7075: extern volatile __bit CHSN3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic18f2331.h: 7077: extern volatile __bit CK @ (((unsigned) &PORTC)*8) + 6;
[; ;pic18f2331.h: 7079: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic18f2331.h: 7081: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic18f2331.h: 7083: extern volatile __bit CLKI @ (((unsigned) &PORTA)*8) + 7;
[; ;pic18f2331.h: 7085: extern volatile __bit CLKO @ (((unsigned) &PORTA)*8) + 6;
[; ;pic18f2331.h: 7087: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic18f2331.h: 7089: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic18f2331.h: 7091: extern volatile __bit CSRC1 @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic18f2331.h: 7093: extern volatile __bit DA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7095: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7097: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic18f2331.h: 7099: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic18f2331.h: 7101: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic18f2331.h: 7103: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic18f2331.h: 7105: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic18f2331.h: 7107: extern volatile __bit DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7109: extern volatile __bit DOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 7111: extern volatile __bit DT @ (((unsigned) &PORTC)*8) + 7;
[; ;pic18f2331.h: 7113: extern volatile __bit DT0 @ (((unsigned) &DTCON)*8) + 0;
[; ;pic18f2331.h: 7115: extern volatile __bit DT1 @ (((unsigned) &DTCON)*8) + 1;
[; ;pic18f2331.h: 7117: extern volatile __bit DT2 @ (((unsigned) &DTCON)*8) + 2;
[; ;pic18f2331.h: 7119: extern volatile __bit DT3 @ (((unsigned) &DTCON)*8) + 3;
[; ;pic18f2331.h: 7121: extern volatile __bit DT4 @ (((unsigned) &DTCON)*8) + 4;
[; ;pic18f2331.h: 7123: extern volatile __bit DT5 @ (((unsigned) &DTCON)*8) + 5;
[; ;pic18f2331.h: 7125: extern volatile __bit DTA0 @ (((unsigned) &DTCON)*8) + 0;
[; ;pic18f2331.h: 7127: extern volatile __bit DTA1 @ (((unsigned) &DTCON)*8) + 1;
[; ;pic18f2331.h: 7129: extern volatile __bit DTA2 @ (((unsigned) &DTCON)*8) + 2;
[; ;pic18f2331.h: 7131: extern volatile __bit DTA3 @ (((unsigned) &DTCON)*8) + 3;
[; ;pic18f2331.h: 7133: extern volatile __bit DTA4 @ (((unsigned) &DTCON)*8) + 4;
[; ;pic18f2331.h: 7135: extern volatile __bit DTA5 @ (((unsigned) &DTCON)*8) + 5;
[; ;pic18f2331.h: 7137: extern volatile __bit DTAPS0 @ (((unsigned) &DTCON)*8) + 6;
[; ;pic18f2331.h: 7139: extern volatile __bit DTAPS1 @ (((unsigned) &DTCON)*8) + 7;
[; ;pic18f2331.h: 7141: extern volatile __bit DTPS0 @ (((unsigned) &DTCON)*8) + 6;
[; ;pic18f2331.h: 7143: extern volatile __bit DTPS1 @ (((unsigned) &DTCON)*8) + 7;
[; ;pic18f2331.h: 7145: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7147: extern volatile __bit D_NOT_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7149: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7151: extern volatile __bit EBDIS @ (((unsigned) &PR2)*8) + 7;
[; ;pic18f2331.h: 7153: extern volatile __bit EEFS @ (((unsigned) &EECON1)*8) + 6;
[; ;pic18f2331.h: 7155: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic18f2331.h: 7157: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic18f2331.h: 7159: extern volatile __bit EEIP @ (((unsigned) &IPR2)*8) + 4;
[; ;pic18f2331.h: 7161: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic18f2331.h: 7163: extern volatile __bit ERROR @ (((unsigned) &QEICON)*8) + 6;
[; ;pic18f2331.h: 7165: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic18f2331.h: 7167: extern volatile __bit FFOVFL @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic18f2331.h: 7169: extern volatile __bit FIFOEN @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic18f2331.h: 7171: extern volatile __bit FLT1EN @ (((unsigned) &DFLTCON)*8) + 3;
[; ;pic18f2331.h: 7173: extern volatile __bit FLT2EN @ (((unsigned) &DFLTCON)*8) + 4;
[; ;pic18f2331.h: 7175: extern volatile __bit FLT3EN @ (((unsigned) &DFLTCON)*8) + 5;
[; ;pic18f2331.h: 7177: extern volatile __bit FLT4EN @ (((unsigned) &DFLTCON)*8) + 6;
[; ;pic18f2331.h: 7179: extern volatile __bit FLTA @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 7181: extern volatile __bit FLTAEN @ (((unsigned) &FLTCONFIG)*8) + 0;
[; ;pic18f2331.h: 7183: extern volatile __bit FLTAMOD @ (((unsigned) &FLTCONFIG)*8) + 1;
[; ;pic18f2331.h: 7185: extern volatile __bit FLTAS @ (((unsigned) &FLTCONFIG)*8) + 2;
[; ;pic18f2331.h: 7187: extern volatile __bit FLTB @ (((unsigned) &PORTC)*8) + 2;
[; ;pic18f2331.h: 7189: extern volatile __bit FLTBEN @ (((unsigned) &FLTCONFIG)*8) + 4;
[; ;pic18f2331.h: 7191: extern volatile __bit FLTBMOD @ (((unsigned) &FLTCONFIG)*8) + 5;
[; ;pic18f2331.h: 7193: extern volatile __bit FLTBS @ (((unsigned) &FLTCONFIG)*8) + 6;
[; ;pic18f2331.h: 7195: extern volatile __bit FLTCK0 @ (((unsigned) &DFLTCON)*8) + 0;
[; ;pic18f2331.h: 7197: extern volatile __bit FLTCK1 @ (((unsigned) &DFLTCON)*8) + 1;
[; ;pic18f2331.h: 7199: extern volatile __bit FLTCK2 @ (((unsigned) &DFLTCON)*8) + 2;
[; ;pic18f2331.h: 7201: extern volatile __bit FLTCON @ (((unsigned) &FLTCONFIG)*8) + 3;
[; ;pic18f2331.h: 7203: extern volatile __bit FLTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic18f2331.h: 7205: extern volatile __bit FREE @ (((unsigned) &EECON1)*8) + 4;
[; ;pic18f2331.h: 7207: extern volatile __bit GASEL0 @ (((unsigned) &ADCHS)*8) + 0;
[; ;pic18f2331.h: 7209: extern volatile __bit GASEL1 @ (((unsigned) &ADCHS)*8) + 1;
[; ;pic18f2331.h: 7211: extern volatile __bit GBSEL0 @ (((unsigned) &ADCHS)*8) + 4;
[; ;pic18f2331.h: 7213: extern volatile __bit GBSEL1 @ (((unsigned) &ADCHS)*8) + 5;
[; ;pic18f2331.h: 7215: extern volatile __bit GCSEL0 @ (((unsigned) &ADCHS)*8) + 2;
[; ;pic18f2331.h: 7217: extern volatile __bit GCSEL1 @ (((unsigned) &ADCHS)*8) + 3;
[; ;pic18f2331.h: 7219: extern volatile __bit GDSEL0 @ (((unsigned) &ADCHS)*8) + 6;
[; ;pic18f2331.h: 7221: extern volatile __bit GDSEL1 @ (((unsigned) &ADCHS)*8) + 7;
[; ;pic18f2331.h: 7223: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic18f2331.h: 7225: extern volatile __bit GIEH @ (((unsigned) &INTCON)*8) + 7;
[; ;pic18f2331.h: 7227: extern volatile __bit GIEL @ (((unsigned) &INTCON)*8) + 6;
[; ;pic18f2331.h: 7229: extern volatile __bit GIE_GIEH @ (((unsigned) &INTCON)*8) + 7;
[; ;pic18f2331.h: 7231: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7233: extern volatile __bit GODONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7235: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7237: extern volatile __bit GO_NOT_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7239: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7241: extern volatile __bit IC1IE @ (((unsigned) &PIE3)*8) + 1;
[; ;pic18f2331.h: 7243: extern volatile __bit IC1IF @ (((unsigned) &PIR3)*8) + 1;
[; ;pic18f2331.h: 7245: extern volatile __bit IC1IP @ (((unsigned) &IPR3)*8) + 1;
[; ;pic18f2331.h: 7247: extern volatile __bit IC2QEIE @ (((unsigned) &PIE3)*8) + 2;
[; ;pic18f2331.h: 7249: extern volatile __bit IC2QEIF @ (((unsigned) &PIR3)*8) + 2;
[; ;pic18f2331.h: 7251: extern volatile __bit IC2QEIP @ (((unsigned) &IPR3)*8) + 2;
[; ;pic18f2331.h: 7253: extern volatile __bit IC3DRIE @ (((unsigned) &PIE3)*8) + 3;
[; ;pic18f2331.h: 7255: extern volatile __bit IC3DRIF @ (((unsigned) &PIR3)*8) + 3;
[; ;pic18f2331.h: 7257: extern volatile __bit IC3DRIP @ (((unsigned) &IPR3)*8) + 3;
[; ;pic18f2331.h: 7259: extern volatile __bit IDLEN @ (((unsigned) &OSCCON)*8) + 7;
[; ;pic18f2331.h: 7261: extern volatile __bit INT0 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic18f2331.h: 7263: extern volatile __bit INT0E @ (((unsigned) &INTCON)*8) + 4;
[; ;pic18f2331.h: 7265: extern volatile __bit INT0F @ (((unsigned) &INTCON)*8) + 1;
[; ;pic18f2331.h: 7267: extern volatile __bit INT0IE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic18f2331.h: 7269: extern volatile __bit INT0IF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic18f2331.h: 7271: extern volatile __bit INT1 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic18f2331.h: 7273: extern volatile __bit INT1E @ (((unsigned) &INTCON3)*8) + 3;
[; ;pic18f2331.h: 7275: extern volatile __bit INT1F @ (((unsigned) &INTCON3)*8) + 0;
[; ;pic18f2331.h: 7277: extern volatile __bit INT1IE @ (((unsigned) &INTCON3)*8) + 3;
[; ;pic18f2331.h: 7279: extern volatile __bit INT1IF @ (((unsigned) &INTCON3)*8) + 0;
[; ;pic18f2331.h: 7281: extern volatile __bit INT1IP @ (((unsigned) &INTCON3)*8) + 6;
[; ;pic18f2331.h: 7283: extern volatile __bit INT1P @ (((unsigned) &INTCON3)*8) + 6;
[; ;pic18f2331.h: 7285: extern volatile __bit INT2 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic18f2331.h: 7287: extern volatile __bit INT2E @ (((unsigned) &INTCON3)*8) + 4;
[; ;pic18f2331.h: 7289: extern volatile __bit INT2F @ (((unsigned) &INTCON3)*8) + 1;
[; ;pic18f2331.h: 7291: extern volatile __bit INT2IE @ (((unsigned) &INTCON3)*8) + 4;
[; ;pic18f2331.h: 7293: extern volatile __bit INT2IF @ (((unsigned) &INTCON3)*8) + 1;
[; ;pic18f2331.h: 7295: extern volatile __bit INT2IP @ (((unsigned) &INTCON3)*8) + 7;
[; ;pic18f2331.h: 7297: extern volatile __bit INT2P @ (((unsigned) &INTCON3)*8) + 7;
[; ;pic18f2331.h: 7299: extern volatile __bit INTEDG0 @ (((unsigned) &INTCON2)*8) + 6;
[; ;pic18f2331.h: 7301: extern volatile __bit INTEDG1 @ (((unsigned) &INTCON2)*8) + 5;
[; ;pic18f2331.h: 7303: extern volatile __bit INTEDG2 @ (((unsigned) &INTCON2)*8) + 4;
[; ;pic18f2331.h: 7305: extern volatile __bit IOFS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic18f2331.h: 7307: extern volatile __bit IPEN @ (((unsigned) &RCON)*8) + 7;
[; ;pic18f2331.h: 7309: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic18f2331.h: 7311: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic18f2331.h: 7313: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic18f2331.h: 7315: extern volatile __bit IRVST @ (((unsigned) &LVDCON)*8) + 5;
[; ;pic18f2331.h: 7317: extern volatile __bit IVRST @ (((unsigned) &LVDCON)*8) + 5;
[; ;pic18f2331.h: 7319: extern volatile __bit LA0 @ (((unsigned) &LATA)*8) + 0;
[; ;pic18f2331.h: 7321: extern volatile __bit LA1 @ (((unsigned) &LATA)*8) + 1;
[; ;pic18f2331.h: 7323: extern volatile __bit LA2 @ (((unsigned) &LATA)*8) + 2;
[; ;pic18f2331.h: 7325: extern volatile __bit LA3 @ (((unsigned) &LATA)*8) + 3;
[; ;pic18f2331.h: 7327: extern volatile __bit LA4 @ (((unsigned) &LATA)*8) + 4;
[; ;pic18f2331.h: 7329: extern volatile __bit LA6 @ (((unsigned) &LATA)*8) + 6;
[; ;pic18f2331.h: 7331: extern volatile __bit LA7 @ (((unsigned) &LATA)*8) + 7;
[; ;pic18f2331.h: 7333: extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;
[; ;pic18f2331.h: 7335: extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;
[; ;pic18f2331.h: 7337: extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;
[; ;pic18f2331.h: 7339: extern volatile __bit LATA3 @ (((unsigned) &LATA)*8) + 3;
[; ;pic18f2331.h: 7341: extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;
[; ;pic18f2331.h: 7343: extern volatile __bit LATA6 @ (((unsigned) &LATA)*8) + 6;
[; ;pic18f2331.h: 7345: extern volatile __bit LATA7 @ (((unsigned) &LATA)*8) + 7;
[; ;pic18f2331.h: 7347: extern volatile __bit LATB0 @ (((unsigned) &LATB)*8) + 0;
[; ;pic18f2331.h: 7349: extern volatile __bit LATB1 @ (((unsigned) &LATB)*8) + 1;
[; ;pic18f2331.h: 7351: extern volatile __bit LATB2 @ (((unsigned) &LATB)*8) + 2;
[; ;pic18f2331.h: 7353: extern volatile __bit LATB3 @ (((unsigned) &LATB)*8) + 3;
[; ;pic18f2331.h: 7355: extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;
[; ;pic18f2331.h: 7357: extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;
[; ;pic18f2331.h: 7359: extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;
[; ;pic18f2331.h: 7361: extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;
[; ;pic18f2331.h: 7363: extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;
[; ;pic18f2331.h: 7365: extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;
[; ;pic18f2331.h: 7367: extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;
[; ;pic18f2331.h: 7369: extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;
[; ;pic18f2331.h: 7371: extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;
[; ;pic18f2331.h: 7373: extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;
[; ;pic18f2331.h: 7375: extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;
[; ;pic18f2331.h: 7377: extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;
[; ;pic18f2331.h: 7379: extern volatile __bit LB0 @ (((unsigned) &LATB)*8) + 0;
[; ;pic18f2331.h: 7381: extern volatile __bit LB1 @ (((unsigned) &LATB)*8) + 1;
[; ;pic18f2331.h: 7383: extern volatile __bit LB2 @ (((unsigned) &LATB)*8) + 2;
[; ;pic18f2331.h: 7385: extern volatile __bit LB3 @ (((unsigned) &LATB)*8) + 3;
[; ;pic18f2331.h: 7387: extern volatile __bit LB4 @ (((unsigned) &LATB)*8) + 4;
[; ;pic18f2331.h: 7389: extern volatile __bit LB5 @ (((unsigned) &LATB)*8) + 5;
[; ;pic18f2331.h: 7391: extern volatile __bit LB6 @ (((unsigned) &LATB)*8) + 6;
[; ;pic18f2331.h: 7393: extern volatile __bit LB7 @ (((unsigned) &LATB)*8) + 7;
[; ;pic18f2331.h: 7395: extern volatile __bit LC0 @ (((unsigned) &LATC)*8) + 0;
[; ;pic18f2331.h: 7397: extern volatile __bit LC1 @ (((unsigned) &LATC)*8) + 1;
[; ;pic18f2331.h: 7399: extern volatile __bit LC2 @ (((unsigned) &LATC)*8) + 2;
[; ;pic18f2331.h: 7401: extern volatile __bit LC3 @ (((unsigned) &LATC)*8) + 3;
[; ;pic18f2331.h: 7403: extern volatile __bit LC4 @ (((unsigned) &LATC)*8) + 4;
[; ;pic18f2331.h: 7405: extern volatile __bit LC5 @ (((unsigned) &LATC)*8) + 5;
[; ;pic18f2331.h: 7407: extern volatile __bit LC6 @ (((unsigned) &LATC)*8) + 6;
[; ;pic18f2331.h: 7409: extern volatile __bit LC7 @ (((unsigned) &LATC)*8) + 7;
[; ;pic18f2331.h: 7411: extern volatile __bit LVDEN @ (((unsigned) &LVDCON)*8) + 4;
[; ;pic18f2331.h: 7413: extern volatile __bit LVDIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic18f2331.h: 7415: extern volatile __bit LVDIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic18f2331.h: 7417: extern volatile __bit LVDIP @ (((unsigned) &IPR2)*8) + 2;
[; ;pic18f2331.h: 7419: extern volatile __bit LVDL0 @ (((unsigned) &LVDCON)*8) + 0;
[; ;pic18f2331.h: 7421: extern volatile __bit LVDL1 @ (((unsigned) &LVDCON)*8) + 1;
[; ;pic18f2331.h: 7423: extern volatile __bit LVDL2 @ (((unsigned) &LVDCON)*8) + 2;
[; ;pic18f2331.h: 7425: extern volatile __bit LVDL3 @ (((unsigned) &LVDCON)*8) + 3;
[; ;pic18f2331.h: 7427: extern volatile __bit MCLR @ (((unsigned) &PORTE)*8) + 3;
[; ;pic18f2331.h: 7429: extern volatile __bit NEGATIVE @ (((unsigned) &STATUS)*8) + 4;
[; ;pic18f2331.h: 7431: extern volatile __bit NOT_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7433: extern volatile __bit NOT_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 7435: extern volatile __bit NOT_BOR @ (((unsigned) &RCON)*8) + 0;
[; ;pic18f2331.h: 7437: extern volatile __bit NOT_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 7439: extern volatile __bit NOT_DOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 7441: extern volatile __bit NOT_FLTA @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 7443: extern volatile __bit NOT_FLTB @ (((unsigned) &PORTC)*8) + 2;
[; ;pic18f2331.h: 7445: extern volatile __bit NOT_IPEN @ (((unsigned) &RCON)*8) + 7;
[; ;pic18f2331.h: 7447: extern volatile __bit NOT_MCLR @ (((unsigned) &PORTE)*8) + 3;
[; ;pic18f2331.h: 7449: extern volatile __bit NOT_PD @ (((unsigned) &RCON)*8) + 2;
[; ;pic18f2331.h: 7451: extern volatile __bit NOT_POR @ (((unsigned) &RCON)*8) + 1;
[; ;pic18f2331.h: 7453: extern volatile __bit NOT_RBPU @ (((unsigned) &INTCON2)*8) + 7;
[; ;pic18f2331.h: 7455: extern volatile __bit NOT_RESEN @ (((unsigned) &T5CON)*8) + 6;
[; ;pic18f2331.h: 7457: extern volatile __bit NOT_RI @ (((unsigned) &RCON)*8) + 4;
[; ;pic18f2331.h: 7459: extern volatile __bit NOT_SS @ (((unsigned) &PORTC)*8) + 6;
[; ;pic18f2331.h: 7461: extern volatile __bit NOT_T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic18f2331.h: 7463: extern volatile __bit NOT_T5SYNC @ (((unsigned) &T5CON)*8) + 2;
[; ;pic18f2331.h: 7465: extern volatile __bit NOT_TO @ (((unsigned) &RCON)*8) + 3;
[; ;pic18f2331.h: 7467: extern volatile __bit NOT_VELM @ (((unsigned) &QEICON)*8) + 7;
[; ;pic18f2331.h: 7469: extern volatile __bit NOT_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7471: extern volatile __bit NOT_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7473: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic18f2331.h: 7475: extern volatile __bit OSC1 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic18f2331.h: 7477: extern volatile __bit OSC2 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic18f2331.h: 7479: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic18f2331.h: 7481: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic18f2331.h: 7483: extern volatile __bit OSFIP @ (((unsigned) &IPR2)*8) + 7;
[; ;pic18f2331.h: 7485: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic18f2331.h: 7487: extern volatile __bit OSYNC @ (((unsigned) &PWMCON1)*8) + 0;
[; ;pic18f2331.h: 7489: extern volatile __bit OV @ (((unsigned) &STATUS)*8) + 3;
[; ;pic18f2331.h: 7491: extern volatile __bit OVERFLOW @ (((unsigned) &STATUS)*8) + 3;
[; ;pic18f2331.h: 7493: extern volatile __bit PA1 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic18f2331.h: 7495: extern volatile __bit PA2 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 7497: extern volatile __bit PC3E @ (((unsigned) &PORTE)*8) + 3;
[; ;pic18f2331.h: 7499: extern volatile __bit PD @ (((unsigned) &RCON)*8) + 2;
[; ;pic18f2331.h: 7501: extern volatile __bit PDEC0 @ (((unsigned) &QEICON)*8) + 0;
[; ;pic18f2331.h: 7503: extern volatile __bit PDEC1 @ (((unsigned) &QEICON)*8) + 1;
[; ;pic18f2331.h: 7505: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic18f2331.h: 7507: extern volatile __bit PEIE_GIEL @ (((unsigned) &INTCON)*8) + 6;
[; ;pic18f2331.h: 7509: extern volatile __bit PMOD0 @ (((unsigned) &PWMCON0)*8) + 0;
[; ;pic18f2331.h: 7511: extern volatile __bit PMOD1 @ (((unsigned) &PWMCON0)*8) + 1;
[; ;pic18f2331.h: 7513: extern volatile __bit PMOD2 @ (((unsigned) &PWMCON0)*8) + 2;
[; ;pic18f2331.h: 7515: extern volatile __bit PMOD3 @ (((unsigned) &PWMCON0)*8) + 3;
[; ;pic18f2331.h: 7517: extern volatile __bit POR @ (((unsigned) &RCON)*8) + 1;
[; ;pic18f2331.h: 7519: extern volatile __bit POUT0 @ (((unsigned) &OVDCONS)*8) + 0;
[; ;pic18f2331.h: 7521: extern volatile __bit POUT1 @ (((unsigned) &OVDCONS)*8) + 1;
[; ;pic18f2331.h: 7523: extern volatile __bit POUT2 @ (((unsigned) &OVDCONS)*8) + 2;
[; ;pic18f2331.h: 7525: extern volatile __bit POUT3 @ (((unsigned) &OVDCONS)*8) + 3;
[; ;pic18f2331.h: 7527: extern volatile __bit POUT4 @ (((unsigned) &OVDCONS)*8) + 4;
[; ;pic18f2331.h: 7529: extern volatile __bit POUT5 @ (((unsigned) &OVDCONS)*8) + 5;
[; ;pic18f2331.h: 7531: extern volatile __bit POUT6 @ (((unsigned) &OVDCONS)*8) + 6;
[; ;pic18f2331.h: 7533: extern volatile __bit POUT7 @ (((unsigned) &OVDCONS)*8) + 7;
[; ;pic18f2331.h: 7535: extern volatile __bit POVD0 @ (((unsigned) &OVDCOND)*8) + 0;
[; ;pic18f2331.h: 7537: extern volatile __bit POVD1 @ (((unsigned) &OVDCOND)*8) + 1;
[; ;pic18f2331.h: 7539: extern volatile __bit POVD2 @ (((unsigned) &OVDCOND)*8) + 2;
[; ;pic18f2331.h: 7541: extern volatile __bit POVD3 @ (((unsigned) &OVDCOND)*8) + 3;
[; ;pic18f2331.h: 7543: extern volatile __bit POVD4 @ (((unsigned) &OVDCOND)*8) + 4;
[; ;pic18f2331.h: 7545: extern volatile __bit POVD5 @ (((unsigned) &OVDCOND)*8) + 5;
[; ;pic18f2331.h: 7547: extern volatile __bit POVD6 @ (((unsigned) &OVDCOND)*8) + 6;
[; ;pic18f2331.h: 7549: extern volatile __bit POVD7 @ (((unsigned) &OVDCOND)*8) + 7;
[; ;pic18f2331.h: 7551: extern volatile __bit PSA @ (((unsigned) &T0CON)*8) + 3;
[; ;pic18f2331.h: 7553: extern volatile __bit PTCKPS0 @ (((unsigned) &PTCON0)*8) + 2;
[; ;pic18f2331.h: 7555: extern volatile __bit PTCKPS1 @ (((unsigned) &PTCON0)*8) + 3;
[; ;pic18f2331.h: 7557: extern volatile __bit PTDIR @ (((unsigned) &PTCON1)*8) + 6;
[; ;pic18f2331.h: 7559: extern volatile __bit PTEN @ (((unsigned) &PTCON1)*8) + 7;
[; ;pic18f2331.h: 7561: extern volatile __bit PTIE @ (((unsigned) &PIE3)*8) + 4;
[; ;pic18f2331.h: 7563: extern volatile __bit PTIF @ (((unsigned) &PIR3)*8) + 4;
[; ;pic18f2331.h: 7565: extern volatile __bit PTIP @ (((unsigned) &IPR3)*8) + 4;
[; ;pic18f2331.h: 7567: extern volatile __bit PTMOD0 @ (((unsigned) &PTCON0)*8) + 0;
[; ;pic18f2331.h: 7569: extern volatile __bit PTMOD1 @ (((unsigned) &PTCON0)*8) + 1;
[; ;pic18f2331.h: 7571: extern volatile __bit PTOPS0 @ (((unsigned) &PTCON0)*8) + 4;
[; ;pic18f2331.h: 7573: extern volatile __bit PTOPS1 @ (((unsigned) &PTCON0)*8) + 5;
[; ;pic18f2331.h: 7575: extern volatile __bit PTOPS2 @ (((unsigned) &PTCON0)*8) + 6;
[; ;pic18f2331.h: 7577: extern volatile __bit PTOPS3 @ (((unsigned) &PTCON0)*8) + 7;
[; ;pic18f2331.h: 7579: extern volatile __bit PWMEN0 @ (((unsigned) &PWMCON0)*8) + 4;
[; ;pic18f2331.h: 7581: extern volatile __bit PWMEN1 @ (((unsigned) &PWMCON0)*8) + 5;
[; ;pic18f2331.h: 7583: extern volatile __bit PWMEN2 @ (((unsigned) &PWMCON0)*8) + 6;
[; ;pic18f2331.h: 7585: extern volatile __bit QEIM0 @ (((unsigned) &QEICON)*8) + 2;
[; ;pic18f2331.h: 7587: extern volatile __bit QEIM1 @ (((unsigned) &QEICON)*8) + 3;
[; ;pic18f2331.h: 7589: extern volatile __bit QEIM2 @ (((unsigned) &QEICON)*8) + 4;
[; ;pic18f2331.h: 7591: extern volatile __bit __attribute__((__deprecated__)) RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic18f2331.h: 7593: extern volatile __bit __attribute__((__deprecated__)) RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic18f2331.h: 7595: extern volatile __bit __attribute__((__deprecated__)) RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic18f2331.h: 7597: extern volatile __bit __attribute__((__deprecated__)) RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic18f2331.h: 7599: extern volatile __bit __attribute__((__deprecated__)) RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic18f2331.h: 7601: extern volatile __bit __attribute__((__deprecated__)) RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic18f2331.h: 7603: extern volatile __bit __attribute__((__deprecated__)) RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic18f2331.h: 7605: extern volatile __bit __attribute__((__deprecated__)) RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic18f2331.h: 7607: extern volatile __bit __attribute__((__deprecated__)) RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic18f2331.h: 7609: extern volatile __bit __attribute__((__deprecated__)) RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic18f2331.h: 7611: extern volatile __bit __attribute__((__deprecated__)) RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic18f2331.h: 7613: extern volatile __bit __attribute__((__deprecated__)) RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic18f2331.h: 7615: extern volatile __bit __attribute__((__deprecated__)) RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic18f2331.h: 7617: extern volatile __bit __attribute__((__deprecated__)) RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic18f2331.h: 7619: extern volatile __bit __attribute__((__deprecated__)) RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic18f2331.h: 7621: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic18f2331.h: 7623: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic18f2331.h: 7625: extern volatile __bit RBIP @ (((unsigned) &INTCON2)*8) + 0;
[; ;pic18f2331.h: 7627: extern volatile __bit RBPU @ (((unsigned) &INTCON2)*8) + 7;
[; ;pic18f2331.h: 7629: extern volatile __bit __attribute__((__deprecated__)) RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic18f2331.h: 7631: extern volatile __bit __attribute__((__deprecated__)) RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 7633: extern volatile __bit RC1IE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic18f2331.h: 7635: extern volatile __bit RC1IF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic18f2331.h: 7637: extern volatile __bit RC1IP @ (((unsigned) &IPR1)*8) + 5;
[; ;pic18f2331.h: 7639: extern volatile __bit __attribute__((__deprecated__)) RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic18f2331.h: 7641: extern volatile __bit __attribute__((__deprecated__)) RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic18f2331.h: 7643: extern volatile __bit __attribute__((__deprecated__)) RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic18f2331.h: 7645: extern volatile __bit __attribute__((__deprecated__)) RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic18f2331.h: 7647: extern volatile __bit __attribute__((__deprecated__)) RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic18f2331.h: 7649: extern volatile __bit __attribute__((__deprecated__)) RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic18f2331.h: 7651: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic18f2331.h: 7653: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic18f2331.h: 7655: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic18f2331.h: 7657: extern volatile __bit RCIDL @ (((unsigned) &BAUDCON)*8) + 6;
[; ;pic18f2331.h: 7659: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic18f2331.h: 7661: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic18f2331.h: 7663: extern volatile __bit RCIP @ (((unsigned) &IPR1)*8) + 5;
[; ;pic18f2331.h: 7665: extern volatile __bit RCMT @ (((unsigned) &BAUDCON)*8) + 6;
[; ;pic18f2331.h: 7667: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic18f2331.h: 7669: extern volatile __bit RD16 @ (((unsigned) &T1CON)*8) + 7;
[; ;pic18f2331.h: 7671: extern volatile __bit RD165 @ (((unsigned) &T5CON)*8) + 1;
[; ;pic18f2331.h: 7673: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic18f2331.h: 7675: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7677: extern volatile __bit RESEN @ (((unsigned) &T5CON)*8) + 6;
[; ;pic18f2331.h: 7679: extern volatile __bit RI @ (((unsigned) &RCON)*8) + 4;
[; ;pic18f2331.h: 7681: extern volatile __bit RJPU @ (((unsigned) &PORTA)*8) + 7;
[; ;pic18f2331.h: 7683: extern volatile __bit RW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7685: extern volatile __bit RX @ (((unsigned) &PORTC)*8) + 7;
[; ;pic18f2331.h: 7687: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic18f2331.h: 7689: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic18f2331.h: 7691: extern volatile __bit RXB0IE @ (((unsigned) &PIE3)*8) + 0;
[; ;pic18f2331.h: 7693: extern volatile __bit RXB1IE @ (((unsigned) &PIE3)*8) + 1;
[; ;pic18f2331.h: 7695: extern volatile __bit RXBNIE @ (((unsigned) &PIE3)*8) + 1;
[; ;pic18f2331.h: 7697: extern volatile __bit RXBNIF @ (((unsigned) &PIR3)*8) + 1;
[; ;pic18f2331.h: 7699: extern volatile __bit RXBNIP @ (((unsigned) &IPR3)*8) + 1;
[; ;pic18f2331.h: 7701: extern volatile __bit RXCKP @ (((unsigned) &BAUDCON)*8) + 5;
[; ;pic18f2331.h: 7703: extern volatile __bit RXDTP @ (((unsigned) &BAUDCON)*8) + 5;
[; ;pic18f2331.h: 7705: extern volatile __bit R_NOT_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7707: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7709: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 7711: extern volatile __bit SASEL0 @ (((unsigned) &ADCHS)*8) + 0;
[; ;pic18f2331.h: 7713: extern volatile __bit SASEL1 @ (((unsigned) &ADCHS)*8) + 1;
[; ;pic18f2331.h: 7715: extern volatile __bit SBSEL0 @ (((unsigned) &ADCHS)*8) + 4;
[; ;pic18f2331.h: 7717: extern volatile __bit SBSEL1 @ (((unsigned) &ADCHS)*8) + 5;
[; ;pic18f2331.h: 7719: extern volatile __bit SCK @ (((unsigned) &PORTC)*8) + 5;
[; ;pic18f2331.h: 7721: extern volatile __bit SCKP @ (((unsigned) &BAUDCON)*8) + 4;
[; ;pic18f2331.h: 7723: extern volatile __bit SCL @ (((unsigned) &PORTC)*8) + 5;
[; ;pic18f2331.h: 7725: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic18f2331.h: 7727: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic18f2331.h: 7729: extern volatile __bit SCSEL0 @ (((unsigned) &ADCHS)*8) + 2;
[; ;pic18f2331.h: 7731: extern volatile __bit SCSEL1 @ (((unsigned) &ADCHS)*8) + 3;
[; ;pic18f2331.h: 7733: extern volatile __bit SDA @ (((unsigned) &PORTC)*8) + 4;
[; ;pic18f2331.h: 7735: extern volatile __bit SDI @ (((unsigned) &PORTC)*8) + 4;
[; ;pic18f2331.h: 7737: extern volatile __bit SDO @ (((unsigned) &PORTC)*8) + 7;
[; ;pic18f2331.h: 7739: extern volatile __bit SDSEL0 @ (((unsigned) &ADCHS)*8) + 6;
[; ;pic18f2331.h: 7741: extern volatile __bit SDSEL1 @ (((unsigned) &ADCHS)*8) + 7;
[; ;pic18f2331.h: 7743: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic18f2331.h: 7745: extern volatile __bit SENDB1 @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic18f2331.h: 7747: extern volatile __bit SEVOPS0 @ (((unsigned) &PWMCON1)*8) + 4;
[; ;pic18f2331.h: 7749: extern volatile __bit SEVOPS1 @ (((unsigned) &PWMCON1)*8) + 5;
[; ;pic18f2331.h: 7751: extern volatile __bit SEVOPS2 @ (((unsigned) &PWMCON1)*8) + 6;
[; ;pic18f2331.h: 7753: extern volatile __bit SEVOPS3 @ (((unsigned) &PWMCON1)*8) + 7;
[; ;pic18f2331.h: 7755: extern volatile __bit SEVTDIR @ (((unsigned) &PWMCON1)*8) + 3;
[; ;pic18f2331.h: 7757: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic18f2331.h: 7759: extern volatile __bit SOSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic18f2331.h: 7761: extern volatile __bit SOSCEN5 @ (((unsigned) &T5CON)*8) + 3;
[; ;pic18f2331.h: 7763: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic18f2331.h: 7765: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic18f2331.h: 7767: extern volatile __bit SRENA @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic18f2331.h: 7769: extern volatile __bit SS @ (((unsigned) &PORTC)*8) + 6;
[; ;pic18f2331.h: 7771: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic18f2331.h: 7773: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic18f2331.h: 7775: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic18f2331.h: 7777: extern volatile __bit SSPIP @ (((unsigned) &IPR1)*8) + 3;
[; ;pic18f2331.h: 7779: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic18f2331.h: 7781: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic18f2331.h: 7783: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic18f2331.h: 7785: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic18f2331.h: 7787: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic18f2331.h: 7789: extern volatile __bit SSRC0 @ (((unsigned) &ADCON3)*8) + 0;
[; ;pic18f2331.h: 7791: extern volatile __bit SSRC1 @ (((unsigned) &ADCON3)*8) + 1;
[; ;pic18f2331.h: 7793: extern volatile __bit SSRC2 @ (((unsigned) &ADCON3)*8) + 2;
[; ;pic18f2331.h: 7795: extern volatile __bit SSRC3 @ (((unsigned) &ADCON3)*8) + 3;
[; ;pic18f2331.h: 7797: extern volatile __bit SSRC4 @ (((unsigned) &ADCON3)*8) + 4;
[; ;pic18f2331.h: 7799: extern volatile __bit START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic18f2331.h: 7801: extern volatile __bit STKFUL @ (((unsigned) &STKPTR)*8) + 7;
[; ;pic18f2331.h: 7803: extern volatile __bit STKOVF @ (((unsigned) &STKPTR)*8) + 7;
[; ;pic18f2331.h: 7805: extern volatile __bit STKPTR0 @ (((unsigned) &STKPTR)*8) + 0;
[; ;pic18f2331.h: 7807: extern volatile __bit STKPTR1 @ (((unsigned) &STKPTR)*8) + 1;
[; ;pic18f2331.h: 7809: extern volatile __bit STKPTR2 @ (((unsigned) &STKPTR)*8) + 2;
[; ;pic18f2331.h: 7811: extern volatile __bit STKPTR3 @ (((unsigned) &STKPTR)*8) + 3;
[; ;pic18f2331.h: 7813: extern volatile __bit STKPTR4 @ (((unsigned) &STKPTR)*8) + 4;
[; ;pic18f2331.h: 7815: extern volatile __bit STKUNF @ (((unsigned) &STKPTR)*8) + 6;
[; ;pic18f2331.h: 7817: extern volatile __bit STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic18f2331.h: 7819: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic18f2331.h: 7821: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic18f2331.h: 7823: extern volatile __bit SYNC1 @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic18f2331.h: 7825: extern volatile __bit T016BIT @ (((unsigned) &T0CON)*8) + 6;
[; ;pic18f2331.h: 7827: extern volatile __bit T0CKI @ (((unsigned) &PORTC)*8) + 3;
[; ;pic18f2331.h: 7829: extern volatile __bit T0CS @ (((unsigned) &T0CON)*8) + 5;
[; ;pic18f2331.h: 7831: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic18f2331.h: 7833: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic18f2331.h: 7835: extern volatile __bit T0IP @ (((unsigned) &INTCON2)*8) + 2;
[; ;pic18f2331.h: 7837: extern volatile __bit T0PS0 @ (((unsigned) &T0CON)*8) + 0;
[; ;pic18f2331.h: 7839: extern volatile __bit T0PS1 @ (((unsigned) &T0CON)*8) + 1;
[; ;pic18f2331.h: 7841: extern volatile __bit T0PS2 @ (((unsigned) &T0CON)*8) + 2;
[; ;pic18f2331.h: 7843: extern volatile __bit T0PS3 @ (((unsigned) &T0CON)*8) + 3;
[; ;pic18f2331.h: 7845: extern volatile __bit T0SE @ (((unsigned) &T0CON)*8) + 4;
[; ;pic18f2331.h: 7847: extern volatile __bit T13CKI @ (((unsigned) &PORTC)*8) + 0;
[; ;pic18f2331.h: 7849: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic18f2331.h: 7851: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic18f2331.h: 7853: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic18f2331.h: 7855: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic18f2331.h: 7857: extern volatile __bit T1OSI @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 7859: extern volatile __bit T1OSO @ (((unsigned) &PORTC)*8) + 0;
[; ;pic18f2331.h: 7861: extern volatile __bit T1RD16 @ (((unsigned) &T1CON)*8) + 7;
[; ;pic18f2331.h: 7863: extern volatile __bit T1RUN @ (((unsigned) &T1CON)*8) + 6;
[; ;pic18f2331.h: 7865: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic18f2331.h: 7867: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic18f2331.h: 7869: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic18f2331.h: 7871: extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic18f2331.h: 7873: extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic18f2331.h: 7875: extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic18f2331.h: 7877: extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic18f2331.h: 7879: extern volatile __bit T5CKI @ (((unsigned) &PORTC)*8) + 3;
[; ;pic18f2331.h: 7881: extern volatile __bit T5MOD @ (((unsigned) &T5CON)*8) + 5;
[; ;pic18f2331.h: 7883: extern volatile __bit T5PS0 @ (((unsigned) &T5CON)*8) + 3;
[; ;pic18f2331.h: 7885: extern volatile __bit T5PS1 @ (((unsigned) &T5CON)*8) + 4;
[; ;pic18f2331.h: 7887: extern volatile __bit T5SEN @ (((unsigned) &T5CON)*8) + 7;
[; ;pic18f2331.h: 7889: extern volatile __bit T5SYNC @ (((unsigned) &T5CON)*8) + 2;
[; ;pic18f2331.h: 7891: extern volatile __bit TBIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic18f2331.h: 7893: extern volatile __bit TBIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic18f2331.h: 7895: extern volatile __bit TBIP @ (((unsigned) &IPR1)*8) + 4;
[; ;pic18f2331.h: 7897: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic18f2331.h: 7899: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic18f2331.h: 7901: extern volatile __bit TMR0IP @ (((unsigned) &INTCON2)*8) + 2;
[; ;pic18f2331.h: 7903: extern volatile __bit TMR0ON @ (((unsigned) &T0CON)*8) + 7;
[; ;pic18f2331.h: 7905: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic18f2331.h: 7907: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic18f2331.h: 7909: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic18f2331.h: 7911: extern volatile __bit TMR1IP @ (((unsigned) &IPR1)*8) + 0;
[; ;pic18f2331.h: 7913: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic18f2331.h: 7915: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic18f2331.h: 7917: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic18f2331.h: 7919: extern volatile __bit TMR2IP @ (((unsigned) &IPR1)*8) + 1;
[; ;pic18f2331.h: 7921: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic18f2331.h: 7923: extern volatile __bit TMR5CS @ (((unsigned) &T5CON)*8) + 1;
[; ;pic18f2331.h: 7925: extern volatile __bit TMR5IE @ (((unsigned) &PIE3)*8) + 0;
[; ;pic18f2331.h: 7927: extern volatile __bit TMR5IF @ (((unsigned) &PIR3)*8) + 0;
[; ;pic18f2331.h: 7929: extern volatile __bit TMR5IP @ (((unsigned) &IPR3)*8) + 0;
[; ;pic18f2331.h: 7931: extern volatile __bit TMR5ON @ (((unsigned) &T5CON)*8) + 0;
[; ;pic18f2331.h: 7933: extern volatile __bit TO @ (((unsigned) &RCON)*8) + 3;
[; ;pic18f2331.h: 7935: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic18f2331.h: 7937: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic18f2331.h: 7939: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic18f2331.h: 7941: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic18f2331.h: 7943: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic18f2331.h: 7945: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic18f2331.h: 7947: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic18f2331.h: 7949: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic18f2331.h: 7951: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic18f2331.h: 7953: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic18f2331.h: 7955: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic18f2331.h: 7957: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic18f2331.h: 7959: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic18f2331.h: 7961: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic18f2331.h: 7963: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic18f2331.h: 7965: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic18f2331.h: 7967: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic18f2331.h: 7969: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic18f2331.h: 7971: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic18f2331.h: 7973: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic18f2331.h: 7975: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic18f2331.h: 7977: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic18f2331.h: 7979: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic18f2331.h: 7981: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic18f2331.h: 7983: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic18f2331.h: 7985: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic18f2331.h: 7987: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic18f2331.h: 7989: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic18f2331.h: 7991: extern volatile __bit TRMT1 @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic18f2331.h: 7993: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic18f2331.h: 7995: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic18f2331.h: 7997: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic18f2331.h: 7999: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic18f2331.h: 8001: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic18f2331.h: 8003: extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;
[; ;pic18f2331.h: 8005: extern volatile __bit TX @ (((unsigned) &PORTC)*8) + 6;
[; ;pic18f2331.h: 8007: extern volatile __bit TX1IE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic18f2331.h: 8009: extern volatile __bit TX1IF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic18f2331.h: 8011: extern volatile __bit TX1IP @ (((unsigned) &IPR1)*8) + 4;
[; ;pic18f2331.h: 8013: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic18f2331.h: 8015: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic18f2331.h: 8017: extern volatile __bit TX91 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic18f2331.h: 8019: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic18f2331.h: 8021: extern volatile __bit TX9D1 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic18f2331.h: 8023: extern volatile __bit TXB0IE @ (((unsigned) &PIE3)*8) + 2;
[; ;pic18f2331.h: 8025: extern volatile __bit TXB1IE @ (((unsigned) &PIE3)*8) + 3;
[; ;pic18f2331.h: 8027: extern volatile __bit TXB2IE @ (((unsigned) &PIE3)*8) + 4;
[; ;pic18f2331.h: 8029: extern volatile __bit TXBNIE @ (((unsigned) &PIE3)*8) + 4;
[; ;pic18f2331.h: 8031: extern volatile __bit TXBNIF @ (((unsigned) &PIR3)*8) + 4;
[; ;pic18f2331.h: 8033: extern volatile __bit TXBNIP @ (((unsigned) &IPR3)*8) + 4;
[; ;pic18f2331.h: 8035: extern volatile __bit TXCKP @ (((unsigned) &BAUDCON)*8) + 4;
[; ;pic18f2331.h: 8037: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic18f2331.h: 8039: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic18f2331.h: 8041: extern volatile __bit TXEN1 @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic18f2331.h: 8043: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic18f2331.h: 8045: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic18f2331.h: 8047: extern volatile __bit TXIP @ (((unsigned) &IPR1)*8) + 4;
[; ;pic18f2331.h: 8049: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic18f2331.h: 8051: extern volatile __bit UDIS @ (((unsigned) &PWMCON1)*8) + 1;
[; ;pic18f2331.h: 8053: extern volatile __bit ULPWUIN @ (((unsigned) &PORTA)*8) + 0;
[; ;pic18f2331.h: 8055: extern volatile __bit UP @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 8057: extern volatile __bit UPDOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 8059: extern volatile __bit UP_DOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 8061: extern volatile __bit UP_NOT_DOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 8063: extern volatile __bit UP_nDOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 8065: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic18f2331.h: 8067: extern volatile __bit VCFG01 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic18f2331.h: 8069: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic18f2331.h: 8071: extern volatile __bit VELM @ (((unsigned) &QEICON)*8) + 7;
[; ;pic18f2331.h: 8073: extern volatile __bit VREFM @ (((unsigned) &PORTA)*8) + 2;
[; ;pic18f2331.h: 8075: extern volatile __bit VREFP @ (((unsigned) &PORTA)*8) + 3;
[; ;pic18f2331.h: 8077: extern volatile __bit W4E @ (((unsigned) &BAUDCON)*8) + 1;
[; ;pic18f2331.h: 8079: extern volatile __bit WAIT0 @ (((unsigned) &PR2)*8) + 4;
[; ;pic18f2331.h: 8081: extern volatile __bit WAIT1 @ (((unsigned) &PR2)*8) + 5;
[; ;pic18f2331.h: 8083: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic18f2331.h: 8085: extern volatile __bit WDTW @ (((unsigned) &WDTCON)*8) + 7;
[; ;pic18f2331.h: 8087: extern volatile __bit WM0 @ (((unsigned) &PR2)*8) + 0;
[; ;pic18f2331.h: 8089: extern volatile __bit WM1 @ (((unsigned) &PR2)*8) + 1;
[; ;pic18f2331.h: 8091: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic18f2331.h: 8093: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic18f2331.h: 8095: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic18f2331.h: 8097: extern volatile __bit WUE @ (((unsigned) &BAUDCON)*8) + 1;
[; ;pic18f2331.h: 8099: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic18f2331.h: 8101: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 8103: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic18f2331.h: 8105: extern volatile __bit nBOR @ (((unsigned) &RCON)*8) + 0;
[; ;pic18f2331.h: 8107: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic18f2331.h: 8109: extern volatile __bit nDOWN @ (((unsigned) &QEICON)*8) + 5;
[; ;pic18f2331.h: 8111: extern volatile __bit nFLTA @ (((unsigned) &PORTC)*8) + 1;
[; ;pic18f2331.h: 8113: extern volatile __bit nFLTB @ (((unsigned) &PORTC)*8) + 2;
[; ;pic18f2331.h: 8115: extern volatile __bit nIPEN @ (((unsigned) &RCON)*8) + 7;
[; ;pic18f2331.h: 8117: extern volatile __bit nMCLR @ (((unsigned) &PORTE)*8) + 3;
[; ;pic18f2331.h: 8119: extern volatile __bit nPD @ (((unsigned) &RCON)*8) + 2;
[; ;pic18f2331.h: 8121: extern volatile __bit nPOR @ (((unsigned) &RCON)*8) + 1;
[; ;pic18f2331.h: 8123: extern volatile __bit nRBPU @ (((unsigned) &INTCON2)*8) + 7;
[; ;pic18f2331.h: 8125: extern volatile __bit nRESEN @ (((unsigned) &T5CON)*8) + 6;
[; ;pic18f2331.h: 8127: extern volatile __bit nRI @ (((unsigned) &RCON)*8) + 4;
[; ;pic18f2331.h: 8129: extern volatile __bit nSS @ (((unsigned) &PORTC)*8) + 6;
[; ;pic18f2331.h: 8131: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic18f2331.h: 8133: extern volatile __bit nT5SYNC @ (((unsigned) &T5CON)*8) + 2;
[; ;pic18f2331.h: 8135: extern volatile __bit nTO @ (((unsigned) &RCON)*8) + 3;
[; ;pic18f2331.h: 8137: extern volatile __bit nVELM @ (((unsigned) &QEICON)*8) + 7;
[; ;pic18f2331.h: 8139: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18f2331.h: 8141: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic18.h: 18: __attribute__((__unsupported__("The " "flash_write" " routine is no longer supported. Please use the MPLAB X MCC."))) void flash_write(const unsigned char *, unsigned int, __far unsigned char *);
[; ;pic18.h: 19: __attribute__((__unsupported__("The " "EraseFlash" " routine is no longer supported. Please use the MPLAB X MCC."))) void EraseFlash(unsigned long startaddr, unsigned long endaddr);
[; ;pic18.h: 43: extern void __nop(void);
[; ;pic18.h: 135: __attribute__((__unsupported__("The " "Read_b_eep" " routine is no longer supported. Please use the MPLAB X MCC."))) unsigned char Read_b_eep(unsigned int badd);
[; ;pic18.h: 136: __attribute__((__unsupported__("The " "Busy_eep" " routine is no longer supported. Please use the MPLAB X MCC."))) void Busy_eep(void);
[; ;pic18.h: 137: __attribute__((__unsupported__("The " "Write_b_eep" " routine is no longer supported. Please use the MPLAB X MCC."))) void Write_b_eep(unsigned int badd, unsigned char bdat);
[; ;pic18.h: 155: unsigned char __t1rd16on(void);
[; ;pic18.h: 156: unsigned char __t3rd16on(void);
[; ;pic18.h: 164: extern __nonreentrant void _delay(unsigned long);
[; ;pic18.h: 166: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic18.h: 168: extern __nonreentrant void _delay3(unsigned char);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;GPIO.h: 7: typedef enum
[; ;GPIO.h: 8: {
[; ;GPIO.h: 9: CLK_8MHZ,
[; ;GPIO.h: 10: CLK_4MHZ,
[; ;GPIO.h: 11: CLK_2MHZ,
[; ;GPIO.h: 12: CLK_1MHZ,
[; ;GPIO.h: 13: CLK_500KHZ,
[; ;GPIO.h: 14: CLK_250KHZ,
[; ;GPIO.h: 15: CLK_125KHZ,
[; ;GPIO.h: 16: CLK_31KHZ
[; ;GPIO.h: 17: } GPIO_SourceClk;
[; ;GPIO.h: 21: typedef enum
[; ;GPIO.h: 22: {
[; ;GPIO.h: 23: GPIO_INPUT,
[; ;GPIO.h: 24: GPIO_OUTPUT
[; ;GPIO.h: 25: } GPIO_state;
[; ;GPIO.h: 29: typedef enum
[; ;GPIO.h: 30: {
[; ;GPIO.h: 31: GPIO_A,
[; ;GPIO.h: 32: GPIO_B,
[; ;GPIO.h: 33: GPIO_C
[; ;GPIO.h: 34: } GPIO_portNameType;
[; ;GPIO.h: 36: typedef enum
[; ;GPIO.h: 37: {
[; ;GPIO.h: 38: GPIO_DIGITAL,
[; ;GPIO.h: 39: GPIO_ANALOG
[; ;GPIO.h: 40: } GPIO_analogType;
[; ;GPIO.h: 42: void GPIO_sourceClock(GPIO_SourceClk clk);
[; ;GPIO.h: 44: void GPIO_dataDirectionPIN
[; ;GPIO.h: 45: (GPIO_portNameType portName, uint8_t pin, GPIO_state state);
[; ;GPIO.h: 47: void GPIO_dataDirectionPORT
[; ;GPIO.h: 48: (GPIO_portNameType portName, GPIO_state state);
[; ;GPIO.h: 50: void GPIO_analogSelector
[; ;GPIO.h: 51: (GPIO_analogType type, uint8_t pin);
[; ;GPIO.h: 53: void GPIO_setPIN
[; ;GPIO.h: 54: (GPIO_portNameType portName, uint8_t pin);
[; ;GPIO.h: 56: void GPIO_clearPIN
[; ;GPIO.h: 57: (GPIO_portNameType portName, uint8_t pin);
[; ;GPIO.h: 59: void delay(uint32_t delay);
[; ;SPI.h: 7: typedef enum
[; ;SPI.h: 8: {
[; ;SPI.h: 9: SPI_LOW_POLARITY,
[; ;SPI.h: 10: SPI_HIGH_POLARITY
[; ;SPI.h: 11: } SPI_PolarityType;
[; ;SPI.h: 14: typedef enum
[; ;SPI.h: 15: {
[; ;SPI.h: 16: SPI_LOW_PHASE,
[; ;SPI.h: 17: SPI_HIGH_PHASE
[; ;SPI.h: 18: } SPI_PhaseType;
[; ;SPI.h: 20: typedef enum
[; ;SPI.h: 21: {
[; ;SPI.h: 22: SPI_SERIAL_CLK4,
[; ;SPI.h: 23: SPI_SERIAL_CLK16,
[; ;SPI.h: 24: SPI_SERIAL_CLK64
[; ;SPI.h: 25: } SPI_SerialClk;
[; ;SPI.h: 29: typedef struct
[; ;SPI.h: 30: {
[; ;SPI.h: 31: SPI_PolarityType SPI_Polarity;
[; ;SPI.h: 32: SPI_PhaseType SPI_Phase;
[; ;SPI.h: 33: SPI_SerialClk SPI_Clk;
[; ;SPI.h: 34: } SPI_ConfigType;
[; ;SPI.h: 36: void SPI_init(const SPI_ConfigType* SPI_Config);
[; ;SPI.h: 38: void SPI_write(uint8_t data);
[; ;SPI.h: 40: uint8_t SPI_read(void);
[; ;UART.h: 9: typedef enum
[; ;UART.h: 10: {
[; ;UART.h: 11: BD_1200 = 1200,
[; ;UART.h: 12: BD_2400 = 2400,
[; ;UART.h: 13: BD_9600 = 9600
[; ;UART.h: 14: } UART_BaudRateType;
[; ;UART.h: 16: void UART_init(UART_BaudRateType baudRate);
[; ;UART.h: 18: void UART_putChar(uint8_t character);
[; ;UART.h: 20: void UART_putString(int8_t* string);
[; ;UART.h: 22: uint32_t expBASE10(uint8_t limit);
[; ;UART.h: 24: uint32_t Convert_numberASCIItoDATA(uint8_t *string);
[; ;UART.h: 26: uint8_t Convert_wordASCIItoDATA(uint8_t word);
[; ;LCDNokia5110.h: 17: typedef struct
[; ;LCDNokia5110.h: 18: {
[; ;LCDNokia5110.h: 19: uint8_t numberDigits;
[; ;LCDNokia5110.h: 20: uint8_t realDigit[7];
[; ;LCDNokia5110.h: 21: }formatASCII;
[; ;LCDNokia5110.h: 24: void LCDNokia_init(void);
[; ;LCDNokia5110.h: 29: void LCDNokia_writeByte(uint8_t, uint8_t);
[; ;LCDNokia5110.h: 31: void LCDNokia_clear(void);
[; ;LCDNokia5110.h: 35: void LCDNokia_gotoXY(uint8_t x, uint8_t y);
[; ;LCDNokia5110.h: 37: void LCDNokia_bitmap(const uint8_t*);
[; ;LCDNokia5110.h: 39: void LCDNokia_sendChar(uint8_t);
[; ;LCDNokia5110.h: 41: void LCDNokia_sendString(const uint8_t*);
[; ;LCDNokia5110.h: 43: void LCD_delay(void);
[; ;LCDNokia5110.h: 46: void LCDNokia_printValue(uint32_t value);
[; ;LCDNokia5110.h: 48: void LCDNokia_printFloatValue(float value);
[; ;ATM90E36A.h: 6: typedef enum
[; ;ATM90E36A.h: 7: {
[; ;ATM90E36A.h: 8: ACTIVE_ENERGY_TYPE,
[; ;ATM90E36A.h: 9: REACTIVE_ENERGY_TYPE,
[; ;ATM90E36A.h: 10: APPARENT_ENERGY_TYPE,
[; ;ATM90E36A.h: 11: FUNDAMENTAL_ENERGY_TYPE,
[; ;ATM90E36A.h: 12: HARMONIC_ENERGY_TYPE,
[; ;ATM90E36A.h: 13: ACTIVE_POWER_TYPE,
[; ;ATM90E36A.h: 14: REACTIVE_POWER_TYPE,
[; ;ATM90E36A.h: 15: APPARENT_POWER_TYPE,
[; ;ATM90E36A.h: 16: POWER_FACTOR_TYPE,
[; ;ATM90E36A.h: 17: FUNDAMENTAL_POWER,
[; ;ATM90E36A.h: 18: HARMONIC_POWER,
[; ;ATM90E36A.h: 19: VOLTAGE_RMS,
[; ;ATM90E36A.h: 20: CURRENT_RMS,
[; ;ATM90E36A.h: 21: THDN_TYPE,
[; ;ATM90E36A.h: 22: FREQUENCY_TYPE,
[; ;ATM90E36A.h: 23: PHASE_ANGLE_TYPE,
[; ;ATM90E36A.h: 24: TEMPERATURE_TYPE
[; ;ATM90E36A.h: 25: } ATM_type_t;
[; ;ATM90E36A.h: 27: typedef enum
[; ;ATM90E36A.h: 28: {
[; ;ATM90E36A.h: 29: TOTAL_FORW_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 30: PHASE_A_FORW_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 31: PHASE_B_FORW_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 32: PHASE_C_FORW_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 33: TOTAL_REV_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 34: PHASE_A_REV_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 35: PHASE_B_REV_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 36: PHASE_C_REV_ACTIVE_ENERGY,
[; ;ATM90E36A.h: 37: TOTAL_FORW_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 38: PHASE_A_FORW_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 39: PHASE_B_FORW_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 40: PHASE_C_FORW_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 41: TOTAL_REVERSE_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 42: PHASE_A_REV_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 43: PHASE_B_REV_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 44: PHASE_C_REV_REACTIVE_ENERGY,
[; ;ATM90E36A.h: 45: TOTAL_ARIT_APPARENT_ENERGY,
[; ;ATM90E36A.h: 46: PHASE_A_APPARENT_ENERGY,
[; ;ATM90E36A.h: 47: PHASE_B_APPARENT_ENERGY,
[; ;ATM90E36A.h: 48: PHASE_C_APPARENT_ENERGY,
[; ;ATM90E36A.h: 49: TOTAL_VECT_APPARENT_ENERGY,
[; ;ATM90E36A.h: 50: TOTAL_FORW_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 51: PHASE_A_FORW_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 52: PHASE_B_FORW_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 53: PHASE_C_FORW_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 54: TOTAL_REV_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 55: PHASE_A_REV_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 56: PHASE_B_REV_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 57: PHASE_C_REV_ACTIVE_FUND_ENERGY,
[; ;ATM90E36A.h: 58: TOTAL_FORW_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 59: PHASE_A_FORW_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 60: PHASE_B_FORW_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 61: PHASE_C_FORW_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 62: TOTAL_REV_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 63: PHASE_A_REV_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 64: PHASE_B_REV_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 65: PHASE_C_REV_ACTIVE_HARM_ENERGY,
[; ;ATM90E36A.h: 66: TOTAL_ACTIVE_POWER,
[; ;ATM90E36A.h: 67: PHASE_A_ACTIVE_POWER,
[; ;ATM90E36A.h: 68: PHASE_B_ACTIVE_POWER,
[; ;ATM90E36A.h: 69: PHASE_C_ACTIVE_POWER,
[; ;ATM90E36A.h: 70: TOTAL_REACTIVE_POWER,
[; ;ATM90E36A.h: 71: PHASE_A_REACTIVE_POWER,
[; ;ATM90E36A.h: 72: PHASE_B_REACTIVE_POWER,
[; ;ATM90E36A.h: 73: PHASE_C_REACTIVE_POWER,
[; ;ATM90E36A.h: 74: TOTAL_APPARENT_POWER,
[; ;ATM90E36A.h: 75: PHASE_A_APPARENT_POWER,
[; ;ATM90E36A.h: 76: PHASE_B_APPARENT_POWER,
[; ;ATM90E36A.h: 77: PHASE_C_APPARENT_POWER,
[; ;ATM90E36A.h: 78: TOTAL_POWER_FACTOR,
[; ;ATM90E36A.h: 79: PHASE_A_POWER_FACTOR,
[; ;ATM90E36A.h: 80: PHASE_B_POWER_FACTOR,
[; ;ATM90E36A.h: 81: PHASE_C_POWER_FACTOR,
[; ;ATM90E36A.h: 82: TOTAL_ACTIVE_FUND_POWER,
[; ;ATM90E36A.h: 83: PHASE_A_ACTIVE_FUND_POWER,
[; ;ATM90E36A.h: 84: PHASE_B_ACTIVE_FUND_POWER,
[; ;ATM90E36A.h: 85: PHASE_C_ACTIVE_FUND_POWER,
[; ;ATM90E36A.h: 86: TOTAL_ACTIVE_HARM_POWER,
[; ;ATM90E36A.h: 87: PHASE_A_ACTIVE_HARM_POWER,
[; ;ATM90E36A.h: 88: PHASE_B_ACTIVE_HARM_POWER,
[; ;ATM90E36A.h: 89: PHASE_C_ACTIVE_HARM_POWER,
[; ;ATM90E36A.h: 90: NLINE_SAMPLED_CURRENT_RMS,
[; ;ATM90E36A.h: 91: PHASE_A_VOLTAGE_RMS,
[; ;ATM90E36A.h: 92: PHASE_B_VOLTAGE_RMS,
[; ;ATM90E36A.h: 93: PHASE_C_VOLTAGE_RMS,
[; ;ATM90E36A.h: 94: NLINE_CALCULATED_CURRENT_RMS,
[; ;ATM90E36A.h: 95: PHASE_A_CURRENT_RMS,
[; ;ATM90E36A.h: 96: PHASE_B_CURRENT_RMS,
[; ;ATM90E36A.h: 97: PHASE_C_CURRENT_RMS,
[; ;ATM90E36A.h: 98: PHASE_A_VOLTAGE_THDN,
[; ;ATM90E36A.h: 99: PHASE_B_VOLTAGE_THDN,
[; ;ATM90E36A.h: 100: PHASE_C_VOLTAGE_THDN,
[; ;ATM90E36A.h: 101: PHASE_A_CURRENT_THDN,
[; ;ATM90E36A.h: 102: PHASE_B_CURRENT_THDN,
[; ;ATM90E36A.h: 103: PHASE_C_CURRENT_THDN,
[; ;ATM90E36A.h: 104: FREQUENCY_REG,
[; ;ATM90E36A.h: 105: PHASE_A_MEAN_ANGLE_PHASE,
[; ;ATM90E36A.h: 106: PHASE_B_MEAN_ANGLE_PHASE,
[; ;ATM90E36A.h: 107: PHASE_C_MEAN_ANGLE_PHASE,
[; ;ATM90E36A.h: 108: TEMPERATURE_REG,
[; ;ATM90E36A.h: 109: PHASE_A_VOLTAGE_ANGLE_PHASE,
[; ;ATM90E36A.h: 110: PHASE_B_VOLTAGE_ANGLE_PHASE,
[; ;ATM90E36A.h: 111: PHASE_C_VOLTAGE_ANGLE_PHASE
[; ;ATM90E36A.h: 112: } ATM_reg_t;
[; ;ATM90E36A.h: 114: void ATM_init(void);
[; ;ATM90E36A.h: 116: void ATM_calibration(void);
[; ;ATM90E36A.h: 118: uint16_t ATM_registers(ATM_type_t type, ATM_reg_t reg);
[; ;Buttons.h: 6: uint8_t getButton1(void);
[; ;Buttons.h: 8: void clearButton1(void);
[; ;Buttons.h: 10: uint8_t getButton2(void);
[; ;Buttons.h: 12: void clearButton2(void);
[; ;Buttons.h: 14: uint8_t getButton3(void);
[; ;Buttons.h: 16: void clearButton3(void);
[; ;Buttons.h: 18: void ButtonInt_config();
[; ;States.h: 16: typedef enum
[; ;States.h: 17: {
[; ;States.h: 18: MAIN_MENU,
[; ;States.h: 19: ENERGY,
[; ;States.h: 20: POWER_1,
[; ;States.h: 21: POWER_2,
[; ;States.h: 22: RMS_VI,
[; ;States.h: 23: POWER_FACTOR,
[; ;States.h: 24: PHASE_ANGLE,
[; ;States.h: 25: FREQUENCY,
[; ;States.h: 26: TEMPERATURE
[; ;States.h: 27: }States_MenuType;
[; ;States.h: 30: typedef States_MenuType(*fptrState)(void);
[; ;States.h: 33: typedef const struct State
[; ;States.h: 34: {
[; ;States.h: 35: States_MenuType (*stateFunction)(void);
[; ;States.h: 36: }StateType;
[; ;States.h: 47: States_MenuType stateMainMenu(void);
[; ;States.h: 57: States_MenuType stateEnergy(void);
[; ;States.h: 67: States_MenuType statePower1(void);
[; ;States.h: 77: States_MenuType statePower2(void);
[; ;States.h: 87: States_MenuType stateRmsVI(void);
[; ;States.h: 97: States_MenuType statePowerFactor(void);
[; ;States.h: 107: States_MenuType statePhaseAngle(void);
[; ;States.h: 117: States_MenuType stateFrequency(void);
[; ;States.h: 127: States_MenuType stateTemperature(void);
[; ;Phases.h: 10: typedef enum
[; ;Phases.h: 11: {
[; ;Phases.h: 12: INITIAL_LOAD,
[; ;Phases.h: 13: GENERAL_VIEW,
[; ;Phases.h: 14: VIEW_MENU,
[; ;Phases.h: 15: SEND_DATA
[; ;Phases.h: 16: }PhaseStateMenu_Type;
[; ;Phases.h: 18: typedef struct
[; ;Phases.h: 19: {
[; ;Phases.h: 20: PhaseStateMenu_Type phaseState;
[; ;Phases.h: 21: States_MenuType stateMain;
[; ;Phases.h: 22: }PhaseMainMenu_Type;
[; ;Phases.h: 24: typedef PhaseMainMenu_Type(*fptrPhaseMainMenu)(PhaseMainMenu_Type);
[; ;Phases.h: 26: typedef const struct PhaseMainMenu
[; ;Phases.h: 27: {
[; ;Phases.h: 28: PhaseMainMenu_Type(*PhaseMainMenu)(PhaseMainMenu_Type);
[; ;Phases.h: 29: }PhasePtrMainMenu_Type;
[; ;Phases.h: 37: typedef enum
[; ;Phases.h: 38: {
[; ;Phases.h: 39: ACTIVE_ENERGY,
[; ;Phases.h: 40: REACTIVE_ENERGY,
[; ;Phases.h: 41: APPARENT_ENERGY,
[; ;Phases.h: 42: FUNDAMENTAL_ENERGY,
[; ;Phases.h: 43: HARMONIC_ENERGY,
[; ;Phases.h: 44: EXIT_ENERGY
[; ;Phases.h: 45: }PhaseStateEnergy_Type;
[; ;Phases.h: 47: typedef struct
[; ;Phases.h: 48: {
[; ;Phases.h: 49: uint8_t dummy;
[; ;Phases.h: 50: PhaseStateEnergy_Type phaseState;
[; ;Phases.h: 51: States_MenuType stateMain;
[; ;Phases.h: 52: }PhaseEnergy_Type;
[; ;Phases.h: 54: typedef PhaseEnergy_Type(*fptrPhaseEnergy)(PhaseEnergy_Type);
[; ;Phases.h: 56: typedef const struct PhaseEnergy
[; ;Phases.h: 57: {
[; ;Phases.h: 58: PhaseEnergy_Type(*PhaseEnergy)(PhaseEnergy_Type);
[; ;Phases.h: 59: }PhasePtrEnergy_Type;
[; ;Phases.h: 67: typedef enum
[; ;Phases.h: 68: {
[; ;Phases.h: 69: TYPES_POWER1,
[; ;Phases.h: 70: PHASES_POWER1,
[; ;Phases.h: 71: EXIT_POWER1
[; ;Phases.h: 72: }PhaseStatePower1_Type;
[; ;Phases.h: 74: typedef struct
[; ;Phases.h: 75: {
[; ;Phases.h: 76: uint8_t dummy;
[; ;Phases.h: 77: PhaseStatePower1_Type phaseState;
[; ;Phases.h: 78: States_MenuType stateMain;
[; ;Phases.h: 79: }PhasePower1_Type;
[; ;Phases.h: 81: typedef PhasePower1_Type(*fptrPhasePower1)(PhasePower1_Type);
[; ;Phases.h: 83: typedef const struct PhasePower1
[; ;Phases.h: 84: {
[; ;Phases.h: 85: PhasePower1_Type(*PhasePower1)(PhasePower1_Type);
[; ;Phases.h: 86: }PhasePtrPower1_Type;
[; ;Phases.h: 94: typedef enum
[; ;Phases.h: 95: {
[; ;Phases.h: 96: FH_POWER2,
[; ;Phases.h: 97: PHASES_POWER2,
[; ;Phases.h: 98: EXIT_POWER2
[; ;Phases.h: 99: }PhaseStatePower2_Type;
[; ;Phases.h: 101: typedef struct
[; ;Phases.h: 102: {
[; ;Phases.h: 103: uint8_t dummy;
[; ;Phases.h: 104: PhaseStatePower2_Type phaseState;
[; ;Phases.h: 105: States_MenuType stateMain;
[; ;Phases.h: 106: }PhasePower2_Type;
[; ;Phases.h: 108: typedef PhasePower2_Type(*fptrPhasePower2)(PhasePower2_Type);
[; ;Phases.h: 110: typedef const struct PhasePower2
[; ;Phases.h: 111: {
[; ;Phases.h: 112: PhasePower2_Type(*PhasePower2)(PhasePower2_Type);
[; ;Phases.h: 113: }PhasePtrPower2_Type;
[; ;Phases.h: 121: typedef enum
[; ;Phases.h: 122: {
[; ;Phases.h: 123: PHASES_RMSVI,
[; ;Phases.h: 124: NEUTRAL_RMSVI,
[; ;Phases.h: 125: EXIT_RMSVI
[; ;Phases.h: 126: }PhaseStateRmsVI_Type;
[; ;Phases.h: 128: typedef struct
[; ;Phases.h: 129: {
[; ;Phases.h: 130: uint8_t dummy;
[; ;Phases.h: 131: PhaseStateRmsVI_Type phaseState;
[; ;Phases.h: 132: States_MenuType stateMain;
[; ;Phases.h: 133: }PhaseRmsVI_Type;
[; ;Phases.h: 135: typedef PhaseRmsVI_Type(*fptrPhaseRmsVI)(PhaseRmsVI_Type);
[; ;Phases.h: 137: typedef const struct PhaseRmsVI
[; ;Phases.h: 138: {
[; ;Phases.h: 139: PhaseRmsVI_Type(*PhaseRmsVI)(PhaseRmsVI_Type);
[; ;Phases.h: 140: }PhasePtrRmsVI_Type;
[; ;Phases.h: 147: typedef enum
[; ;Phases.h: 148: {
[; ;Phases.h: 149: PHASES_PF,
[; ;Phases.h: 150: EXIT_PF
[; ;Phases.h: 151: }PhaseStatePowerFactor_Type;
[; ;Phases.h: 153: typedef struct
[; ;Phases.h: 154: {
[; ;Phases.h: 155: PhaseStatePowerFactor_Type phaseState;
[; ;Phases.h: 156: States_MenuType stateMain;
[; ;Phases.h: 157: }PhasePowerFactor_Type;
[; ;Phases.h: 159: typedef PhasePowerFactor_Type(*fptrPhasePowerFactor)(PhasePowerFactor_Type);
[; ;Phases.h: 161: typedef const struct PhasePowerFactor
[; ;Phases.h: 162: {
[; ;Phases.h: 163: PhasePowerFactor_Type(*PhasePowerFactor)(PhasePowerFactor_Type);
[; ;Phases.h: 164: }PhasePtrPowerFactor_Type;
[; ;Phases.h: 171: typedef enum
[; ;Phases.h: 172: {
[; ;Phases.h: 173: PHASES_PA,
[; ;Phases.h: 174: VI_PA,
[; ;Phases.h: 175: THDN_PA,
[; ;Phases.h: 176: EXIT_PA
[; ;Phases.h: 177: }PhaseStatePhaseAngle_Type;
[; ;Phases.h: 179: typedef struct
[; ;Phases.h: 180: {
[; ;Phases.h: 181: uint8_t dummy;
[; ;Phases.h: 182: PhaseStatePhaseAngle_Type phaseState;
[; ;Phases.h: 183: States_MenuType stateMain;
[; ;Phases.h: 184: }PhasePhaseAngle_Type;
[; ;Phases.h: 186: typedef PhasePhaseAngle_Type(*fptrPhasePhaseAngle)(PhasePhaseAngle_Type);
[; ;Phases.h: 188: typedef const struct PhasePhaseAngle
[; ;Phases.h: 189: {
[; ;Phases.h: 190: PhasePhaseAngle_Type(*PhasePhaseAngle)(PhasePhaseAngle_Type);
[; ;Phases.h: 191: }PhasePtrPhaseAngle_Type;
[; ;Phases.h: 196: typedef enum
[; ;Phases.h: 197: {
[; ;Phases.h: 198: SHOW_FREQUENCY,
[; ;Phases.h: 199: EXIT_FREQUENCY
[; ;Phases.h: 200: }PhaseStateFrequency_Type;
[; ;Phases.h: 202: typedef struct
[; ;Phases.h: 203: {
[; ;Phases.h: 204: uint8_t dummy;
[; ;Phases.h: 205: PhaseStateFrequency_Type phaseState;
[; ;Phases.h: 206: States_MenuType stateMain;
[; ;Phases.h: 207: }PhaseFrequency_Type;
[; ;Phases.h: 209: typedef PhaseFrequency_Type(*fptrPhaseFrequency)(PhaseFrequency_Type);
[; ;Phases.h: 211: typedef const struct PhaseFrequency
[; ;Phases.h: 212: {
[; ;Phases.h: 213: PhaseFrequency_Type(*PhaseFrequency)(PhaseFrequency_Type);
[; ;Phases.h: 214: }PhasePtrFrequency_Type;
[; ;Phases.h: 220: typedef enum
[; ;Phases.h: 221: {
[; ;Phases.h: 222: SHOW_TEMPERATURE,
[; ;Phases.h: 223: EXIT_TEMPERATURE
[; ;Phases.h: 224: }PhaseStateTemperature_Type;
[; ;Phases.h: 226: typedef struct
[; ;Phases.h: 227: {
[; ;Phases.h: 228: uint8_t dummy;
[; ;Phases.h: 229: PhaseStateTemperature_Type phaseState;
[; ;Phases.h: 230: States_MenuType stateMain;
[; ;Phases.h: 231: }PhaseTemperature_Type;
[; ;Phases.h: 233: typedef PhaseTemperature_Type(*fptrPhaseTemperature)(PhaseTemperature_Type);
[; ;Phases.h: 235: typedef const struct PhaseTemperature
[; ;Phases.h: 236: {
[; ;Phases.h: 237: PhaseTemperature_Type(*PhaseTemperature)(PhaseTemperature_Type);
[; ;Phases.h: 238: }PhasePtrTemperature_Type;
[; ;Phases.h: 248: PhaseMainMenu_Type initialLoad(PhaseMainMenu_Type data);
[; ;Phases.h: 258: PhaseMainMenu_Type generalView(PhaseMainMenu_Type data);
[; ;Phases.h: 269: PhaseMainMenu_Type viewMenu(PhaseMainMenu_Type data);
[; ;Phases.h: 279: PhaseMainMenu_Type sendData(PhaseMainMenu_Type data);
[; ;Phases.h: 289: PhaseEnergy_Type activeEnergy(PhaseEnergy_Type data);
[; ;Phases.h: 299: PhaseEnergy_Type reactiveEnergy(PhaseEnergy_Type data);
[; ;Phases.h: 309: PhaseEnergy_Type apparentEnergy(PhaseEnergy_Type data);
[; ;Phases.h: 319: PhaseEnergy_Type fundamentalEnergy(PhaseEnergy_Type data);
[; ;Phases.h: 329: PhaseEnergy_Type harmonicEnergy(PhaseEnergy_Type data);
[; ;Phases.h: 339: PhaseEnergy_Type exitEnergy(PhaseEnergy_Type data);
[; ;Phases.h: 349: PhasePower1_Type typesPower1(PhasePower1_Type data);
[; ;Phases.h: 359: PhasePower1_Type phPower1(PhasePower1_Type data);
[; ;Phases.h: 370: PhasePower1_Type vectorPower1(PhasePower1_Type data);
[; ;Phases.h: 382: PhasePower1_Type exitPower1(PhasePower1_Type data);
[; ;Phases.h: 393: PhasePower2_Type fhPower2(PhasePower2_Type data);
[; ;Phases.h: 404: PhasePower2_Type phPower2(PhasePower2_Type data);
[; ;Phases.h: 415: PhasePower2_Type exitPower2(PhasePower2_Type data);
[; ;Phases.h: 426: PhaseRmsVI_Type phRmsVI(PhaseRmsVI_Type data);
[; ;Phases.h: 437: PhaseRmsVI_Type neutralRmsVI(PhaseRmsVI_Type data);
[; ;Phases.h: 448: PhaseRmsVI_Type exitRmsVI(PhaseRmsVI_Type data);
[; ;Phases.h: 459: PhasePowerFactor_Type phPowerFactor(PhasePowerFactor_Type data);
[; ;Phases.h: 470: PhasePowerFactor_Type exitPowerFactor(PhasePowerFactor_Type data);
[; ;Phases.h: 481: PhasePhaseAngle_Type phPhaseAngle(PhasePhaseAngle_Type data);
[; ;Phases.h: 492: PhasePhaseAngle_Type viPhaseAngle(PhasePhaseAngle_Type data);
[; ;Phases.h: 502: PhasePhaseAngle_Type THDNPhaseAngle(PhasePhaseAngle_Type data);
[; ;Phases.h: 513: PhasePhaseAngle_Type exitPhaseAngle(PhasePhaseAngle_Type data);
[; ;Phases.h: 524: PhaseFrequency_Type showFrequency(PhaseFrequency_Type data);
[; ;Phases.h: 535: PhaseFrequency_Type exitFrequency(PhaseFrequency_Type data);
[; ;Phases.h: 546: PhaseTemperature_Type showTemperature(PhaseTemperature_Type data);
[; ;Phases.h: 557: PhaseTemperature_Type exitTemperature(PhaseTemperature_Type data);
"5 Phases.c
[v _SPI_Config2 `CS285 ~T0 @X0 1 e ]
[i _SPI_Config2
:U ..
:U ..
"7
. `E3104 1
"8
. `E3108 0
"10
. `E3112 2
..
..
]
[; ;Phases.c: 5: const SPI_ConfigType SPI_Config2 =
[; ;Phases.c: 6: {
[; ;Phases.c: 7: SPI_HIGH_POLARITY,
[; ;Phases.c: 8: SPI_LOW_PHASE,
[; ;Phases.c: 9: SPI_SERIAL_CLK64
[; ;Phases.c: 10: };
"12
[v _initialLoad `(S288 ~T0 @X0 1 ef1`S288 ]
"13
{
[; ;Phases.c: 12: PhaseMainMenu_Type initialLoad(PhaseMainMenu_Type data)
[; ;Phases.c: 13: {
[e :U _initialLoad ]
"12
[v _data `S288 ~T0 @X0 1 r1 ]
"13
[f ]
"15
[v F3556 `S288 ~T0 @X0 1 s currentMainMenu1 ]
[; ;Phases.c: 15: static PhaseMainMenu_Type currentMainMenu1;
[; ;Phases.c: 18: ATM_init();
"18
[e ( _ATM_init ..  ]
[; ;Phases.c: 20: delay(1500);
"20
[e ( _delay (1 -> -> -> 1500 `i `l `ul ]
[; ;Phases.c: 23: currentMainMenu1.phaseState = GENERAL_VIEW;
"23
[e = . F3556 0 . `E3332 1 ]
[; ;Phases.c: 24: currentMainMenu1.stateMain = data.stateMain;
"24
[e = . F3556 1 . _data 1 ]
[; ;Phases.c: 26: return (currentMainMenu1);
"26
[e ) F3556 ]
[e $UE 306  ]
[; ;Phases.c: 27: }
"27
[e :UE 306 ]
}
"29
[v _generalView `(S288 ~T0 @X0 1 ef1`S288 ]
"30
{
[; ;Phases.c: 29: PhaseMainMenu_Type generalView(PhaseMainMenu_Type data)
[; ;Phases.c: 30: {
[e :U _generalView ]
"29
[v _data `S288 ~T0 @X0 1 r1 ]
"30
[f ]
[v F3559 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3559
:U ..
-> 84 `c
-> 104 `c
-> 114 `c
-> 101 `c
-> 101 `c
-> 32 `c
-> 80 `c
-> 104 `c
-> 97 `c
-> 115 `c
-> 101 `c
-> 0 `c
..
]
"31
[v _msgInitial1 `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 31: const uint8_t msgInitial1[] = "Three Phase";
[e = _msgInitial1 F3559 ]
[v F3561 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3561
:U ..
-> 77 `c
-> 101 `c
-> 97 `c
-> 115 `c
-> 117 `c
-> 114 `c
-> 101 `c
-> 109 `c
-> 101 `c
-> 110 `c
-> 116 `c
-> 0 `c
..
]
"32
[v _msgInitial2 `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 32: const uint8_t msgInitial2[] = "Measurement";
[e = _msgInitial2 F3561 ]
[v F3563 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3563
:U ..
-> 83 `c
-> 101 `c
-> 110 `c
-> 100 `c
-> 0 `c
..
]
"33
[v _buttonRight `Cuc ~T0 @X0 5  a ]
[; ;Phases.c: 33: const uint8_t buttonRight[] = "Send";
[e = _buttonRight F3563 ]
[v F3565 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3565
:U ..
-> 77 `c
-> 101 `c
-> 110 `c
-> 117 `c
-> 0 `c
..
]
"34
[v _buttonLeft `Cuc ~T0 @X0 5  a ]
[; ;Phases.c: 34: const uint8_t buttonLeft[] = "Menu";
[e = _buttonLeft F3565 ]
"36
[v F3566 `uc ~T0 @X0 1 s lockClear ]
[i F3566
-> -> 0 `i `uc
]
"37
[v F3567 `uc ~T0 @X0 1 s lockWrite ]
[i F3567
-> -> 0 `i `uc
]
"39
[v F3568 `S288 ~T0 @X0 1 s currentMainMenu2 ]
[; ;Phases.c: 36: static uint8_t lockClear = 0;
[; ;Phases.c: 37: static uint8_t lockWrite = 0;
[; ;Phases.c: 39: static PhaseMainMenu_Type currentMainMenu2;
[; ;Phases.c: 41: currentMainMenu2.phaseState = GENERAL_VIEW;
"41
[e = . F3568 0 . `E3332 1 ]
[; ;Phases.c: 43: if(0 == lockClear)
"43
[e $ ! == -> 0 `i -> F3566 `i 308  ]
[; ;Phases.c: 44: {
"44
{
[; ;Phases.c: 46: LCDNokia_clear();
"46
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 48: lockClear = 1;
"48
[e = F3566 -> -> 1 `i `uc ]
"49
}
[e :U 308 ]
[; ;Phases.c: 49: }
[; ;Phases.c: 51: if(0 == lockWrite)
"51
[e $ ! == -> 0 `i -> F3567 `i 309  ]
[; ;Phases.c: 52: {
"52
{
[; ;Phases.c: 53: LCDNokia_gotoXY(20,1);
"53
[e ( _LCDNokia_gotoXY (2 , -> -> 20 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 54: LCDNokia_sendString(msgInitial1);
"54
[e ( _LCDNokia_sendString (1 &U _msgInitial1 ]
[; ;Phases.c: 56: LCDNokia_gotoXY(27,1);
"56
[e ( _LCDNokia_gotoXY (2 , -> -> 27 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 57: LCDNokia_sendString(msgInitial2);
"57
[e ( _LCDNokia_sendString (1 &U _msgInitial2 ]
[; ;Phases.c: 59: LCDNokia_gotoXY(0,4);
"59
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 4 `i `uc ]
[; ;Phases.c: 60: LCDNokia_sendString(buttonLeft);
"60
[e ( _LCDNokia_sendString (1 &U _buttonLeft ]
[; ;Phases.c: 62: LCDNokia_gotoXY(65,4);
"62
[e ( _LCDNokia_gotoXY (2 , -> -> 65 `i `uc -> -> 4 `i `uc ]
[; ;Phases.c: 63: LCDNokia_sendString(buttonRight);
"63
[e ( _LCDNokia_sendString (1 &U _buttonRight ]
[; ;Phases.c: 65: lockWrite = 1;
"65
[e = F3567 -> -> 1 `i `uc ]
"66
}
[e :U 309 ]
[; ;Phases.c: 66: }
[; ;Phases.c: 68: if(getButton1() == 1)
"68
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 310  ]
[; ;Phases.c: 69: {
"69
{
[; ;Phases.c: 70: currentMainMenu2.phaseState = VIEW_MENU;
"70
[e = . F3568 0 . `E3332 2 ]
[; ;Phases.c: 71: lockClear = 0;
"71
[e = F3566 -> -> 0 `i `uc ]
[; ;Phases.c: 72: lockWrite = 0;
"72
[e = F3567 -> -> 0 `i `uc ]
"73
}
[e :U 310 ]
[; ;Phases.c: 73: }
[; ;Phases.c: 74: if(getButton3() == 1)
"74
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 311  ]
[; ;Phases.c: 75: {
"75
{
[; ;Phases.c: 76: currentMainMenu2.phaseState = SEND_DATA;
"76
[e = . F3568 0 . `E3332 3 ]
[; ;Phases.c: 77: lockClear = 0;
"77
[e = F3566 -> -> 0 `i `uc ]
[; ;Phases.c: 78: lockWrite = 0;
"78
[e = F3567 -> -> 0 `i `uc ]
"79
}
[e :U 311 ]
[; ;Phases.c: 79: }
[; ;Phases.c: 82: currentMainMenu2.stateMain = data.stateMain;
"82
[e = . F3568 1 . _data 1 ]
[; ;Phases.c: 84: return (currentMainMenu2);
"84
[e ) F3568 ]
[e $UE 307  ]
[; ;Phases.c: 85: }
"85
[e :UE 307 ]
}
"87
[v _viewMenu `(S288 ~T0 @X0 1 ef1`S288 ]
"88
{
[; ;Phases.c: 87: PhaseMainMenu_Type viewMenu(PhaseMainMenu_Type data)
[; ;Phases.c: 88: {
[e :U _viewMenu ]
"87
[v _data `S288 ~T0 @X0 1 r1 ]
"88
[f ]
"89
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 89: const uint8_t maxScreens = 7;
[e = _maxScreens -> -> 7 `i `uc ]
[v F3572 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3572
:U ..
-> 69 `c
-> 110 `c
-> 101 `c
-> 114 `c
-> 103 `c
-> 121 `c
-> 0 `c
..
]
"90
[v _string_Energy `Cuc ~T0 @X0 7  a ]
[; ;Phases.c: 90: const uint8_t string_Energy[] = "Energy";
[e = _string_Energy F3572 ]
[v F3574 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3574
:U ..
-> 65 `c
-> 99 `c
-> 116 `c
-> 105 `c
-> 118 `c
-> 101 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 105 `c
-> 118 `c
-> 101 `c
-> 0 `c
..
]
"92
[v _string1_Power1 `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 92: const uint8_t string1_Power1[] = "Active Reactive";
[e = _string1_Power1 F3574 ]
[v F3576 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3576
:U ..
-> 65 `c
-> 112 `c
-> 112 `c
-> 97 `c
-> 114 `c
-> 101 `c
-> 110 `c
-> 116 `c
-> 32 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 101 `c
-> 114 `c
-> 0 `c
..
]
"93
[v _string2_Power1 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 93: const uint8_t string2_Power1[] = "Apparent Power";
[e = _string2_Power1 F3576 ]
[v F3578 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3578
:U ..
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 97 `c
-> 109 `c
-> 101 `c
-> 110 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 0 `c
..
]
"95
[v _string1_Power2 `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 95: const uint8_t string1_Power2[] = "Fundamental";
[e = _string1_Power2 F3578 ]
[v F3580 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3580
:U ..
-> 72 `c
-> 97 `c
-> 114 `c
-> 109 `c
-> 111 `c
-> 110 `c
-> 105 `c
-> 99 `c
-> 0 `c
..
]
"96
[v _string2_Power2 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 96: const uint8_t string2_Power2[] = "Harmonic";
[e = _string2_Power2 F3580 ]
[v F3582 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3582
:U ..
-> 80 `c
-> 111 `c
-> 119 `c
-> 101 `c
-> 114 `c
-> 0 `c
..
]
"97
[v _string3_Power2 `Cuc ~T0 @X0 6  a ]
[; ;Phases.c: 97: const uint8_t string3_Power2[] = "Power";
[e = _string3_Power2 F3582 ]
[v F3584 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3584
:U ..
-> 86 `c
-> 111 `c
-> 108 `c
-> 116 `c
-> 97 `c
-> 103 `c
-> 101 `c
-> 32 `c
-> 67 `c
-> 117 `c
-> 114 `c
-> 114 `c
-> 101 `c
-> 110 `c
-> 116 `c
-> 0 `c
..
]
"99
[v _string1_RMS `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 99: const uint8_t string1_RMS[] = "Voltage Current";
[e = _string1_RMS F3584 ]
[v F3586 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3586
:U ..
-> 82 `c
-> 77 `c
-> 83 `c
-> 0 `c
..
]
"100
[v _string2_RMS `Cuc ~T0 @X0 4  a ]
[; ;Phases.c: 100: const uint8_t string2_RMS[] = "RMS";
[e = _string2_RMS F3586 ]
[v F3588 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3588
:U ..
-> 80 `c
-> 111 `c
-> 119 `c
-> 101 `c
-> 114 `c
-> 0 `c
..
]
"102
[v _string1_PowerFactor `Cuc ~T0 @X0 6  a ]
[; ;Phases.c: 102: const uint8_t string1_PowerFactor[] = "Power";
[e = _string1_PowerFactor F3588 ]
[v F3590 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3590
:U ..
-> 70 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 111 `c
-> 114 `c
-> 0 `c
..
]
"103
[v _string2_PowerFactor `Cuc ~T0 @X0 7  a ]
[; ;Phases.c: 103: const uint8_t string2_PowerFactor[] = "Factor";
[e = _string2_PowerFactor F3590 ]
[v F3592 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3592
:U ..
-> 80 `c
-> 104 `c
-> 97 `c
-> 115 `c
-> 101 `c
-> 0 `c
..
]
"105
[v _string1_PhaseAngle `Cuc ~T0 @X0 6  a ]
[; ;Phases.c: 105: const uint8_t string1_PhaseAngle[] = "Phase";
[e = _string1_PhaseAngle F3592 ]
[v F3594 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3594
:U ..
-> 65 `c
-> 110 `c
-> 103 `c
-> 108 `c
-> 101 `c
-> 0 `c
..
]
"106
[v _string2_PhaseAngle `Cuc ~T0 @X0 6  a ]
[; ;Phases.c: 106: const uint8_t string2_PhaseAngle[] = "Angle";
[e = _string2_PhaseAngle F3594 ]
[v F3596 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3596
:U ..
-> 70 `c
-> 114 `c
-> 101 `c
-> 113 `c
-> 117 `c
-> 101 `c
-> 110 `c
-> 99 `c
-> 121 `c
-> 0 `c
..
]
"108
[v _string1_Frequency `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 108: const uint8_t string1_Frequency[] = "Frequency";
[e = _string1_Frequency F3596 ]
[v F3598 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3598
:U ..
-> 84 `c
-> 101 `c
-> 109 `c
-> 112 `c
-> 101 `c
-> 114 `c
-> 97 `c
-> 116 `c
-> 117 `c
-> 114 `c
-> 101 `c
-> 0 `c
..
]
"110
[v _string1_Temperature `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 110: const uint8_t string1_Temperature[] = "Temperature";
[e = _string1_Temperature F3598 ]
[v F3600 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3600
:U ..
-> 82 `c
-> 0 `c
..
]
"112
[v _buttonRight `Cuc ~T0 @X0 2  a ]
[; ;Phases.c: 112: const uint8_t buttonRight[] = "R";
[e = _buttonRight F3600 ]
[v F3602 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3602
:U ..
-> 69 `c
-> 0 `c
..
]
"113
[v _buttonCenter `Cuc ~T0 @X0 2  a ]
[; ;Phases.c: 113: const uint8_t buttonCenter[] = "E";
[e = _buttonCenter F3602 ]
[v F3604 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3604
:U ..
-> 76 `c
-> 0 `c
..
]
"114
[v _buttonLeft `Cuc ~T0 @X0 2  a ]
[; ;Phases.c: 114: const uint8_t buttonLeft[] = "L";
[e = _buttonLeft F3604 ]
"116
[v F3605 `uc ~T0 @X0 1 s lockClear ]
[i F3605
-> -> 0 `i `uc
]
"117
[v F3606 `uc ~T0 @X0 1 s lockWrite ]
[i F3606
-> -> 0 `i `uc
]
"118
[v F3607 `uc ~T0 @X0 1 s counterMenu ]
[i F3607
-> -> 0 `i `uc
]
"120
[v F3608 `S288 ~T0 @X0 1 s currentMainMenu3 ]
[; ;Phases.c: 116: static uint8_t lockClear = 0;
[; ;Phases.c: 117: static uint8_t lockWrite = 0;
[; ;Phases.c: 118: static uint8_t counterMenu = 0;
[; ;Phases.c: 120: static PhaseMainMenu_Type currentMainMenu3;
[; ;Phases.c: 122: currentMainMenu3.phaseState = VIEW_MENU;
"122
[e = . F3608 0 . `E3332 2 ]
[; ;Phases.c: 123: currentMainMenu3.stateMain = data.stateMain;
"123
[e = . F3608 1 . _data 1 ]
[; ;Phases.c: 125: if(0 == lockClear)
"125
[e $ ! == -> 0 `i -> F3605 `i 313  ]
[; ;Phases.c: 126: {
"126
{
[; ;Phases.c: 128: LCDNokia_clear();
"128
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 130: lockClear = 1;
"130
[e = F3605 -> -> 1 `i `uc ]
"131
}
[e :U 313 ]
[; ;Phases.c: 131: }
[; ;Phases.c: 133: if(0 == lockWrite)
"133
[e $ ! == -> 0 `i -> F3606 `i 314  ]
[; ;Phases.c: 134: {
"134
{
[; ;Phases.c: 135: switch(counterMenu)
"135
[e $U 316  ]
[; ;Phases.c: 136: {
"136
{
[; ;Phases.c: 137: case 0:
"137
[e :U 317 ]
[; ;Phases.c: 138: LCDNokia_gotoXY(15,1);
"138
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 139: LCDNokia_sendString(string_Energy);
"139
[e ( _LCDNokia_sendString (1 &U _string_Energy ]
[; ;Phases.c: 140: break;
"140
[e $U 315  ]
[; ;Phases.c: 141: case 1:
"141
[e :U 318 ]
[; ;Phases.c: 142: LCDNokia_gotoXY(15,1);
"142
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 143: LCDNokia_sendString(string1_Power1);
"143
[e ( _LCDNokia_sendString (1 &U _string1_Power1 ]
[; ;Phases.c: 145: LCDNokia_gotoXY(0,2);
"145
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 146: LCDNokia_sendString(string2_Power1);
"146
[e ( _LCDNokia_sendString (1 &U _string2_Power1 ]
[; ;Phases.c: 147: break;
"147
[e $U 315  ]
[; ;Phases.c: 148: case 2:
"148
[e :U 319 ]
[; ;Phases.c: 149: LCDNokia_gotoXY(15,1);
"149
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 150: LCDNokia_sendString(string1_Power2);
"150
[e ( _LCDNokia_sendString (1 &U _string1_Power2 ]
[; ;Phases.c: 152: LCDNokia_gotoXY(15,2);
"152
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 153: LCDNokia_sendString(string2_Power2);
"153
[e ( _LCDNokia_sendString (1 &U _string2_Power2 ]
[; ;Phases.c: 155: LCDNokia_gotoXY(15,3);
"155
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 156: LCDNokia_sendString(string3_Power2);
"156
[e ( _LCDNokia_sendString (1 &U _string3_Power2 ]
[; ;Phases.c: 157: break;
"157
[e $U 315  ]
[; ;Phases.c: 158: case 3:
"158
[e :U 320 ]
[; ;Phases.c: 159: LCDNokia_gotoXY(15,1);
"159
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 160: LCDNokia_sendString(string1_RMS);
"160
[e ( _LCDNokia_sendString (1 &U _string1_RMS ]
[; ;Phases.c: 162: LCDNokia_gotoXY(15,2);
"162
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 163: LCDNokia_sendString(string2_RMS);
"163
[e ( _LCDNokia_sendString (1 &U _string2_RMS ]
[; ;Phases.c: 164: break;
"164
[e $U 315  ]
[; ;Phases.c: 165: case 4:
"165
[e :U 321 ]
[; ;Phases.c: 166: LCDNokia_gotoXY(15,1);
"166
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 167: LCDNokia_sendString(string1_PowerFactor);
"167
[e ( _LCDNokia_sendString (1 &U _string1_PowerFactor ]
[; ;Phases.c: 169: LCDNokia_gotoXY(15,2);
"169
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 170: LCDNokia_sendString(string2_PowerFactor);
"170
[e ( _LCDNokia_sendString (1 &U _string2_PowerFactor ]
[; ;Phases.c: 171: break;
"171
[e $U 315  ]
[; ;Phases.c: 172: case 5:
"172
[e :U 322 ]
[; ;Phases.c: 173: LCDNokia_gotoXY(15,1);
"173
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 174: LCDNokia_sendString(string1_PhaseAngle);
"174
[e ( _LCDNokia_sendString (1 &U _string1_PhaseAngle ]
[; ;Phases.c: 176: LCDNokia_gotoXY(15,2);
"176
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 177: LCDNokia_sendString(string2_PhaseAngle);
"177
[e ( _LCDNokia_sendString (1 &U _string2_PhaseAngle ]
[; ;Phases.c: 178: break;
"178
[e $U 315  ]
[; ;Phases.c: 179: case 6:
"179
[e :U 323 ]
[; ;Phases.c: 180: LCDNokia_gotoXY(15,1);
"180
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 181: LCDNokia_sendString(string1_Frequency);
"181
[e ( _LCDNokia_sendString (1 &U _string1_Frequency ]
[; ;Phases.c: 182: break;
"182
[e $U 315  ]
[; ;Phases.c: 183: case 7:
"183
[e :U 324 ]
[; ;Phases.c: 184: LCDNokia_gotoXY(15,1);
"184
[e ( _LCDNokia_gotoXY (2 , -> -> 15 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 185: LCDNokia_sendString(string1_Temperature);
"185
[e ( _LCDNokia_sendString (1 &U _string1_Temperature ]
[; ;Phases.c: 186: break;
"186
[e $U 315  ]
[; ;Phases.c: 187: default:
"187
[e :U 325 ]
[; ;Phases.c: 188: break;
"188
[e $U 315  ]
"189
}
[; ;Phases.c: 189: }
[e $U 315  ]
"135
[e :U 316 ]
[e [\ F3607 , $ -> -> 0 `i `uc 317
 , $ -> -> 1 `i `uc 318
 , $ -> -> 2 `i `uc 319
 , $ -> -> 3 `i `uc 320
 , $ -> -> 4 `i `uc 321
 , $ -> -> 5 `i `uc 322
 , $ -> -> 6 `i `uc 323
 , $ -> -> 7 `i `uc 324
 325 ]
"189
[e :U 315 ]
[; ;Phases.c: 191: LCDNokia_gotoXY(0,4);
"191
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 4 `i `uc ]
[; ;Phases.c: 192: LCDNokia_sendString(buttonLeft);
"192
[e ( _LCDNokia_sendString (1 &U _buttonLeft ]
[; ;Phases.c: 194: LCDNokia_gotoXY(40,4);
"194
[e ( _LCDNokia_gotoXY (2 , -> -> 40 `i `uc -> -> 4 `i `uc ]
[; ;Phases.c: 195: LCDNokia_sendString(buttonCenter);
"195
[e ( _LCDNokia_sendString (1 &U _buttonCenter ]
[; ;Phases.c: 197: LCDNokia_gotoXY(80,4);
"197
[e ( _LCDNokia_gotoXY (2 , -> -> 80 `i `uc -> -> 4 `i `uc ]
[; ;Phases.c: 198: LCDNokia_sendString(buttonRight);
"198
[e ( _LCDNokia_sendString (1 &U _buttonRight ]
[; ;Phases.c: 200: lockWrite = 1;
"200
[e = F3606 -> -> 1 `i `uc ]
"201
}
[e :U 314 ]
[; ;Phases.c: 201: }
[; ;Phases.c: 203: if(getButton1() == 1)
"203
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 326  ]
[; ;Phases.c: 204: {
"204
{
[; ;Phases.c: 205: if(0 == counterMenu)
"205
[e $ ! == -> 0 `i -> F3607 `i 327  ]
[; ;Phases.c: 206: {
"206
{
[; ;Phases.c: 207: counterMenu = maxScreens;
"207
[e = F3607 _maxScreens ]
"208
}
[; ;Phases.c: 208: }
[e $U 328  ]
"209
[e :U 327 ]
[; ;Phases.c: 209: else
[; ;Phases.c: 210: {
"210
{
[; ;Phases.c: 211: counterMenu--;
"211
[e -- F3607 -> -> 1 `i `uc ]
"212
}
[e :U 328 ]
[; ;Phases.c: 212: }
[; ;Phases.c: 214: lockClear = 0;
"214
[e = F3605 -> -> 0 `i `uc ]
[; ;Phases.c: 215: lockWrite = 0;
"215
[e = F3606 -> -> 0 `i `uc ]
"216
}
[e :U 326 ]
[; ;Phases.c: 216: }
[; ;Phases.c: 217: if(getButton2() == 1)
"217
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 329  ]
[; ;Phases.c: 218: {
"218
{
[; ;Phases.c: 219: switch(counterMenu)
"219
[e $U 331  ]
[; ;Phases.c: 220: {
"220
{
[; ;Phases.c: 221: case 0:
"221
[e :U 332 ]
[; ;Phases.c: 222: currentMainMenu3.phaseState = ACTIVE_ENERGY;
"222
[e = . F3608 0 . `E3350 0 ]
[; ;Phases.c: 223: currentMainMenu3.stateMain = ENERGY;
"223
[e = . F3608 1 . `E3295 1 ]
[; ;Phases.c: 224: break;
"224
[e $U 330  ]
[; ;Phases.c: 225: case 1:
"225
[e :U 333 ]
[; ;Phases.c: 226: currentMainMenu3.phaseState = TYPES_POWER1;
"226
[e = . F3608 0 . `E3371 0 ]
[; ;Phases.c: 227: currentMainMenu3.stateMain = POWER_1;
"227
[e = . F3608 1 . `E3295 2 ]
[; ;Phases.c: 228: break;
"228
[e $U 330  ]
[; ;Phases.c: 229: case 2:
"229
[e :U 334 ]
[; ;Phases.c: 230: currentMainMenu3.phaseState = FH_POWER2;
"230
[e = . F3608 0 . `E3389 0 ]
[; ;Phases.c: 231: currentMainMenu3.stateMain = POWER_2;
"231
[e = . F3608 1 . `E3295 3 ]
[; ;Phases.c: 232: break;
"232
[e $U 330  ]
[; ;Phases.c: 233: case 3:
"233
[e :U 335 ]
[; ;Phases.c: 234: currentMainMenu3.phaseState = PHASES_RMSVI;
"234
[e = . F3608 0 . `E3407 0 ]
[; ;Phases.c: 235: currentMainMenu3.stateMain = RMS_VI;
"235
[e = . F3608 1 . `E3295 4 ]
[; ;Phases.c: 236: break;
"236
[e $U 330  ]
[; ;Phases.c: 237: case 4:
"237
[e :U 336 ]
[; ;Phases.c: 238: currentMainMenu3.phaseState = PHASES_PF;
"238
[e = . F3608 0 . `E3425 0 ]
[; ;Phases.c: 239: currentMainMenu3.stateMain = POWER_FACTOR;
"239
[e = . F3608 1 . `E3295 5 ]
[; ;Phases.c: 240: break;
"240
[e $U 330  ]
[; ;Phases.c: 241: case 5:
"241
[e :U 337 ]
[; ;Phases.c: 242: currentMainMenu3.phaseState = PHASES_PA;
"242
[e = . F3608 0 . `E3441 0 ]
[; ;Phases.c: 243: currentMainMenu3.stateMain = PHASE_ANGLE;
"243
[e = . F3608 1 . `E3295 6 ]
[; ;Phases.c: 244: break;
"244
[e $U 330  ]
[; ;Phases.c: 245: case 6:
"245
[e :U 338 ]
[; ;Phases.c: 246: currentMainMenu3.phaseState = SHOW_FREQUENCY;
"246
[e = . F3608 0 . `E3460 0 ]
[; ;Phases.c: 247: currentMainMenu3.stateMain = FREQUENCY;
"247
[e = . F3608 1 . `E3295 7 ]
[; ;Phases.c: 248: break;
"248
[e $U 330  ]
[; ;Phases.c: 249: case 7:
"249
[e :U 339 ]
[; ;Phases.c: 250: currentMainMenu3.phaseState = SHOW_TEMPERATURE;
"250
[e = . F3608 0 . `E3477 0 ]
[; ;Phases.c: 251: currentMainMenu3.stateMain = TEMPERATURE;
"251
[e = . F3608 1 . `E3295 8 ]
[; ;Phases.c: 252: break;
"252
[e $U 330  ]
[; ;Phases.c: 253: default:
"253
[e :U 340 ]
[; ;Phases.c: 254: break;
"254
[e $U 330  ]
"255
}
[; ;Phases.c: 255: }
[e $U 330  ]
"219
[e :U 331 ]
[e [\ F3607 , $ -> -> 0 `i `uc 332
 , $ -> -> 1 `i `uc 333
 , $ -> -> 2 `i `uc 334
 , $ -> -> 3 `i `uc 335
 , $ -> -> 4 `i `uc 336
 , $ -> -> 5 `i `uc 337
 , $ -> -> 6 `i `uc 338
 , $ -> -> 7 `i `uc 339
 340 ]
"255
[e :U 330 ]
[; ;Phases.c: 256: lockClear = 0;
"256
[e = F3605 -> -> 0 `i `uc ]
[; ;Phases.c: 257: lockWrite = 0;
"257
[e = F3606 -> -> 0 `i `uc ]
"258
}
[e :U 329 ]
[; ;Phases.c: 258: }
[; ;Phases.c: 259: if(getButton3() == 1)
"259
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 341  ]
[; ;Phases.c: 260: {
"260
{
[; ;Phases.c: 261: counterMenu++;
"261
[e ++ F3607 -> -> 1 `i `uc ]
[; ;Phases.c: 262: if(counterMenu > maxScreens)
"262
[e $ ! > -> F3607 `i -> _maxScreens `i 342  ]
[; ;Phases.c: 263: {
"263
{
[; ;Phases.c: 264: counterMenu = 0;
"264
[e = F3607 -> -> 0 `i `uc ]
"265
}
[e :U 342 ]
[; ;Phases.c: 265: }
[; ;Phases.c: 266: lockClear = 0;
"266
[e = F3605 -> -> 0 `i `uc ]
[; ;Phases.c: 267: lockWrite = 0;
"267
[e = F3606 -> -> 0 `i `uc ]
"268
}
[e :U 341 ]
[; ;Phases.c: 268: }
[; ;Phases.c: 270: return (currentMainMenu3);
"270
[e ) F3608 ]
[e $UE 312  ]
[; ;Phases.c: 271: }
"271
[e :UE 312 ]
}
"273
[v _sendData `(S288 ~T0 @X0 1 ef1`S288 ]
"274
{
[; ;Phases.c: 273: PhaseMainMenu_Type sendData(PhaseMainMenu_Type data)
[; ;Phases.c: 274: {
[e :U _sendData ]
"273
[v _data `S288 ~T0 @X0 1 r1 ]
"274
[f ]
"408
[v F3610 `S288 ~T0 @X0 1 s currentMainMenu4 ]
[; ;Phases.c: 408: static PhaseMainMenu_Type currentMainMenu4;
[; ;Phases.c: 411: UART_init(BD_9600);
"411
[e ( _UART_init (1 . `E3128 2 ]
[; ;Phases.c: 703: currentMainMenu4.phaseState = GENERAL_VIEW;
"703
[e = . F3610 0 . `E3332 1 ]
[; ;Phases.c: 704: currentMainMenu4.stateMain = MAIN_MENU;
"704
[e = . F3610 1 . `E3295 0 ]
[; ;Phases.c: 707: SPI_init(&SPI_Config2);
"707
[e ( _SPI_init (1 &U _SPI_Config2 ]
[; ;Phases.c: 708: LCDNokia_init();
"708
[e ( _LCDNokia_init ..  ]
[; ;Phases.c: 709: LCDNokia_clear();
"709
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 711: return (currentMainMenu4);
"711
[e ) F3610 ]
[e $UE 343  ]
[; ;Phases.c: 712: }
"712
[e :UE 343 ]
}
"714
[v _activeEnergy `(S290 ~T0 @X0 1 ef1`S290 ]
"715
{
[; ;Phases.c: 714: PhaseEnergy_Type activeEnergy(PhaseEnergy_Type data)
[; ;Phases.c: 715: {
[e :U _activeEnergy ]
"714
[v _data `S290 ~T0 @X0 1 r1 ]
"715
[f ]
"716
[v F3612 `uc ~T0 @X0 1 s counter ]
[i F3612
-> -> 0 `i `uc
]
"717
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 716: static uint8_t counter = 0;
[; ;Phases.c: 717: const uint8_t maxScreens = 3;
[e = _maxScreens -> -> 3 `i `uc ]
[v F3615 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3615
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"718
[v _active_Forward1 `Cuc ~T0 @X0 14  a ]
[; ;Phases.c: 718: const uint8_t active_Forward1[] = "PA Forw Act: ";
[e = _active_Forward1 F3615 ]
[v F3617 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3617
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"719
[v _active_Forward2 `Cuc ~T0 @X0 14  a ]
[; ;Phases.c: 719: const uint8_t active_Forward2[] = "PB Forw Act: ";
[e = _active_Forward2 F3617 ]
[v F3619 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3619
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"720
[v _active_Forward3 `Cuc ~T0 @X0 14  a ]
[; ;Phases.c: 720: const uint8_t active_Forward3[] = "PC Forw Act: ";
[e = _active_Forward3 F3619 ]
[v F3621 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3621
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"722
[v _active_Reverse1 `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 722: const uint8_t active_Reverse1[] = "PA Rev Act: ";
[e = _active_Reverse1 F3621 ]
[v F3623 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3623
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"723
[v _active_Reverse2 `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 723: const uint8_t active_Reverse2[] = "PB Rev Act: ";
[e = _active_Reverse2 F3623 ]
[v F3625 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3625
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"724
[v _active_Reverse3 `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 724: const uint8_t active_Reverse3[] = "PC Rev Act: ";
[e = _active_Reverse3 F3625 ]
[v F3627 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3627
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"726
[v _active_Forward_Total `Cuc ~T0 @X0 17  a ]
[; ;Phases.c: 726: const uint8_t active_Forward_Total[] = "Total Forw Act: ";
[e = _active_Forward_Total F3627 ]
[v F3629 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3629
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 65 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"727
[v _active_Reverse_Total `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 727: const uint8_t active_Reverse_Total[] = "Total Rev Act: ";
[e = _active_Reverse_Total F3629 ]
"730
[v F3630 `S290 ~T0 @X0 1 s currentEnergy1 ]
[; ;Phases.c: 730: static PhaseEnergy_Type currentEnergy1;
[; ;Phases.c: 733: currentEnergy1.phaseState = ACTIVE_ENERGY;
"733
[e = . F3630 1 . `E3350 0 ]
[; ;Phases.c: 734: currentEnergy1.stateMain = data.stateMain;
"734
[e = . F3630 2 . _data 2 ]
[; ;Phases.c: 736: if(getButton1() == 1)
"736
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 345  ]
[; ;Phases.c: 737: {
"737
{
[; ;Phases.c: 738: currentEnergy1.phaseState = EXIT_ENERGY;
"738
[e = . F3630 1 . `E3350 5 ]
"739
}
[e :U 345 ]
[; ;Phases.c: 739: }
[; ;Phases.c: 740: if(getButton2() == 1)
"740
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 346  ]
[; ;Phases.c: 741: {
"741
{
[; ;Phases.c: 742: currentEnergy1.phaseState = REACTIVE_ENERGY;
"742
[e = . F3630 1 . `E3350 1 ]
[; ;Phases.c: 743: LCDNokia_clear();
"743
[e ( _LCDNokia_clear ..  ]
"744
}
[e :U 346 ]
[; ;Phases.c: 744: }
[; ;Phases.c: 745: if(getButton3() == 1)
"745
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 347  ]
[; ;Phases.c: 746: {
"746
{
[; ;Phases.c: 747: counter++;
"747
[e ++ F3612 -> -> 1 `i `uc ]
[; ;Phases.c: 748: LCDNokia_clear();
"748
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 749: if(counter > maxScreens)
"749
[e $ ! > -> F3612 `i -> _maxScreens `i 348  ]
[; ;Phases.c: 750: {
"750
{
[; ;Phases.c: 751: counter = 0;
"751
[e = F3612 -> -> 0 `i `uc ]
"752
}
[e :U 348 ]
"753
}
[e :U 347 ]
[; ;Phases.c: 752: }
[; ;Phases.c: 753: }
[; ;Phases.c: 754: switch(counter)
"754
[e $U 350  ]
[; ;Phases.c: 755: {
"755
{
[; ;Phases.c: 756: case 0:
"756
[e :U 351 ]
[; ;Phases.c: 757: LCDNokia_gotoXY(0,1);
"757
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 758: LCDNokia_sendString(active_Forward1);
"758
[e ( _LCDNokia_sendString (1 &U _active_Forward1 ]
[; ;Phases.c: 759: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, PHASE_A_FORW_ACTIVE_ENERGY));
"759
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 1 `ul ]
[; ;Phases.c: 760: LCDNokia_gotoXY(0,2);
"760
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 761: LCDNokia_sendString(active_Forward2);
"761
[e ( _LCDNokia_sendString (1 &U _active_Forward2 ]
[; ;Phases.c: 762: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, PHASE_B_FORW_ACTIVE_ENERGY));
"762
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 2 `ul ]
[; ;Phases.c: 763: LCDNokia_gotoXY(0,3);
"763
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 764: LCDNokia_sendString(active_Forward3);
"764
[e ( _LCDNokia_sendString (1 &U _active_Forward3 ]
[; ;Phases.c: 765: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, PHASE_C_FORW_ACTIVE_ENERGY));
"765
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 3 `ul ]
[; ;Phases.c: 766: break;
"766
[e $U 349  ]
[; ;Phases.c: 767: case 1:
"767
[e :U 352 ]
[; ;Phases.c: 768: LCDNokia_gotoXY(0,1);
"768
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 769: LCDNokia_sendString(active_Reverse1);
"769
[e ( _LCDNokia_sendString (1 &U _active_Reverse1 ]
[; ;Phases.c: 770: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, PHASE_A_REV_ACTIVE_ENERGY));
"770
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 5 `ul ]
[; ;Phases.c: 771: LCDNokia_gotoXY(0,2);
"771
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 772: LCDNokia_sendString(active_Reverse2);
"772
[e ( _LCDNokia_sendString (1 &U _active_Reverse2 ]
[; ;Phases.c: 773: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, PHASE_B_REV_ACTIVE_ENERGY));
"773
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 6 `ul ]
[; ;Phases.c: 774: LCDNokia_gotoXY(0,3);
"774
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 775: LCDNokia_sendString(active_Reverse3);
"775
[e ( _LCDNokia_sendString (1 &U _active_Reverse3 ]
[; ;Phases.c: 776: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, PHASE_C_REV_ACTIVE_ENERGY));
"776
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 7 `ul ]
[; ;Phases.c: 777: break;
"777
[e $U 349  ]
[; ;Phases.c: 778: case 2:
"778
[e :U 353 ]
[; ;Phases.c: 779: LCDNokia_gotoXY(0,1);
"779
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 780: LCDNokia_sendString(active_Forward_Total);
"780
[e ( _LCDNokia_sendString (1 &U _active_Forward_Total ]
[; ;Phases.c: 781: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, TOTAL_FORW_ACTIVE_ENERGY));
"781
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 0 `ul ]
[; ;Phases.c: 782: LCDNokia_gotoXY(0,2);
"782
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 783: LCDNokia_sendString(active_Reverse_Total);
"783
[e ( _LCDNokia_sendString (1 &U _active_Reverse_Total ]
[; ;Phases.c: 784: LCDNokia_printValue(ATM_registers(ACTIVE_ENERGY_TYPE, TOTAL_REV_ACTIVE_ENERGY));
"784
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 0 . `E3190 4 `ul ]
[; ;Phases.c: 785: break;
"785
[e $U 349  ]
[; ;Phases.c: 786: default:
"786
[e :U 354 ]
[; ;Phases.c: 787: break;
"787
[e $U 349  ]
"788
}
[; ;Phases.c: 788: }
[e $U 349  ]
"754
[e :U 350 ]
[e [\ F3612 , $ -> -> 0 `i `uc 351
 , $ -> -> 1 `i `uc 352
 , $ -> -> 2 `i `uc 353
 354 ]
"788
[e :U 349 ]
[; ;Phases.c: 790: return (currentEnergy1);
"790
[e ) F3630 ]
[e $UE 344  ]
[; ;Phases.c: 791: }
"791
[e :UE 344 ]
}
"793
[v _reactiveEnergy `(S290 ~T0 @X0 1 ef1`S290 ]
"794
{
[; ;Phases.c: 793: PhaseEnergy_Type reactiveEnergy(PhaseEnergy_Type data)
[; ;Phases.c: 794: {
[e :U _reactiveEnergy ]
"793
[v _data `S290 ~T0 @X0 1 r1 ]
"794
[f ]
"795
[v F3632 `uc ~T0 @X0 1 s counter ]
[i F3632
-> -> 0 `i `uc
]
"796
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 795: static uint8_t counter = 0;
[; ;Phases.c: 796: const uint8_t maxScreens = 3;
[e = _maxScreens -> -> 3 `i `uc ]
[v F3635 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3635
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"797
[v _reactive_Forward1 `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 797: const uint8_t reactive_Forward1[] = "PA Forw React: ";
[e = _reactive_Forward1 F3635 ]
[v F3637 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3637
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"798
[v _reactive_Forward2 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 798: const uint8_t reactive_Forward2[] = "PB Forw Reac: ";
[e = _reactive_Forward2 F3637 ]
[v F3639 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3639
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"799
[v _reactive_Forward3 `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 799: const uint8_t reactive_Forward3[] = "PC Forw React: ";
[e = _reactive_Forward3 F3639 ]
[v F3641 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3641
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"801
[v _reactive_Reverse1 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 801: const uint8_t reactive_Reverse1[] = "PA Rev React: ";
[e = _reactive_Reverse1 F3641 ]
[v F3643 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3643
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"802
[v _reactive_Reverse2 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 802: const uint8_t reactive_Reverse2[] = "PB Rev React: ";
[e = _reactive_Reverse2 F3643 ]
[v F3645 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3645
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"803
[v _reactive_Reverse3 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 803: const uint8_t reactive_Reverse3[] = "PC Rev React: ";
[e = _reactive_Reverse3 F3645 ]
[v F3647 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3647
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"805
[v _reactive_Forward_Total `Cuc ~T0 @X0 19  a ]
[; ;Phases.c: 805: const uint8_t reactive_Forward_Total[] = "Total Forw React: ";
[e = _reactive_Forward_Total F3647 ]
[v F3649 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3649
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 97 `c
-> 99 `c
-> 116 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"806
[v _reactive_Reverse_Total `Cuc ~T0 @X0 18  a ]
[; ;Phases.c: 806: const uint8_t reactive_Reverse_Total[] = "Total Rev React: ";
[e = _reactive_Reverse_Total F3649 ]
"809
[v F3650 `S290 ~T0 @X0 1 s currentEnergy2 ]
[; ;Phases.c: 809: static PhaseEnergy_Type currentEnergy2;
[; ;Phases.c: 812: currentEnergy2.phaseState = REACTIVE_ENERGY;
"812
[e = . F3650 1 . `E3350 1 ]
[; ;Phases.c: 813: currentEnergy2.stateMain = data.stateMain;
"813
[e = . F3650 2 . _data 2 ]
[; ;Phases.c: 815: if(getButton1() == 1)
"815
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 356  ]
[; ;Phases.c: 816: {
"816
{
[; ;Phases.c: 817: currentEnergy2.phaseState = EXIT_ENERGY;
"817
[e = . F3650 1 . `E3350 5 ]
"818
}
[e :U 356 ]
[; ;Phases.c: 818: }
[; ;Phases.c: 819: if(getButton2() == 1)
"819
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 357  ]
[; ;Phases.c: 820: {
"820
{
[; ;Phases.c: 821: currentEnergy2.phaseState = APPARENT_ENERGY;
"821
[e = . F3650 1 . `E3350 2 ]
[; ;Phases.c: 822: LCDNokia_clear();
"822
[e ( _LCDNokia_clear ..  ]
"823
}
[e :U 357 ]
[; ;Phases.c: 823: }
[; ;Phases.c: 824: if(getButton3() == 1)
"824
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 358  ]
[; ;Phases.c: 825: {
"825
{
[; ;Phases.c: 826: counter++;
"826
[e ++ F3632 -> -> 1 `i `uc ]
[; ;Phases.c: 827: LCDNokia_clear();
"827
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 828: if(counter > maxScreens)
"828
[e $ ! > -> F3632 `i -> _maxScreens `i 359  ]
[; ;Phases.c: 829: {
"829
{
[; ;Phases.c: 830: counter = 0;
"830
[e = F3632 -> -> 0 `i `uc ]
"831
}
[e :U 359 ]
"832
}
[e :U 358 ]
[; ;Phases.c: 831: }
[; ;Phases.c: 832: }
[; ;Phases.c: 833: switch(counter)
"833
[e $U 361  ]
[; ;Phases.c: 834: {
"834
{
[; ;Phases.c: 835: case 0:
"835
[e :U 362 ]
[; ;Phases.c: 836: LCDNokia_gotoXY(0,1);
"836
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 837: LCDNokia_sendString(reactive_Forward1);
"837
[e ( _LCDNokia_sendString (1 &U _reactive_Forward1 ]
[; ;Phases.c: 838: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, PHASE_A_FORW_REACTIVE_ENERGY));
"838
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 9 `ul ]
[; ;Phases.c: 839: LCDNokia_gotoXY(0,2);
"839
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 840: LCDNokia_sendString(reactive_Forward2);
"840
[e ( _LCDNokia_sendString (1 &U _reactive_Forward2 ]
[; ;Phases.c: 841: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, PHASE_B_FORW_REACTIVE_ENERGY));
"841
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 10 `ul ]
[; ;Phases.c: 842: LCDNokia_gotoXY(0,3);
"842
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 843: LCDNokia_sendString(reactive_Forward3);
"843
[e ( _LCDNokia_sendString (1 &U _reactive_Forward3 ]
[; ;Phases.c: 844: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, PHASE_C_FORW_REACTIVE_ENERGY));
"844
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 11 `ul ]
[; ;Phases.c: 845: break;
"845
[e $U 360  ]
[; ;Phases.c: 846: case 1:
"846
[e :U 363 ]
[; ;Phases.c: 847: LCDNokia_gotoXY(0,1);
"847
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 848: LCDNokia_sendString(reactive_Reverse1);
"848
[e ( _LCDNokia_sendString (1 &U _reactive_Reverse1 ]
[; ;Phases.c: 849: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, PHASE_A_REV_REACTIVE_ENERGY));
"849
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 13 `ul ]
[; ;Phases.c: 850: LCDNokia_gotoXY(0,2);
"850
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 851: LCDNokia_sendString(reactive_Reverse2);
"851
[e ( _LCDNokia_sendString (1 &U _reactive_Reverse2 ]
[; ;Phases.c: 852: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, PHASE_B_REV_REACTIVE_ENERGY));
"852
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 14 `ul ]
[; ;Phases.c: 853: LCDNokia_gotoXY(0,3);
"853
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 854: LCDNokia_sendString(reactive_Reverse3);
"854
[e ( _LCDNokia_sendString (1 &U _reactive_Reverse3 ]
[; ;Phases.c: 855: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, PHASE_C_REV_REACTIVE_ENERGY));
"855
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 15 `ul ]
[; ;Phases.c: 856: break;
"856
[e $U 360  ]
[; ;Phases.c: 857: case 2:
"857
[e :U 364 ]
[; ;Phases.c: 858: LCDNokia_gotoXY(0,1);
"858
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 859: LCDNokia_sendString(reactive_Forward_Total);
"859
[e ( _LCDNokia_sendString (1 &U _reactive_Forward_Total ]
[; ;Phases.c: 860: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, TOTAL_FORW_REACTIVE_ENERGY));
"860
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 8 `ul ]
[; ;Phases.c: 861: LCDNokia_gotoXY(0,2);
"861
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 862: LCDNokia_sendString(reactive_Reverse_Total);
"862
[e ( _LCDNokia_sendString (1 &U _reactive_Reverse_Total ]
[; ;Phases.c: 863: LCDNokia_printValue(ATM_registers(REACTIVE_ENERGY_TYPE, TOTAL_REVERSE_REACTIVE_ENERGY));
"863
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 1 . `E3190 12 `ul ]
[; ;Phases.c: 864: break;
"864
[e $U 360  ]
[; ;Phases.c: 865: default:
"865
[e :U 365 ]
[; ;Phases.c: 866: break;
"866
[e $U 360  ]
"867
}
[; ;Phases.c: 867: }
[e $U 360  ]
"833
[e :U 361 ]
[e [\ F3632 , $ -> -> 0 `i `uc 362
 , $ -> -> 1 `i `uc 363
 , $ -> -> 2 `i `uc 364
 365 ]
"867
[e :U 360 ]
[; ;Phases.c: 869: return (currentEnergy2);
"869
[e ) F3650 ]
[e $UE 355  ]
[; ;Phases.c: 870: }
"870
[e :UE 355 ]
}
"872
[v _apparentEnergy `(S290 ~T0 @X0 1 ef1`S290 ]
"873
{
[; ;Phases.c: 872: PhaseEnergy_Type apparentEnergy(PhaseEnergy_Type data)
[; ;Phases.c: 873: {
[e :U _apparentEnergy ]
"872
[v _data `S290 ~T0 @X0 1 r1 ]
"873
[f ]
"874
[v F3652 `uc ~T0 @X0 1 s counter ]
[i F3652
-> -> 0 `i `uc
]
"875
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 874: static uint8_t counter = 0;
[; ;Phases.c: 875: const uint8_t maxScreens = 1;
[e = _maxScreens -> -> 1 `i `uc ]
[v F3655 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3655
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 65 `c
-> 112 `c
-> 112 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"876
[v _apparent_energyP1 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 876: const uint8_t apparent_energyP1[] = "PA App: ";
[e = _apparent_energyP1 F3655 ]
[v F3657 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3657
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 65 `c
-> 112 `c
-> 112 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"877
[v _apparent_energyP2 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 877: const uint8_t apparent_energyP2[] = "PB App: ";
[e = _apparent_energyP2 F3657 ]
[v F3659 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3659
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 65 `c
-> 112 `c
-> 112 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"878
[v _apparent_energyP3 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 878: const uint8_t apparent_energyP3[] = "PC App: ";
[e = _apparent_energyP3 F3659 ]
[v F3661 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3661
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 65 `c
-> 114 `c
-> 105 `c
-> 65 `c
-> 112 `c
-> 112 `c
-> 32 `c
-> 69 `c
-> 110 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"880
[v _apparentAri_energyTotal `Cuc ~T0 @X0 18  a ]
[; ;Phases.c: 880: const uint8_t apparentAri_energyTotal[] = "Total AriApp En: ";
[e = _apparentAri_energyTotal F3661 ]
[v F3663 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3663
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 86 `c
-> 101 `c
-> 99 `c
-> 65 `c
-> 112 `c
-> 112 `c
-> 32 `c
-> 69 `c
-> 110 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"881
[v _apparentVec_energyTotal `Cuc ~T0 @X0 18  a ]
[; ;Phases.c: 881: const uint8_t apparentVec_energyTotal[] = "Total VecApp En: ";
[e = _apparentVec_energyTotal F3663 ]
"884
[v F3664 `S290 ~T0 @X0 1 s currentEnergy3 ]
[; ;Phases.c: 884: static PhaseEnergy_Type currentEnergy3;
[; ;Phases.c: 887: currentEnergy3.phaseState = APPARENT_ENERGY;
"887
[e = . F3664 1 . `E3350 2 ]
[; ;Phases.c: 888: currentEnergy3.stateMain = data.stateMain;
"888
[e = . F3664 2 . _data 2 ]
[; ;Phases.c: 890: if(getButton1() == 1)
"890
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 367  ]
[; ;Phases.c: 891: {
"891
{
[; ;Phases.c: 892: currentEnergy3.phaseState = EXIT_ENERGY;
"892
[e = . F3664 1 . `E3350 5 ]
"893
}
[e :U 367 ]
[; ;Phases.c: 893: }
[; ;Phases.c: 894: if(getButton2() == 1)
"894
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 368  ]
[; ;Phases.c: 895: {
"895
{
[; ;Phases.c: 896: currentEnergy3.phaseState = FUNDAMENTAL_ENERGY;
"896
[e = . F3664 1 . `E3350 3 ]
[; ;Phases.c: 897: LCDNokia_clear();
"897
[e ( _LCDNokia_clear ..  ]
"898
}
[e :U 368 ]
[; ;Phases.c: 898: }
[; ;Phases.c: 899: if(getButton3() == 1)
"899
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 369  ]
[; ;Phases.c: 900: {
"900
{
[; ;Phases.c: 901: counter++;
"901
[e ++ F3652 -> -> 1 `i `uc ]
[; ;Phases.c: 902: LCDNokia_clear();
"902
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 903: if(counter > maxScreens)
"903
[e $ ! > -> F3652 `i -> _maxScreens `i 370  ]
[; ;Phases.c: 904: {
"904
{
[; ;Phases.c: 905: counter = 0;
"905
[e = F3652 -> -> 0 `i `uc ]
"906
}
[e :U 370 ]
"907
}
[e :U 369 ]
[; ;Phases.c: 906: }
[; ;Phases.c: 907: }
[; ;Phases.c: 908: switch(counter)
"908
[e $U 372  ]
[; ;Phases.c: 909: {
"909
{
[; ;Phases.c: 910: case 0:
"910
[e :U 373 ]
[; ;Phases.c: 911: LCDNokia_gotoXY(0,1);
"911
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 912: LCDNokia_sendString(apparent_energyP1);
"912
[e ( _LCDNokia_sendString (1 &U _apparent_energyP1 ]
[; ;Phases.c: 913: LCDNokia_printValue(ATM_registers(APPARENT_ENERGY_TYPE, PHASE_A_APPARENT_ENERGY));
"913
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 2 . `E3190 17 `ul ]
[; ;Phases.c: 914: LCDNokia_gotoXY(0,2);
"914
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 915: LCDNokia_sendString(apparent_energyP2);
"915
[e ( _LCDNokia_sendString (1 &U _apparent_energyP2 ]
[; ;Phases.c: 916: LCDNokia_printValue(ATM_registers(APPARENT_ENERGY_TYPE, PHASE_B_APPARENT_ENERGY));
"916
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 2 . `E3190 18 `ul ]
[; ;Phases.c: 917: LCDNokia_gotoXY(0,3);
"917
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 918: LCDNokia_sendString(apparent_energyP3);
"918
[e ( _LCDNokia_sendString (1 &U _apparent_energyP3 ]
[; ;Phases.c: 919: LCDNokia_printValue(ATM_registers(APPARENT_ENERGY_TYPE, PHASE_C_APPARENT_ENERGY));
"919
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 2 . `E3190 19 `ul ]
[; ;Phases.c: 920: break;
"920
[e $U 371  ]
[; ;Phases.c: 921: case 1:
"921
[e :U 374 ]
[; ;Phases.c: 922: LCDNokia_gotoXY(0,1);
"922
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 923: LCDNokia_sendString(apparentAri_energyTotal);
"923
[e ( _LCDNokia_sendString (1 &U _apparentAri_energyTotal ]
[; ;Phases.c: 924: LCDNokia_printValue(ATM_registers(APPARENT_ENERGY_TYPE, TOTAL_ARIT_APPARENT_ENERGY));
"924
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 2 . `E3190 16 `ul ]
[; ;Phases.c: 925: LCDNokia_gotoXY(0,2);
"925
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 926: LCDNokia_sendString(apparentVec_energyTotal);
"926
[e ( _LCDNokia_sendString (1 &U _apparentVec_energyTotal ]
[; ;Phases.c: 927: LCDNokia_printValue(ATM_registers(APPARENT_ENERGY_TYPE, TOTAL_VECT_APPARENT_ENERGY));
"927
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 2 . `E3190 20 `ul ]
[; ;Phases.c: 928: break;
"928
[e $U 371  ]
[; ;Phases.c: 929: default:
"929
[e :U 375 ]
[; ;Phases.c: 930: break;
"930
[e $U 371  ]
"931
}
[; ;Phases.c: 931: }
[e $U 371  ]
"908
[e :U 372 ]
[e [\ F3652 , $ -> -> 0 `i `uc 373
 , $ -> -> 1 `i `uc 374
 375 ]
"931
[e :U 371 ]
[; ;Phases.c: 933: return (currentEnergy3);
"933
[e ) F3664 ]
[e $UE 366  ]
[; ;Phases.c: 934: }
"934
[e :UE 366 ]
}
"936
[v _fundamentalEnergy `(S290 ~T0 @X0 1 ef1`S290 ]
"937
{
[; ;Phases.c: 936: PhaseEnergy_Type fundamentalEnergy(PhaseEnergy_Type data)
[; ;Phases.c: 937: {
[e :U _fundamentalEnergy ]
"936
[v _data `S290 ~T0 @X0 1 r1 ]
"937
[f ]
"938
[v F3666 `uc ~T0 @X0 1 s counter ]
[i F3666
-> -> 0 `i `uc
]
"939
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 938: static uint8_t counter = 0;
[; ;Phases.c: 939: const uint8_t maxScreens = 2;
[e = _maxScreens -> -> 2 `i `uc ]
[v F3669 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3669
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"940
[v _fund_ForwardP1 `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 940: const uint8_t fund_ForwardP1[] = "PA ForwFund E: ";
[e = _fund_ForwardP1 F3669 ]
[v F3671 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3671
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"941
[v _fund_ForwardP2 `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 941: const uint8_t fund_ForwardP2[] = "PB ForwFund E: ";
[e = _fund_ForwardP2 F3671 ]
[v F3673 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3673
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"942
[v _fund_ForwardP3 `Cuc ~T0 @X0 16  a ]
[; ;Phases.c: 942: const uint8_t fund_ForwardP3[] = "PC ForwFund E: ";
[e = _fund_ForwardP3 F3673 ]
[v F3675 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3675
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"944
[v _fund_ReverseP1 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 944: const uint8_t fund_ReverseP1[] = "PA RevFund E: ";
[e = _fund_ReverseP1 F3675 ]
[v F3677 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3677
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"945
[v _fund_ReverseP2 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 945: const uint8_t fund_ReverseP2[] = "PB RevFund E: ";
[e = _fund_ReverseP2 F3677 ]
[v F3679 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3679
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"946
[v _fund_ReverseP3 `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 946: const uint8_t fund_ReverseP3[] = "PC RevFund E: ";
[e = _fund_ReverseP3 F3679 ]
[v F3681 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3681
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"948
[v _fund_ForwardTotal `Cuc ~T0 @X0 19  a ]
[; ;Phases.c: 948: const uint8_t fund_ForwardTotal[] = "Total ForwFund E: ";
[e = _fund_ForwardTotal F3681 ]
[v F3683 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3683
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 70 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 32 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"949
[v _fund_ReverseTotal `Cuc ~T0 @X0 18  a ]
[; ;Phases.c: 949: const uint8_t fund_ReverseTotal[] = "Total RevFund E: ";
[e = _fund_ReverseTotal F3683 ]
"952
[v F3684 `S290 ~T0 @X0 1 s currentEnergy4 ]
[; ;Phases.c: 952: static PhaseEnergy_Type currentEnergy4;
[; ;Phases.c: 955: currentEnergy4.phaseState = FUNDAMENTAL_ENERGY;
"955
[e = . F3684 1 . `E3350 3 ]
[; ;Phases.c: 956: currentEnergy4.stateMain = data.stateMain;
"956
[e = . F3684 2 . _data 2 ]
[; ;Phases.c: 958: if(getButton1() == 1)
"958
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 377  ]
[; ;Phases.c: 959: {
"959
{
[; ;Phases.c: 960: currentEnergy4.phaseState = EXIT_ENERGY;
"960
[e = . F3684 1 . `E3350 5 ]
"961
}
[e :U 377 ]
[; ;Phases.c: 961: }
[; ;Phases.c: 962: if(getButton2() == 1)
"962
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 378  ]
[; ;Phases.c: 963: {
"963
{
[; ;Phases.c: 964: currentEnergy4.phaseState = HARMONIC_ENERGY;
"964
[e = . F3684 1 . `E3350 4 ]
[; ;Phases.c: 965: LCDNokia_clear();
"965
[e ( _LCDNokia_clear ..  ]
"966
}
[e :U 378 ]
[; ;Phases.c: 966: }
[; ;Phases.c: 967: if(getButton3() == 1)
"967
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 379  ]
[; ;Phases.c: 968: {
"968
{
[; ;Phases.c: 969: counter++;
"969
[e ++ F3666 -> -> 1 `i `uc ]
[; ;Phases.c: 970: LCDNokia_clear();
"970
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 971: if(counter > maxScreens)
"971
[e $ ! > -> F3666 `i -> _maxScreens `i 380  ]
[; ;Phases.c: 972: {
"972
{
[; ;Phases.c: 973: counter = 0;
"973
[e = F3666 -> -> 0 `i `uc ]
"974
}
[e :U 380 ]
"975
}
[e :U 379 ]
[; ;Phases.c: 974: }
[; ;Phases.c: 975: }
[; ;Phases.c: 976: switch(counter)
"976
[e $U 382  ]
[; ;Phases.c: 977: {
"977
{
[; ;Phases.c: 978: case 0:
"978
[e :U 383 ]
[; ;Phases.c: 979: LCDNokia_gotoXY(0,1);
"979
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 980: LCDNokia_sendString(fund_ForwardP1);
"980
[e ( _LCDNokia_sendString (1 &U _fund_ForwardP1 ]
[; ;Phases.c: 981: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, PHASE_A_FORW_ACTIVE_FUND_ENERGY));
"981
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 22 `ul ]
[; ;Phases.c: 982: LCDNokia_gotoXY(0,2);
"982
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 983: LCDNokia_sendString(fund_ForwardP2);
"983
[e ( _LCDNokia_sendString (1 &U _fund_ForwardP2 ]
[; ;Phases.c: 984: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, PHASE_B_FORW_ACTIVE_FUND_ENERGY));
"984
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 23 `ul ]
[; ;Phases.c: 985: LCDNokia_gotoXY(0,3);
"985
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 986: LCDNokia_sendString(fund_ForwardP3);
"986
[e ( _LCDNokia_sendString (1 &U _fund_ForwardP3 ]
[; ;Phases.c: 987: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, PHASE_C_FORW_ACTIVE_FUND_ENERGY));
"987
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 24 `ul ]
[; ;Phases.c: 988: break;
"988
[e $U 381  ]
[; ;Phases.c: 989: case 1:
"989
[e :U 384 ]
[; ;Phases.c: 990: LCDNokia_gotoXY(0,1);
"990
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 991: LCDNokia_sendString(fund_ReverseP1);
"991
[e ( _LCDNokia_sendString (1 &U _fund_ReverseP1 ]
[; ;Phases.c: 992: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, PHASE_A_REV_ACTIVE_FUND_ENERGY));
"992
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 26 `ul ]
[; ;Phases.c: 993: LCDNokia_gotoXY(0,2);
"993
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 994: LCDNokia_sendString(fund_ReverseP2);
"994
[e ( _LCDNokia_sendString (1 &U _fund_ReverseP2 ]
[; ;Phases.c: 995: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, PHASE_B_REV_ACTIVE_FUND_ENERGY));
"995
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 27 `ul ]
[; ;Phases.c: 996: LCDNokia_gotoXY(0,3);
"996
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 997: LCDNokia_sendString(fund_ReverseP3);
"997
[e ( _LCDNokia_sendString (1 &U _fund_ReverseP3 ]
[; ;Phases.c: 998: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, PHASE_C_REV_ACTIVE_FUND_ENERGY));
"998
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 28 `ul ]
[; ;Phases.c: 999: break;
"999
[e $U 381  ]
[; ;Phases.c: 1000: case 2:
"1000
[e :U 385 ]
[; ;Phases.c: 1001: LCDNokia_gotoXY(0,1);
"1001
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1002: LCDNokia_sendString(fund_ForwardTotal);
"1002
[e ( _LCDNokia_sendString (1 &U _fund_ForwardTotal ]
[; ;Phases.c: 1003: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, TOTAL_FORW_ACTIVE_FUND_ENERGY));
"1003
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 21 `ul ]
[; ;Phases.c: 1004: LCDNokia_gotoXY(0,2);
"1004
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1005: LCDNokia_sendString(fund_ReverseTotal);
"1005
[e ( _LCDNokia_sendString (1 &U _fund_ReverseTotal ]
[; ;Phases.c: 1006: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_ENERGY_TYPE, TOTAL_REV_ACTIVE_FUND_ENERGY));
"1006
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 3 . `E3190 25 `ul ]
[; ;Phases.c: 1007: break;
"1007
[e $U 381  ]
[; ;Phases.c: 1008: default:
"1008
[e :U 386 ]
[; ;Phases.c: 1009: break;
"1009
[e $U 381  ]
"1010
}
[; ;Phases.c: 1010: }
[e $U 381  ]
"976
[e :U 382 ]
[e [\ F3666 , $ -> -> 0 `i `uc 383
 , $ -> -> 1 `i `uc 384
 , $ -> -> 2 `i `uc 385
 386 ]
"1010
[e :U 381 ]
[; ;Phases.c: 1012: return (currentEnergy4);
"1012
[e ) F3684 ]
[e $UE 376  ]
[; ;Phases.c: 1013: }
"1013
[e :UE 376 ]
}
"1015
[v _harmonicEnergy `(S290 ~T0 @X0 1 ef1`S290 ]
"1016
{
[; ;Phases.c: 1015: PhaseEnergy_Type harmonicEnergy(PhaseEnergy_Type data)
[; ;Phases.c: 1016: {
[e :U _harmonicEnergy ]
"1015
[v _data `S290 ~T0 @X0 1 r1 ]
"1016
[f ]
"1017
[v F3686 `uc ~T0 @X0 1 s counter ]
[i F3686
-> -> 0 `i `uc
]
"1018
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 1017: static uint8_t counter = 0;
[; ;Phases.c: 1018: const uint8_t maxScreens = 2;
[e = _maxScreens -> -> 2 `i `uc ]
[v F3689 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3689
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1019
[v _harmonic_ForwardP1 `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 1019: const uint8_t harmonic_ForwardP1[] = "PA ForwHE: ";
[e = _harmonic_ForwardP1 F3689 ]
[v F3691 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3691
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1020
[v _harmonic_ForwardP2 `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 1020: const uint8_t harmonic_ForwardP2[] = "PB ForwHE: ";
[e = _harmonic_ForwardP2 F3691 ]
[v F3693 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3693
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1021
[v _harmonic_ForwardP3 `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 1021: const uint8_t harmonic_ForwardP3[] = "PC ForwHE: ";
[e = _harmonic_ForwardP3 F3693 ]
[v F3695 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3695
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1023
[v _harmonic_ReverseP1 `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1023: const uint8_t harmonic_ReverseP1[] = "PA RevHE: ";
[e = _harmonic_ReverseP1 F3695 ]
[v F3697 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3697
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1024
[v _harmonic_ReverseP2 `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1024: const uint8_t harmonic_ReverseP2[] = "PB RevHE: ";
[e = _harmonic_ReverseP2 F3697 ]
[v F3699 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3699
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1025
[v _harmonic_ReverseP3 `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1025: const uint8_t harmonic_ReverseP3[] = "PC RevHE: ";
[e = _harmonic_ReverseP3 F3699 ]
[v F3701 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3701
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 70 `c
-> 111 `c
-> 114 `c
-> 119 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1027
[v _harmonic_ForwardTotal `Cuc ~T0 @X0 15  a ]
[; ;Phases.c: 1027: const uint8_t harmonic_ForwardTotal[] = "Total ForwHE: ";
[e = _harmonic_ForwardTotal F3701 ]
[v F3703 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3703
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 82 `c
-> 101 `c
-> 118 `c
-> 72 `c
-> 69 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1028
[v _harmonic_ReverseTotal `Cuc ~T0 @X0 14  a ]
[; ;Phases.c: 1028: const uint8_t harmonic_ReverseTotal[] = "Total RevHE: ";
[e = _harmonic_ReverseTotal F3703 ]
"1031
[v F3704 `S290 ~T0 @X0 1 s currentEnergy5 ]
[; ;Phases.c: 1031: static PhaseEnergy_Type currentEnergy5;
[; ;Phases.c: 1034: currentEnergy5.phaseState = HARMONIC_ENERGY;
"1034
[e = . F3704 1 . `E3350 4 ]
[; ;Phases.c: 1035: currentEnergy5.stateMain = data.stateMain;
"1035
[e = . F3704 2 . _data 2 ]
[; ;Phases.c: 1037: if(getButton1() == 1)
"1037
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 388  ]
[; ;Phases.c: 1038: {
"1038
{
[; ;Phases.c: 1039: currentEnergy5.phaseState = EXIT_ENERGY;
"1039
[e = . F3704 1 . `E3350 5 ]
"1040
}
[e :U 388 ]
[; ;Phases.c: 1040: }
[; ;Phases.c: 1041: if(getButton2() == 1)
"1041
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 389  ]
[; ;Phases.c: 1042: {
"1042
{
[; ;Phases.c: 1043: currentEnergy5.phaseState = EXIT_ENERGY;
"1043
[e = . F3704 1 . `E3350 5 ]
"1044
}
[e :U 389 ]
[; ;Phases.c: 1044: }
[; ;Phases.c: 1045: if(getButton3() == 1)
"1045
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 390  ]
[; ;Phases.c: 1046: {
"1046
{
[; ;Phases.c: 1047: counter++;
"1047
[e ++ F3686 -> -> 1 `i `uc ]
[; ;Phases.c: 1048: LCDNokia_clear();
"1048
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1049: if(counter > maxScreens)
"1049
[e $ ! > -> F3686 `i -> _maxScreens `i 391  ]
[; ;Phases.c: 1050: {
"1050
{
[; ;Phases.c: 1051: counter = 0;
"1051
[e = F3686 -> -> 0 `i `uc ]
"1052
}
[e :U 391 ]
"1053
}
[e :U 390 ]
[; ;Phases.c: 1052: }
[; ;Phases.c: 1053: }
[; ;Phases.c: 1054: switch(counter)
"1054
[e $U 393  ]
[; ;Phases.c: 1055: {
"1055
{
[; ;Phases.c: 1056: case 0:
"1056
[e :U 394 ]
[; ;Phases.c: 1057: LCDNokia_gotoXY(0,1);
"1057
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1058: LCDNokia_sendString(harmonic_ForwardP1);
"1058
[e ( _LCDNokia_sendString (1 &U _harmonic_ForwardP1 ]
[; ;Phases.c: 1059: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, PHASE_A_FORW_ACTIVE_HARM_ENERGY));
"1059
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 30 `ul ]
[; ;Phases.c: 1060: LCDNokia_gotoXY(0,2);
"1060
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1061: LCDNokia_sendString(harmonic_ForwardP2);
"1061
[e ( _LCDNokia_sendString (1 &U _harmonic_ForwardP2 ]
[; ;Phases.c: 1062: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, PHASE_B_FORW_ACTIVE_HARM_ENERGY));
"1062
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 31 `ul ]
[; ;Phases.c: 1063: LCDNokia_gotoXY(0,3);
"1063
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1064: LCDNokia_sendString(harmonic_ForwardP3);
"1064
[e ( _LCDNokia_sendString (1 &U _harmonic_ForwardP3 ]
[; ;Phases.c: 1065: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, PHASE_C_FORW_ACTIVE_HARM_ENERGY));
"1065
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 32 `ul ]
[; ;Phases.c: 1066: break;
"1066
[e $U 392  ]
[; ;Phases.c: 1067: case 1:
"1067
[e :U 395 ]
[; ;Phases.c: 1068: LCDNokia_gotoXY(0,1);
"1068
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1069: LCDNokia_sendString(harmonic_ReverseP1);
"1069
[e ( _LCDNokia_sendString (1 &U _harmonic_ReverseP1 ]
[; ;Phases.c: 1070: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, PHASE_A_REV_ACTIVE_HARM_ENERGY));
"1070
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 34 `ul ]
[; ;Phases.c: 1071: LCDNokia_gotoXY(0,2);
"1071
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1072: LCDNokia_sendString(harmonic_ReverseP2);
"1072
[e ( _LCDNokia_sendString (1 &U _harmonic_ReverseP2 ]
[; ;Phases.c: 1073: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, PHASE_B_REV_ACTIVE_HARM_ENERGY));
"1073
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 35 `ul ]
[; ;Phases.c: 1074: LCDNokia_gotoXY(0,3);
"1074
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1075: LCDNokia_sendString(harmonic_ReverseP3);
"1075
[e ( _LCDNokia_sendString (1 &U _harmonic_ReverseP3 ]
[; ;Phases.c: 1076: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, PHASE_C_REV_ACTIVE_HARM_ENERGY));
"1076
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 36 `ul ]
[; ;Phases.c: 1077: break;
"1077
[e $U 392  ]
[; ;Phases.c: 1078: case 2:
"1078
[e :U 396 ]
[; ;Phases.c: 1079: LCDNokia_gotoXY(0,1);
"1079
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1080: LCDNokia_sendString(harmonic_ForwardTotal);
"1080
[e ( _LCDNokia_sendString (1 &U _harmonic_ForwardTotal ]
[; ;Phases.c: 1081: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, TOTAL_FORW_ACTIVE_HARM_ENERGY));
"1081
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 29 `ul ]
[; ;Phases.c: 1082: LCDNokia_gotoXY(0,2);
"1082
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1083: LCDNokia_sendString(harmonic_ReverseTotal);
"1083
[e ( _LCDNokia_sendString (1 &U _harmonic_ReverseTotal ]
[; ;Phases.c: 1084: LCDNokia_printValue(ATM_registers(HARMONIC_ENERGY_TYPE, TOTAL_REV_ACTIVE_HARM_ENERGY));
"1084
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 4 . `E3190 33 `ul ]
[; ;Phases.c: 1085: break;
"1085
[e $U 392  ]
[; ;Phases.c: 1086: default:
"1086
[e :U 397 ]
[; ;Phases.c: 1087: break;
"1087
[e $U 392  ]
"1088
}
[; ;Phases.c: 1088: }
[e $U 392  ]
"1054
[e :U 393 ]
[e [\ F3686 , $ -> -> 0 `i `uc 394
 , $ -> -> 1 `i `uc 395
 , $ -> -> 2 `i `uc 396
 397 ]
"1088
[e :U 392 ]
[; ;Phases.c: 1089: return (currentEnergy5);
"1089
[e ) F3704 ]
[e $UE 387  ]
[; ;Phases.c: 1090: }
"1090
[e :UE 387 ]
}
"1092
[v _exitEnergy `(S290 ~T0 @X0 1 ef1`S290 ]
"1093
{
[; ;Phases.c: 1092: PhaseEnergy_Type exitEnergy(PhaseEnergy_Type data)
[; ;Phases.c: 1093: {
[e :U _exitEnergy ]
"1092
[v _data `S290 ~T0 @X0 1 r1 ]
"1093
[f ]
"1095
[v F3706 `S290 ~T0 @X0 1 s currentEnergy6 ]
[; ;Phases.c: 1095: static PhaseEnergy_Type currentEnergy6;
[; ;Phases.c: 1097: LCDNokia_clear();
"1097
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1099: currentEnergy6.phaseState = VIEW_MENU;
"1099
[e = . F3706 1 . `E3332 2 ]
[; ;Phases.c: 1100: currentEnergy6.stateMain = MAIN_MENU;
"1100
[e = . F3706 2 . `E3295 0 ]
[; ;Phases.c: 1102: return (currentEnergy6);
"1102
[e ) F3706 ]
[e $UE 398  ]
[; ;Phases.c: 1103: }
"1103
[e :UE 398 ]
}
"1105
[v _typesPower1 `(S292 ~T0 @X0 1 ef1`S292 ]
"1106
{
[; ;Phases.c: 1105: PhasePower1_Type typesPower1(PhasePower1_Type data)
[; ;Phases.c: 1106: {
[e :U _typesPower1 ]
"1105
[v _data `S292 ~T0 @X0 1 r1 ]
"1106
[f ]
"1107
[v F3708 `uc ~T0 @X0 1 s counter ]
[i F3708
-> -> 0 `i `uc
]
"1108
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 1107: static uint8_t counter = 0;
[; ;Phases.c: 1108: const uint8_t maxScreens = 2;
[e = _maxScreens -> -> 2 `i `uc ]
[v F3711 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3711
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1109
[v _active_powerP1 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1109: const uint8_t active_powerP1[] = "PA APow: ";
[e = _active_powerP1 F3711 ]
[v F3713 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3713
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1110
[v _active_powerP2 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1110: const uint8_t active_powerP2[] = "PB APow: ";
[e = _active_powerP2 F3713 ]
[v F3715 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3715
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1111
[v _active_powerP3 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1111: const uint8_t active_powerP3[] = "PC APow: ";;
[e = _active_powerP3 F3715 ]
[v F3717 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3717
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 82 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1113
[v _reactive_powerP1 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1113: const uint8_t reactive_powerP1[] = "PA RPow: ";
[e = _reactive_powerP1 F3717 ]
[v F3719 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3719
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 82 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1114
[v _reactive_powerP2 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1114: const uint8_t reactive_powerP2[] = "PB RPow: ";
[e = _reactive_powerP2 F3719 ]
[v F3721 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3721
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 82 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1115
[v _reactive_powerP3 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1115: const uint8_t reactive_powerP3[] = "PC RPow: ";
[e = _reactive_powerP3 F3721 ]
[v F3723 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3723
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1117
[v _apparent_powerP1 `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1117: const uint8_t apparent_powerP1[] = "PA APPow: ";
[e = _apparent_powerP1 F3723 ]
[v F3725 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3725
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1118
[v _apparent_powerP2 `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1118: const uint8_t apparent_powerP2[] = "PB APPow: ";
[e = _apparent_powerP2 F3725 ]
[v F3727 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3727
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1119
[v _apparent_powerP3 `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1119: const uint8_t apparent_powerP3[] = "PC APPow: ";
[e = _apparent_powerP3 F3727 ]
"1122
[v F3728 `S292 ~T0 @X0 1 s currentPower1_1 ]
[; ;Phases.c: 1122: static PhasePower1_Type currentPower1_1;
[; ;Phases.c: 1125: currentPower1_1.phaseState = TYPES_POWER1;
"1125
[e = . F3728 1 . `E3371 0 ]
[; ;Phases.c: 1126: currentPower1_1.stateMain = data.stateMain;
"1126
[e = . F3728 2 . _data 2 ]
[; ;Phases.c: 1128: if(getButton1() == 1)
"1128
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 400  ]
[; ;Phases.c: 1129: {
"1129
{
[; ;Phases.c: 1130: currentPower1_1.phaseState = EXIT_POWER1;
"1130
[e = . F3728 1 . `E3371 2 ]
"1131
}
[e :U 400 ]
[; ;Phases.c: 1131: }
[; ;Phases.c: 1132: if(getButton2() == 1)
"1132
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 401  ]
[; ;Phases.c: 1133: {
"1133
{
[; ;Phases.c: 1134: currentPower1_1.phaseState = PHASES_POWER1;
"1134
[e = . F3728 1 . `E3371 1 ]
[; ;Phases.c: 1135: LCDNokia_clear();
"1135
[e ( _LCDNokia_clear ..  ]
"1136
}
[e :U 401 ]
[; ;Phases.c: 1136: }
[; ;Phases.c: 1137: if(getButton3() == 1)
"1137
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 402  ]
[; ;Phases.c: 1138: {
"1138
{
[; ;Phases.c: 1139: counter++;
"1139
[e ++ F3708 -> -> 1 `i `uc ]
[; ;Phases.c: 1140: LCDNokia_clear();
"1140
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1141: if(counter > maxScreens)
"1141
[e $ ! > -> F3708 `i -> _maxScreens `i 403  ]
[; ;Phases.c: 1142: {
"1142
{
[; ;Phases.c: 1143: counter = 0;
"1143
[e = F3708 -> -> 0 `i `uc ]
"1144
}
[e :U 403 ]
"1145
}
[e :U 402 ]
[; ;Phases.c: 1144: }
[; ;Phases.c: 1145: }
[; ;Phases.c: 1146: switch(counter)
"1146
[e $U 405  ]
[; ;Phases.c: 1147: {
"1147
{
[; ;Phases.c: 1148: case 0:
"1148
[e :U 406 ]
[; ;Phases.c: 1149: LCDNokia_gotoXY(0,1);
"1149
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1150: LCDNokia_sendString(active_powerP1);
"1150
[e ( _LCDNokia_sendString (1 &U _active_powerP1 ]
[; ;Phases.c: 1151: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_A_ACTIVE_POWER));
"1151
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 38 `ul ]
[; ;Phases.c: 1152: LCDNokia_gotoXY(0,2);
"1152
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1153: LCDNokia_sendString(active_powerP2);
"1153
[e ( _LCDNokia_sendString (1 &U _active_powerP2 ]
[; ;Phases.c: 1154: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_B_ACTIVE_POWER));
"1154
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 39 `ul ]
[; ;Phases.c: 1155: LCDNokia_gotoXY(0,3);
"1155
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1156: LCDNokia_sendString(active_powerP3);
"1156
[e ( _LCDNokia_sendString (1 &U _active_powerP3 ]
[; ;Phases.c: 1157: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_C_ACTIVE_POWER));
"1157
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 40 `ul ]
[; ;Phases.c: 1158: break;
"1158
[e $U 404  ]
[; ;Phases.c: 1159: case 1:
"1159
[e :U 407 ]
[; ;Phases.c: 1160: LCDNokia_gotoXY(0,1);
"1160
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1161: LCDNokia_sendString(reactive_powerP1);
"1161
[e ( _LCDNokia_sendString (1 &U _reactive_powerP1 ]
[; ;Phases.c: 1162: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_A_REACTIVE_POWER));
"1162
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 42 `ul ]
[; ;Phases.c: 1163: LCDNokia_gotoXY(0,2);
"1163
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1164: LCDNokia_sendString(reactive_powerP2);
"1164
[e ( _LCDNokia_sendString (1 &U _reactive_powerP2 ]
[; ;Phases.c: 1165: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_B_REACTIVE_POWER));
"1165
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 43 `ul ]
[; ;Phases.c: 1166: LCDNokia_gotoXY(0,3);
"1166
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1167: LCDNokia_sendString(reactive_powerP3);
"1167
[e ( _LCDNokia_sendString (1 &U _reactive_powerP3 ]
[; ;Phases.c: 1168: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_C_REACTIVE_POWER));
"1168
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 44 `ul ]
[; ;Phases.c: 1169: break;
"1169
[e $U 404  ]
[; ;Phases.c: 1170: case 2:
"1170
[e :U 408 ]
[; ;Phases.c: 1171: LCDNokia_gotoXY(0,1);
"1171
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1172: LCDNokia_sendString(apparent_powerP1);
"1172
[e ( _LCDNokia_sendString (1 &U _apparent_powerP1 ]
[; ;Phases.c: 1173: LCDNokia_printValue(ATM_registers(APPARENT_POWER_TYPE, PHASE_A_APPARENT_POWER));
"1173
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 7 . `E3190 46 `ul ]
[; ;Phases.c: 1174: LCDNokia_gotoXY(0,2);
"1174
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1175: LCDNokia_sendString(apparent_powerP2);
"1175
[e ( _LCDNokia_sendString (1 &U _apparent_powerP2 ]
[; ;Phases.c: 1176: LCDNokia_printValue(ATM_registers(APPARENT_POWER_TYPE, PHASE_B_APPARENT_POWER));
"1176
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 7 . `E3190 47 `ul ]
[; ;Phases.c: 1177: LCDNokia_gotoXY(0,3);
"1177
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1178: LCDNokia_sendString(apparent_powerP3);
"1178
[e ( _LCDNokia_sendString (1 &U _apparent_powerP3 ]
[; ;Phases.c: 1179: LCDNokia_printValue(ATM_registers(APPARENT_POWER_TYPE, PHASE_C_APPARENT_POWER));
"1179
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 7 . `E3190 48 `ul ]
[; ;Phases.c: 1180: break;
"1180
[e $U 404  ]
[; ;Phases.c: 1181: default:
"1181
[e :U 409 ]
[; ;Phases.c: 1182: break;
"1182
[e $U 404  ]
"1183
}
[; ;Phases.c: 1183: }
[e $U 404  ]
"1146
[e :U 405 ]
[e [\ F3708 , $ -> -> 0 `i `uc 406
 , $ -> -> 1 `i `uc 407
 , $ -> -> 2 `i `uc 408
 409 ]
"1183
[e :U 404 ]
[; ;Phases.c: 1184: return (currentPower1_1);
"1184
[e ) F3728 ]
[e $UE 399  ]
[; ;Phases.c: 1185: }
"1185
[e :UE 399 ]
}
"1187
[v _phPower1 `(S292 ~T0 @X0 1 ef1`S292 ]
"1188
{
[; ;Phases.c: 1187: PhasePower1_Type phPower1(PhasePower1_Type data)
[; ;Phases.c: 1188: {
[e :U _phPower1 ]
"1187
[v _data `S292 ~T0 @X0 1 r1 ]
"1188
[f ]
[v F3731 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3731
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1189
[v _total_active_power `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 1189: const uint8_t total_active_power[] = "Total APow: ";
[e = _total_active_power F3731 ]
[v F3733 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3733
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 82 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1190
[v _total_reactive_power `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 1190: const uint8_t total_reactive_power[] = "Total RPow: ";
[e = _total_reactive_power F3733 ]
[v F3735 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3735
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 65 `c
-> 80 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1191
[v _total_apparent_power `Cuc ~T0 @X0 14  a ]
[; ;Phases.c: 1191: const uint8_t total_apparent_power[] = "Total APPow: ";
[e = _total_apparent_power F3735 ]
"1194
[v F3736 `S292 ~T0 @X0 1 s currentPower1_2 ]
[; ;Phases.c: 1194: static PhasePower1_Type currentPower1_2;
[; ;Phases.c: 1197: currentPower1_2.phaseState = PHASES_POWER1;
"1197
[e = . F3736 1 . `E3371 1 ]
[; ;Phases.c: 1198: currentPower1_2.stateMain = data.stateMain;
"1198
[e = . F3736 2 . _data 2 ]
[; ;Phases.c: 1200: if(getButton1() == 1)
"1200
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 411  ]
[; ;Phases.c: 1201: {
"1201
{
[; ;Phases.c: 1202: currentPower1_2.phaseState = EXIT_POWER1;
"1202
[e = . F3736 1 . `E3371 2 ]
"1203
}
[e :U 411 ]
[; ;Phases.c: 1203: }
[; ;Phases.c: 1204: if(getButton2() == 1)
"1204
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 412  ]
[; ;Phases.c: 1205: {
"1205
{
[; ;Phases.c: 1206: currentPower1_2.phaseState = EXIT_POWER1;
"1206
[e = . F3736 1 . `E3371 2 ]
[; ;Phases.c: 1207: LCDNokia_clear();
"1207
[e ( _LCDNokia_clear ..  ]
"1208
}
[e :U 412 ]
[; ;Phases.c: 1208: }
[; ;Phases.c: 1210: LCDNokia_gotoXY(0,1);
"1210
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1211: LCDNokia_sendString(total_active_power);
"1211
[e ( _LCDNokia_sendString (1 &U _total_active_power ]
[; ;Phases.c: 1212: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, TOTAL_ACTIVE_POWER));
"1212
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 37 `ul ]
[; ;Phases.c: 1213: LCDNokia_gotoXY(0,2);
"1213
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1214: LCDNokia_sendString(total_reactive_power);
"1214
[e ( _LCDNokia_sendString (1 &U _total_reactive_power ]
[; ;Phases.c: 1215: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, TOTAL_REACTIVE_POWER));
"1215
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 41 `ul ]
[; ;Phases.c: 1216: LCDNokia_gotoXY(0,3);
"1216
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1217: LCDNokia_sendString(total_apparent_power);
"1217
[e ( _LCDNokia_sendString (1 &U _total_apparent_power ]
[; ;Phases.c: 1218: LCDNokia_printValue(ATM_registers(APPARENT_POWER_TYPE, TOTAL_APPARENT_POWER));
"1218
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 7 . `E3190 45 `ul ]
[; ;Phases.c: 1220: return (currentPower1_2);
"1220
[e ) F3736 ]
[e $UE 410  ]
[; ;Phases.c: 1221: }
"1221
[e :UE 410 ]
}
"1223
[v _exitPower1 `(S292 ~T0 @X0 1 ef1`S292 ]
"1224
{
[; ;Phases.c: 1223: PhasePower1_Type exitPower1(PhasePower1_Type data)
[; ;Phases.c: 1224: {
[e :U _exitPower1 ]
"1223
[v _data `S292 ~T0 @X0 1 r1 ]
"1224
[f ]
"1226
[v F3738 `S292 ~T0 @X0 1 s currentPower1_4 ]
[; ;Phases.c: 1226: static PhasePower1_Type currentPower1_4;
[; ;Phases.c: 1228: LCDNokia_clear();
"1228
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1230: currentPower1_4.phaseState = data.phaseState;
"1230
[e = . F3738 1 . _data 1 ]
[; ;Phases.c: 1231: currentPower1_4.stateMain = data.stateMain;
"1231
[e = . F3738 2 . _data 2 ]
[; ;Phases.c: 1233: return (currentPower1_4);
"1233
[e ) F3738 ]
[e $UE 413  ]
[; ;Phases.c: 1234: }
"1234
[e :UE 413 ]
}
"1236
[v _fhPower2 `(S294 ~T0 @X0 1 ef1`S294 ]
"1237
{
[; ;Phases.c: 1236: PhasePower2_Type fhPower2(PhasePower2_Type data)
[; ;Phases.c: 1237: {
[e :U _fhPower2 ]
"1236
[v _data `S294 ~T0 @X0 1 r1 ]
"1237
[f ]
"1238
[v F3740 `uc ~T0 @X0 1 s counter ]
[i F3740
-> -> 0 `i `uc
]
"1239
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 1238: static uint8_t counter = 0;
[; ;Phases.c: 1239: const uint8_t maxScreens = 1;
[e = _maxScreens -> -> 1 `i `uc ]
[v F3743 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3743
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 70 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1240
[v _fundamental_PowerP1 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1240: const uint8_t fundamental_PowerP1[] = "PA FPow: ";
[e = _fundamental_PowerP1 F3743 ]
[v F3745 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3745
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 70 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1241
[v _fundamental_PowerP2 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1241: const uint8_t fundamental_PowerP2[] = "PB FPow: ";
[e = _fundamental_PowerP2 F3745 ]
[v F3747 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3747
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 70 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1242
[v _fundamental_PowerP3 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1242: const uint8_t fundamental_PowerP3[] = "PC FPow: ";
[e = _fundamental_PowerP3 F3747 ]
[v F3749 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3749
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 72 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1244
[v _harmonic_PowerP1 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1244: const uint8_t harmonic_PowerP1[] = "PA HPow: ";
[e = _harmonic_PowerP1 F3749 ]
[v F3751 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3751
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 72 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1245
[v _harmonic_PowerP2 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1245: const uint8_t harmonic_PowerP2[] = "PB HPow: ";
[e = _harmonic_PowerP2 F3751 ]
[v F3753 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3753
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 72 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1246
[v _harmonic_PowerP3 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1246: const uint8_t harmonic_PowerP3[] = "PC HPow: ";
[e = _harmonic_PowerP3 F3753 ]
"1249
[v F3754 `S294 ~T0 @X0 1 s currentPower2_1 ]
[; ;Phases.c: 1249: static PhasePower2_Type currentPower2_1;
[; ;Phases.c: 1252: currentPower2_1.phaseState = FH_POWER2;
"1252
[e = . F3754 1 . `E3389 0 ]
[; ;Phases.c: 1253: currentPower2_1.stateMain = data.stateMain;
"1253
[e = . F3754 2 . _data 2 ]
[; ;Phases.c: 1255: if(getButton1() == 1)
"1255
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 415  ]
[; ;Phases.c: 1256: {
"1256
{
[; ;Phases.c: 1257: currentPower2_1.phaseState = EXIT_POWER2;
"1257
[e = . F3754 1 . `E3389 2 ]
"1258
}
[e :U 415 ]
[; ;Phases.c: 1258: }
[; ;Phases.c: 1259: if(getButton2() == 1)
"1259
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 416  ]
[; ;Phases.c: 1260: {
"1260
{
[; ;Phases.c: 1261: currentPower2_1.phaseState = PHASES_POWER2;
"1261
[e = . F3754 1 . `E3389 1 ]
[; ;Phases.c: 1262: LCDNokia_clear();
"1262
[e ( _LCDNokia_clear ..  ]
"1263
}
[e :U 416 ]
[; ;Phases.c: 1263: }
[; ;Phases.c: 1264: if(getButton3() == 1)
"1264
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 417  ]
[; ;Phases.c: 1265: {
"1265
{
[; ;Phases.c: 1266: counter++;
"1266
[e ++ F3740 -> -> 1 `i `uc ]
[; ;Phases.c: 1267: LCDNokia_clear();
"1267
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1268: if(counter > maxScreens)
"1268
[e $ ! > -> F3740 `i -> _maxScreens `i 418  ]
[; ;Phases.c: 1269: {
"1269
{
[; ;Phases.c: 1270: counter = 0;
"1270
[e = F3740 -> -> 0 `i `uc ]
"1271
}
[e :U 418 ]
"1272
}
[e :U 417 ]
[; ;Phases.c: 1271: }
[; ;Phases.c: 1272: }
[; ;Phases.c: 1273: switch(counter)
"1273
[e $U 420  ]
[; ;Phases.c: 1274: {
"1274
{
[; ;Phases.c: 1275: case 0:
"1275
[e :U 421 ]
[; ;Phases.c: 1276: LCDNokia_gotoXY(0,1);
"1276
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1277: LCDNokia_sendString(fundamental_PowerP1);
"1277
[e ( _LCDNokia_sendString (1 &U _fundamental_PowerP1 ]
[; ;Phases.c: 1278: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_POWER, PHASE_A_ACTIVE_FUND_POWER));
"1278
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 9 . `E3190 54 `ul ]
[; ;Phases.c: 1279: LCDNokia_gotoXY(0,2);
"1279
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1280: LCDNokia_sendString(fundamental_PowerP2);
"1280
[e ( _LCDNokia_sendString (1 &U _fundamental_PowerP2 ]
[; ;Phases.c: 1281: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_POWER, PHASE_B_ACTIVE_FUND_POWER));
"1281
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 9 . `E3190 55 `ul ]
[; ;Phases.c: 1282: LCDNokia_gotoXY(0,3);
"1282
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1283: LCDNokia_sendString(fundamental_PowerP3);
"1283
[e ( _LCDNokia_sendString (1 &U _fundamental_PowerP3 ]
[; ;Phases.c: 1284: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_POWER, PHASE_C_ACTIVE_FUND_POWER));
"1284
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 9 . `E3190 56 `ul ]
[; ;Phases.c: 1285: break;
"1285
[e $U 419  ]
[; ;Phases.c: 1286: case 1:
"1286
[e :U 422 ]
[; ;Phases.c: 1287: LCDNokia_gotoXY(0,1);
"1287
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1288: LCDNokia_sendString(harmonic_PowerP1);
"1288
[e ( _LCDNokia_sendString (1 &U _harmonic_PowerP1 ]
[; ;Phases.c: 1289: LCDNokia_printValue(ATM_registers(HARMONIC_POWER, PHASE_A_ACTIVE_HARM_POWER));
"1289
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 10 . `E3190 58 `ul ]
[; ;Phases.c: 1290: LCDNokia_gotoXY(0,2);
"1290
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1291: LCDNokia_sendString(harmonic_PowerP2);
"1291
[e ( _LCDNokia_sendString (1 &U _harmonic_PowerP2 ]
[; ;Phases.c: 1292: LCDNokia_printValue(ATM_registers(HARMONIC_POWER, PHASE_B_ACTIVE_HARM_POWER));
"1292
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 10 . `E3190 59 `ul ]
[; ;Phases.c: 1293: LCDNokia_gotoXY(0,3);
"1293
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1294: LCDNokia_sendString(harmonic_PowerP3);
"1294
[e ( _LCDNokia_sendString (1 &U _harmonic_PowerP3 ]
[; ;Phases.c: 1295: LCDNokia_printValue(ATM_registers(HARMONIC_POWER, PHASE_C_ACTIVE_HARM_POWER));
"1295
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 10 . `E3190 60 `ul ]
[; ;Phases.c: 1296: break;
"1296
[e $U 419  ]
[; ;Phases.c: 1297: default:
"1297
[e :U 423 ]
[; ;Phases.c: 1298: break;
"1298
[e $U 419  ]
"1299
}
[; ;Phases.c: 1299: }
[e $U 419  ]
"1273
[e :U 420 ]
[e [\ F3740 , $ -> -> 0 `i `uc 421
 , $ -> -> 1 `i `uc 422
 423 ]
"1299
[e :U 419 ]
[; ;Phases.c: 1300: return (currentPower2_1);
"1300
[e ) F3754 ]
[e $UE 414  ]
[; ;Phases.c: 1301: }
"1301
[e :UE 414 ]
}
"1303
[v _phPower2 `(S294 ~T0 @X0 1 ef1`S294 ]
"1304
{
[; ;Phases.c: 1303: PhasePower2_Type phPower2(PhasePower2_Type data)
[; ;Phases.c: 1304: {
[e :U _phPower2 ]
"1303
[v _data `S294 ~T0 @X0 1 r1 ]
"1304
[f ]
[v F3757 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3757
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 70 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1305
[v _fundamental_Total_Power `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 1305: const uint8_t fundamental_Total_Power[] = "Total FPow: ";
[e = _fundamental_Total_Power F3757 ]
[v F3759 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3759
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 72 `c
-> 80 `c
-> 111 `c
-> 119 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1306
[v _harmonic_Total_Power `Cuc ~T0 @X0 13  a ]
[; ;Phases.c: 1306: const uint8_t harmonic_Total_Power[] = "Total HPow: ";
[e = _harmonic_Total_Power F3759 ]
"1309
[v F3760 `S294 ~T0 @X0 1 s currentPower2_2 ]
[; ;Phases.c: 1309: static PhasePower2_Type currentPower2_2;
[; ;Phases.c: 1312: currentPower2_2.phaseState = PHASES_POWER2;
"1312
[e = . F3760 1 . `E3389 1 ]
[; ;Phases.c: 1313: currentPower2_2.stateMain = data.stateMain;
"1313
[e = . F3760 2 . _data 2 ]
[; ;Phases.c: 1315: if(getButton1() == 1)
"1315
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 425  ]
[; ;Phases.c: 1316: {
"1316
{
[; ;Phases.c: 1317: currentPower2_2.phaseState = EXIT_POWER2;
"1317
[e = . F3760 1 . `E3389 2 ]
"1318
}
[e :U 425 ]
[; ;Phases.c: 1318: }
[; ;Phases.c: 1319: if(getButton2() == 1)
"1319
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 426  ]
[; ;Phases.c: 1320: {
"1320
{
[; ;Phases.c: 1321: currentPower2_2.phaseState = EXIT_POWER2;
"1321
[e = . F3760 1 . `E3389 2 ]
"1322
}
[e :U 426 ]
[; ;Phases.c: 1322: }
[; ;Phases.c: 1323: LCDNokia_gotoXY(0,1);
"1323
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1324: LCDNokia_sendString(fundamental_Total_Power);
"1324
[e ( _LCDNokia_sendString (1 &U _fundamental_Total_Power ]
[; ;Phases.c: 1325: LCDNokia_printValue(ATM_registers(FUNDAMENTAL_POWER, TOTAL_ACTIVE_FUND_POWER));
"1325
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 9 . `E3190 53 `ul ]
[; ;Phases.c: 1326: LCDNokia_gotoXY(0,2);
"1326
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1327: LCDNokia_sendString(harmonic_Total_Power);
"1327
[e ( _LCDNokia_sendString (1 &U _harmonic_Total_Power ]
[; ;Phases.c: 1328: LCDNokia_printValue(ATM_registers(HARMONIC_POWER, TOTAL_ACTIVE_HARM_POWER));
"1328
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 10 . `E3190 57 `ul ]
[; ;Phases.c: 1330: return (currentPower2_2);
"1330
[e ) F3760 ]
[e $UE 424  ]
[; ;Phases.c: 1331: }
"1331
[e :UE 424 ]
}
"1333
[v _exitPower2 `(S294 ~T0 @X0 1 ef1`S294 ]
"1334
{
[; ;Phases.c: 1333: PhasePower2_Type exitPower2(PhasePower2_Type data)
[; ;Phases.c: 1334: {
[e :U _exitPower2 ]
"1333
[v _data `S294 ~T0 @X0 1 r1 ]
"1334
[f ]
"1336
[v F3762 `S294 ~T0 @X0 1 s currentPower2_3 ]
[; ;Phases.c: 1336: static PhasePower2_Type currentPower2_3;
[; ;Phases.c: 1338: LCDNokia_clear();
"1338
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1340: currentPower2_3.phaseState = data.phaseState;
"1340
[e = . F3762 1 . _data 1 ]
[; ;Phases.c: 1341: currentPower2_3.stateMain = data.stateMain;
"1341
[e = . F3762 2 . _data 2 ]
[; ;Phases.c: 1343: return (currentPower2_3);
"1343
[e ) F3762 ]
[e $UE 427  ]
[; ;Phases.c: 1344: }
"1344
[e :UE 427 ]
}
"1346
[v _phRmsVI `(S296 ~T0 @X0 1 ef1`S296 ]
"1347
{
[; ;Phases.c: 1346: PhaseRmsVI_Type phRmsVI(PhaseRmsVI_Type data)
[; ;Phases.c: 1347: {
[e :U _phRmsVI ]
"1346
[v _data `S296 ~T0 @X0 1 r1 ]
"1347
[f ]
"1348
[v F3764 `uc ~T0 @X0 1 s counter ]
[i F3764
-> -> 0 `i `uc
]
"1349
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 1348: static uint8_t counter = 0;
[; ;Phases.c: 1349: const uint8_t maxScreens = 1;
[e = _maxScreens -> -> 1 `i `uc ]
[v F3767 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3767
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 86 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1350
[v _voltage1_RMS `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1350: const uint8_t voltage1_RMS[] = "PA VRMS: ";
[e = _voltage1_RMS F3767 ]
[v F3769 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3769
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 86 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1351
[v _voltage2_RMS `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1351: const uint8_t voltage2_RMS[] = "PB VRMS: ";
[e = _voltage2_RMS F3769 ]
[v F3771 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3771
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 86 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1352
[v _voltage3_RMS `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1352: const uint8_t voltage3_RMS[] = "PC VRMS: ";
[e = _voltage3_RMS F3771 ]
[v F3773 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3773
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 67 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1354
[v _current1_RMS `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1354: const uint8_t current1_RMS[] = "PA CRMS: ";
[e = _current1_RMS F3773 ]
[v F3775 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3775
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 67 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1355
[v _current2_RMS `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1355: const uint8_t current2_RMS[] = "PB CRMS: ";
[e = _current2_RMS F3775 ]
[v F3777 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3777
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 67 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1356
[v _current3_RMS `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1356: const uint8_t current3_RMS[] = "PC CRMS: ";
[e = _current3_RMS F3777 ]
"1359
[v F3778 `S296 ~T0 @X0 1 s currentRms1 ]
[; ;Phases.c: 1359: static PhaseRmsVI_Type currentRms1;
[; ;Phases.c: 1362: currentRms1.phaseState = PHASES_RMSVI;
"1362
[e = . F3778 1 . `E3407 0 ]
[; ;Phases.c: 1363: currentRms1.stateMain = data.stateMain;
"1363
[e = . F3778 2 . _data 2 ]
[; ;Phases.c: 1365: if(getButton1() == 1)
"1365
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 429  ]
[; ;Phases.c: 1366: {
"1366
{
[; ;Phases.c: 1367: currentRms1.phaseState = EXIT_RMSVI;
"1367
[e = . F3778 1 . `E3407 2 ]
"1368
}
[e :U 429 ]
[; ;Phases.c: 1368: }
[; ;Phases.c: 1369: if(getButton2() == 1)
"1369
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 430  ]
[; ;Phases.c: 1370: {
"1370
{
[; ;Phases.c: 1371: currentRms1.phaseState = NEUTRAL_RMSVI;
"1371
[e = . F3778 1 . `E3407 1 ]
[; ;Phases.c: 1372: LCDNokia_clear();
"1372
[e ( _LCDNokia_clear ..  ]
"1373
}
[e :U 430 ]
[; ;Phases.c: 1373: }
[; ;Phases.c: 1374: if(getButton3() == 1)
"1374
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 431  ]
[; ;Phases.c: 1375: {
"1375
{
[; ;Phases.c: 1376: counter++;
"1376
[e ++ F3764 -> -> 1 `i `uc ]
[; ;Phases.c: 1377: LCDNokia_clear();
"1377
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1378: if(counter > maxScreens)
"1378
[e $ ! > -> F3764 `i -> _maxScreens `i 432  ]
[; ;Phases.c: 1379: {
"1379
{
[; ;Phases.c: 1380: counter = 0;
"1380
[e = F3764 -> -> 0 `i `uc ]
"1381
}
[e :U 432 ]
"1382
}
[e :U 431 ]
[; ;Phases.c: 1381: }
[; ;Phases.c: 1382: }
[; ;Phases.c: 1383: switch(counter)
"1383
[e $U 434  ]
[; ;Phases.c: 1384: {
"1384
{
[; ;Phases.c: 1385: case 0:
"1385
[e :U 435 ]
[; ;Phases.c: 1386: LCDNokia_gotoXY(0,1);
"1386
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1387: LCDNokia_sendString(voltage1_RMS);
"1387
[e ( _LCDNokia_sendString (1 &U _voltage1_RMS ]
[; ;Phases.c: 1388: LCDNokia_printValue(ATM_registers(VOLTAGE_RMS, PHASE_A_VOLTAGE_RMS));
"1388
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 11 . `E3190 62 `ul ]
[; ;Phases.c: 1389: LCDNokia_gotoXY(0,2);
"1389
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1390: LCDNokia_sendString(voltage2_RMS);
"1390
[e ( _LCDNokia_sendString (1 &U _voltage2_RMS ]
[; ;Phases.c: 1391: LCDNokia_printValue(ATM_registers(VOLTAGE_RMS, PHASE_B_VOLTAGE_RMS));
"1391
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 11 . `E3190 63 `ul ]
[; ;Phases.c: 1392: LCDNokia_gotoXY(0,3);
"1392
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1393: LCDNokia_sendString(voltage3_RMS);
"1393
[e ( _LCDNokia_sendString (1 &U _voltage3_RMS ]
[; ;Phases.c: 1394: LCDNokia_printValue(ATM_registers(VOLTAGE_RMS, PHASE_C_VOLTAGE_RMS));
"1394
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 11 . `E3190 64 `ul ]
[; ;Phases.c: 1395: break;
"1395
[e $U 433  ]
[; ;Phases.c: 1396: case 1:
"1396
[e :U 436 ]
[; ;Phases.c: 1397: LCDNokia_gotoXY(0,1);
"1397
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1398: LCDNokia_sendString(current1_RMS);
"1398
[e ( _LCDNokia_sendString (1 &U _current1_RMS ]
[; ;Phases.c: 1399: LCDNokia_printValue(ATM_registers(CURRENT_RMS, PHASE_A_CURRENT_RMS));
"1399
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 12 . `E3190 66 `ul ]
[; ;Phases.c: 1400: LCDNokia_gotoXY(0,2);
"1400
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1401: LCDNokia_sendString(current2_RMS);
"1401
[e ( _LCDNokia_sendString (1 &U _current2_RMS ]
[; ;Phases.c: 1402: LCDNokia_printValue(ATM_registers(CURRENT_RMS, PHASE_B_CURRENT_RMS));
"1402
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 12 . `E3190 67 `ul ]
[; ;Phases.c: 1403: LCDNokia_gotoXY(0,3);
"1403
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1404: LCDNokia_sendString(current3_RMS);
"1404
[e ( _LCDNokia_sendString (1 &U _current3_RMS ]
[; ;Phases.c: 1405: LCDNokia_printValue(ATM_registers(CURRENT_RMS, PHASE_C_CURRENT_RMS));
"1405
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 12 . `E3190 68 `ul ]
[; ;Phases.c: 1406: break;
"1406
[e $U 433  ]
[; ;Phases.c: 1407: default:
"1407
[e :U 437 ]
[; ;Phases.c: 1408: break;
"1408
[e $U 433  ]
"1409
}
[; ;Phases.c: 1409: }
[e $U 433  ]
"1383
[e :U 434 ]
[e [\ F3764 , $ -> -> 0 `i `uc 435
 , $ -> -> 1 `i `uc 436
 437 ]
"1409
[e :U 433 ]
[; ;Phases.c: 1410: return (currentRms1);
"1410
[e ) F3778 ]
[e $UE 428  ]
[; ;Phases.c: 1411: }
"1411
[e :UE 428 ]
}
"1413
[v _neutralRmsVI `(S296 ~T0 @X0 1 ef1`S296 ]
"1414
{
[; ;Phases.c: 1413: PhaseRmsVI_Type neutralRmsVI(PhaseRmsVI_Type data)
[; ;Phases.c: 1414: {
[e :U _neutralRmsVI ]
"1413
[v _data `S296 ~T0 @X0 1 r1 ]
"1414
[f ]
[v F3781 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3781
:U ..
-> 78 `c
-> 32 `c
-> 67 `c
-> 97 `c
-> 108 `c
-> 67 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1415
[v _nline_calculated_RMS `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 1415: const uint8_t nline_calculated_RMS[] = "N CalCRMS: ";
[e = _nline_calculated_RMS F3781 ]
[v F3783 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3783
:U ..
-> 78 `c
-> 32 `c
-> 83 `c
-> 97 `c
-> 109 `c
-> 67 `c
-> 82 `c
-> 77 `c
-> 83 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1416
[v _nline_sampled_RMS `Cuc ~T0 @X0 12  a ]
[; ;Phases.c: 1416: const uint8_t nline_sampled_RMS[] = "N SamCRMS: ";
[e = _nline_sampled_RMS F3783 ]
"1419
[v F3784 `S296 ~T0 @X0 1 s currentRms2 ]
[; ;Phases.c: 1419: static PhaseRmsVI_Type currentRms2;
[; ;Phases.c: 1422: currentRms2.phaseState = NEUTRAL_RMSVI;
"1422
[e = . F3784 1 . `E3407 1 ]
[; ;Phases.c: 1423: currentRms2.stateMain = data.stateMain;
"1423
[e = . F3784 2 . _data 2 ]
[; ;Phases.c: 1425: if(getButton1() == 1)
"1425
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 439  ]
[; ;Phases.c: 1426: {
"1426
{
[; ;Phases.c: 1427: currentRms2.phaseState = EXIT_RMSVI;
"1427
[e = . F3784 1 . `E3407 2 ]
"1429
}
[e :U 439 ]
[; ;Phases.c: 1429: }
[; ;Phases.c: 1430: if(getButton2() == 1)
"1430
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 440  ]
[; ;Phases.c: 1431: {
"1431
{
[; ;Phases.c: 1432: currentRms2.phaseState = EXIT_RMSVI;
"1432
[e = . F3784 1 . `E3407 2 ]
"1433
}
[e :U 440 ]
[; ;Phases.c: 1433: }
[; ;Phases.c: 1434: LCDNokia_gotoXY(0,1);
"1434
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1435: LCDNokia_sendString(nline_calculated_RMS);
"1435
[e ( _LCDNokia_sendString (1 &U _nline_calculated_RMS ]
[; ;Phases.c: 1436: LCDNokia_printValue(ATM_registers(CURRENT_RMS, NLINE_CALCULATED_CURRENT_RMS));
"1436
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 12 . `E3190 65 `ul ]
[; ;Phases.c: 1437: LCDNokia_gotoXY(0,2);
"1437
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1438: LCDNokia_sendString(nline_sampled_RMS);
"1438
[e ( _LCDNokia_sendString (1 &U _nline_sampled_RMS ]
[; ;Phases.c: 1439: LCDNokia_printValue(ATM_registers(CURRENT_RMS, NLINE_SAMPLED_CURRENT_RMS));
"1439
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 12 . `E3190 61 `ul ]
[; ;Phases.c: 1441: return (currentRms2);
"1441
[e ) F3784 ]
[e $UE 438  ]
[; ;Phases.c: 1442: }
"1442
[e :UE 438 ]
}
"1444
[v _exitRmsVI `(S296 ~T0 @X0 1 ef1`S296 ]
"1445
{
[; ;Phases.c: 1444: PhaseRmsVI_Type exitRmsVI(PhaseRmsVI_Type data)
[; ;Phases.c: 1445: {
[e :U _exitRmsVI ]
"1444
[v _data `S296 ~T0 @X0 1 r1 ]
"1445
[f ]
"1447
[v F3786 `S296 ~T0 @X0 1 s currentRms3 ]
[; ;Phases.c: 1447: static PhaseRmsVI_Type currentRms3;
[; ;Phases.c: 1449: LCDNokia_clear();
"1449
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1451: currentRms3.phaseState = data.phaseState;
"1451
[e = . F3786 1 . _data 1 ]
[; ;Phases.c: 1452: currentRms3.stateMain = data.stateMain;
"1452
[e = . F3786 2 . _data 2 ]
[; ;Phases.c: 1454: return (currentRms3);
"1454
[e ) F3786 ]
[e $UE 441  ]
[; ;Phases.c: 1455: }
"1455
[e :UE 441 ]
}
"1457
[v _phPowerFactor `(S298 ~T0 @X0 1 ef1`S298 ]
"1458
{
[; ;Phases.c: 1457: PhasePowerFactor_Type phPowerFactor(PhasePowerFactor_Type data)
[; ;Phases.c: 1458: {
[e :U _phPowerFactor ]
"1457
[v _data `S298 ~T0 @X0 1 r1 ]
"1458
[f ]
"1459
[v F3788 `uc ~T0 @X0 1 s counter ]
[i F3788
-> -> 0 `i `uc
]
"1460
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 1459: static uint8_t counter = 0;
[; ;Phases.c: 1460: const uint8_t maxScreens = 1;
[e = _maxScreens -> -> 1 `i `uc ]
[v F3791 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3791
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 80 `c
-> 70 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1461
[v _factor_powerP1 `Cuc ~T0 @X0 8  a ]
[; ;Phases.c: 1461: const uint8_t factor_powerP1[] = "PA PF: ";
[e = _factor_powerP1 F3791 ]
[v F3793 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3793
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 80 `c
-> 70 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1462
[v _factor_powerP2 `Cuc ~T0 @X0 8  a ]
[; ;Phases.c: 1462: const uint8_t factor_powerP2[] = "PB PF: ";
[e = _factor_powerP2 F3793 ]
[v F3795 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3795
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 80 `c
-> 70 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1463
[v _factor_powerP3 `Cuc ~T0 @X0 8  a ]
[; ;Phases.c: 1463: const uint8_t factor_powerP3[] = "PC PF: ";
[e = _factor_powerP3 F3795 ]
[v F3797 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3797
:U ..
-> 84 `c
-> 111 `c
-> 116 `c
-> 97 `c
-> 108 `c
-> 32 `c
-> 80 `c
-> 70 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1465
[v _total_factor_power `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1465: const uint8_t total_factor_power[] = "Total PF: ";
[e = _total_factor_power F3797 ]
"1468
[v F3798 `S298 ~T0 @X0 1 s currentPowerFactor1 ]
[; ;Phases.c: 1468: static PhasePowerFactor_Type currentPowerFactor1;
[; ;Phases.c: 1471: currentPowerFactor1.phaseState = PHASES_PF;
"1471
[e = . F3798 0 . `E3425 0 ]
[; ;Phases.c: 1472: currentPowerFactor1.stateMain = data.stateMain;
"1472
[e = . F3798 1 . _data 1 ]
[; ;Phases.c: 1474: if(getButton1() == 1)
"1474
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 443  ]
[; ;Phases.c: 1475: {
"1475
{
[; ;Phases.c: 1476: currentPowerFactor1.phaseState = EXIT_PF;
"1476
[e = . F3798 0 . `E3425 1 ]
"1477
}
[e :U 443 ]
[; ;Phases.c: 1477: }
[; ;Phases.c: 1478: if(getButton2() == 1)
"1478
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 444  ]
[; ;Phases.c: 1479: {
"1479
{
[; ;Phases.c: 1480: currentPowerFactor1.phaseState = EXIT_PF;
"1480
[e = . F3798 0 . `E3425 1 ]
"1481
}
[e :U 444 ]
[; ;Phases.c: 1481: }
[; ;Phases.c: 1482: if(getButton3() == 1)
"1482
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 445  ]
[; ;Phases.c: 1483: {
"1483
{
[; ;Phases.c: 1484: counter++;
"1484
[e ++ F3788 -> -> 1 `i `uc ]
[; ;Phases.c: 1485: LCDNokia_clear();
"1485
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1486: if(counter > maxScreens)
"1486
[e $ ! > -> F3788 `i -> _maxScreens `i 446  ]
[; ;Phases.c: 1487: {
"1487
{
[; ;Phases.c: 1488: counter = 0;
"1488
[e = F3788 -> -> 0 `i `uc ]
"1489
}
[e :U 446 ]
"1490
}
[e :U 445 ]
[; ;Phases.c: 1489: }
[; ;Phases.c: 1490: }
[; ;Phases.c: 1491: switch(counter)
"1491
[e $U 448  ]
[; ;Phases.c: 1492: {
"1492
{
[; ;Phases.c: 1493: case 0:
"1493
[e :U 449 ]
[; ;Phases.c: 1494: LCDNokia_gotoXY(0,1);
"1494
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1495: LCDNokia_sendString(factor_powerP1);
"1495
[e ( _LCDNokia_sendString (1 &U _factor_powerP1 ]
[; ;Phases.c: 1496: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_A_POWER_FACTOR));
"1496
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 50 `ul ]
[; ;Phases.c: 1497: LCDNokia_gotoXY(0,2);
"1497
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1498: LCDNokia_sendString(factor_powerP2);
"1498
[e ( _LCDNokia_sendString (1 &U _factor_powerP2 ]
[; ;Phases.c: 1499: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_B_POWER_FACTOR));
"1499
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 51 `ul ]
[; ;Phases.c: 1500: LCDNokia_gotoXY(0,3);
"1500
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1501: LCDNokia_sendString(factor_powerP3);
"1501
[e ( _LCDNokia_sendString (1 &U _factor_powerP3 ]
[; ;Phases.c: 1502: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, PHASE_C_POWER_FACTOR));
"1502
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 52 `ul ]
[; ;Phases.c: 1503: break;
"1503
[e $U 447  ]
[; ;Phases.c: 1504: case 1:
"1504
[e :U 450 ]
[; ;Phases.c: 1505: LCDNokia_gotoXY(0,1);
"1505
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1506: LCDNokia_sendString(total_factor_power);
"1506
[e ( _LCDNokia_sendString (1 &U _total_factor_power ]
[; ;Phases.c: 1507: LCDNokia_printValue(ATM_registers(POWER_FACTOR_TYPE, TOTAL_POWER_FACTOR));
"1507
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 8 . `E3190 49 `ul ]
[; ;Phases.c: 1508: break;
"1508
[e $U 447  ]
[; ;Phases.c: 1509: default:
"1509
[e :U 451 ]
[; ;Phases.c: 1510: break;
"1510
[e $U 447  ]
"1511
}
[; ;Phases.c: 1511: }
[e $U 447  ]
"1491
[e :U 448 ]
[e [\ F3788 , $ -> -> 0 `i `uc 449
 , $ -> -> 1 `i `uc 450
 451 ]
"1511
[e :U 447 ]
[; ;Phases.c: 1512: return (currentPowerFactor1);
"1512
[e ) F3798 ]
[e $UE 442  ]
[; ;Phases.c: 1513: }
"1513
[e :UE 442 ]
}
"1515
[v _exitPowerFactor `(S298 ~T0 @X0 1 ef1`S298 ]
"1516
{
[; ;Phases.c: 1515: PhasePowerFactor_Type exitPowerFactor(PhasePowerFactor_Type data)
[; ;Phases.c: 1516: {
[e :U _exitPowerFactor ]
"1515
[v _data `S298 ~T0 @X0 1 r1 ]
"1516
[f ]
"1518
[v F3800 `S298 ~T0 @X0 1 s currentPowerFactor2 ]
[; ;Phases.c: 1518: static PhasePowerFactor_Type currentPowerFactor2;
[; ;Phases.c: 1520: LCDNokia_clear();
"1520
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1522: currentPowerFactor2.phaseState = data.phaseState;
"1522
[e = . F3800 0 . _data 0 ]
[; ;Phases.c: 1523: currentPowerFactor2.stateMain = data.stateMain;
"1523
[e = . F3800 1 . _data 1 ]
[; ;Phases.c: 1525: return (currentPowerFactor2);
"1525
[e ) F3800 ]
[e $UE 452  ]
[; ;Phases.c: 1526: }
"1526
[e :UE 452 ]
}
"1528
[v _phPhaseAngle `(S300 ~T0 @X0 1 ef1`S300 ]
"1529
{
[; ;Phases.c: 1528: PhasePhaseAngle_Type phPhaseAngle(PhasePhaseAngle_Type data)
[; ;Phases.c: 1529: {
[e :U _phPhaseAngle ]
"1528
[v _data `S300 ~T0 @X0 1 r1 ]
"1529
[f ]
[v F3803 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3803
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 112 `c
-> 104 `c
-> 65 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1530
[v _anglePhase1 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 1530: const uint8_t anglePhase1[] = "PA phA: ";
[e = _anglePhase1 F3803 ]
[v F3805 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3805
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 112 `c
-> 104 `c
-> 65 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1531
[v _anglePhase2 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 1531: const uint8_t anglePhase2[] = "PB phA: ";
[e = _anglePhase2 F3805 ]
[v F3807 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3807
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 112 `c
-> 104 `c
-> 65 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1532
[v _anglePhase3 `Cuc ~T0 @X0 9  a ]
[; ;Phases.c: 1532: const uint8_t anglePhase3[] = "PC phA: ";
[e = _anglePhase3 F3807 ]
"1535
[v F3808 `S300 ~T0 @X0 1 s currentPhaseAngle1 ]
[; ;Phases.c: 1535: static PhasePhaseAngle_Type currentPhaseAngle1;
[; ;Phases.c: 1538: currentPhaseAngle1.phaseState = PHASES_PA;
"1538
[e = . F3808 1 . `E3441 0 ]
[; ;Phases.c: 1539: currentPhaseAngle1.stateMain = data.stateMain;
"1539
[e = . F3808 2 . _data 2 ]
[; ;Phases.c: 1541: if(getButton1() == 1)
"1541
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 454  ]
[; ;Phases.c: 1542: {
"1542
{
[; ;Phases.c: 1543: currentPhaseAngle1.phaseState = EXIT_PA;
"1543
[e = . F3808 1 . `E3441 3 ]
"1544
}
[e :U 454 ]
[; ;Phases.c: 1544: }
[; ;Phases.c: 1545: if(getButton2() == 1)
"1545
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 455  ]
[; ;Phases.c: 1546: {
"1546
{
[; ;Phases.c: 1547: currentPhaseAngle1.phaseState = VI_PA;
"1547
[e = . F3808 1 . `E3441 1 ]
[; ;Phases.c: 1548: LCDNokia_clear();
"1548
[e ( _LCDNokia_clear ..  ]
"1549
}
[e :U 455 ]
[; ;Phases.c: 1549: }
[; ;Phases.c: 1551: LCDNokia_gotoXY(0,1);
"1551
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1552: LCDNokia_sendString(anglePhase1);
"1552
[e ( _LCDNokia_sendString (1 &U _anglePhase1 ]
[; ;Phases.c: 1553: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_A_MEAN_ANGLE_PHASE));
"1553
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 76 `ul ]
[; ;Phases.c: 1554: LCDNokia_gotoXY(0,2);
"1554
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1555: LCDNokia_sendString(anglePhase2);
"1555
[e ( _LCDNokia_sendString (1 &U _anglePhase2 ]
[; ;Phases.c: 1556: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_B_MEAN_ANGLE_PHASE));
"1556
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 77 `ul ]
[; ;Phases.c: 1557: LCDNokia_gotoXY(0,3);
"1557
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1558: LCDNokia_sendString(anglePhase3);
"1558
[e ( _LCDNokia_sendString (1 &U _anglePhase3 ]
[; ;Phases.c: 1559: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_C_MEAN_ANGLE_PHASE));
"1559
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 78 `ul ]
[; ;Phases.c: 1561: return (currentPhaseAngle1);
"1561
[e ) F3808 ]
[e $UE 453  ]
[; ;Phases.c: 1562: }
"1562
[e :UE 453 ]
}
"1564
[v _viPhaseAngle `(S300 ~T0 @X0 1 ef1`S300 ]
"1565
{
[; ;Phases.c: 1564: PhasePhaseAngle_Type viPhaseAngle(PhasePhaseAngle_Type data)
[; ;Phases.c: 1565: {
[e :U _viPhaseAngle ]
"1564
[v _data `S300 ~T0 @X0 1 r1 ]
"1565
[f ]
[v F3811 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3811
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 86 `c
-> 112 `c
-> 104 `c
-> 65 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1566
[v _angle_VoltageP1 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1566: const uint8_t angle_VoltageP1[] = "PA VphA: ";
[e = _angle_VoltageP1 F3811 ]
[v F3813 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3813
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 86 `c
-> 112 `c
-> 104 `c
-> 65 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1567
[v _angle_VoltageP2 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1567: const uint8_t angle_VoltageP2[] = "PB VphA: ";
[e = _angle_VoltageP2 F3813 ]
[v F3815 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3815
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 86 `c
-> 112 `c
-> 104 `c
-> 65 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1568
[v _angle_VoltageP3 `Cuc ~T0 @X0 10  a ]
[; ;Phases.c: 1568: const uint8_t angle_VoltageP3[] = "PC VphA: ";
[e = _angle_VoltageP3 F3815 ]
"1571
[v F3816 `S300 ~T0 @X0 1 s currentPhaseAngle2 ]
[; ;Phases.c: 1571: static PhasePhaseAngle_Type currentPhaseAngle2;
[; ;Phases.c: 1574: currentPhaseAngle2.phaseState = VI_PA;
"1574
[e = . F3816 1 . `E3441 1 ]
[; ;Phases.c: 1575: currentPhaseAngle2.stateMain = data.stateMain;
"1575
[e = . F3816 2 . _data 2 ]
[; ;Phases.c: 1577: if(getButton1() == 1)
"1577
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 457  ]
[; ;Phases.c: 1578: {
"1578
{
[; ;Phases.c: 1579: currentPhaseAngle2.phaseState = EXIT_PA;
"1579
[e = . F3816 1 . `E3441 3 ]
"1580
}
[e :U 457 ]
[; ;Phases.c: 1580: }
[; ;Phases.c: 1581: if(getButton2() == 1)
"1581
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 458  ]
[; ;Phases.c: 1582: {
"1582
{
[; ;Phases.c: 1583: currentPhaseAngle2.phaseState = THDN_PA;
"1583
[e = . F3816 1 . `E3441 2 ]
[; ;Phases.c: 1584: LCDNokia_clear();
"1584
[e ( _LCDNokia_clear ..  ]
"1585
}
[e :U 458 ]
[; ;Phases.c: 1585: }
[; ;Phases.c: 1587: LCDNokia_gotoXY(0,1);
"1587
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1588: LCDNokia_sendString(angle_VoltageP1);
"1588
[e ( _LCDNokia_sendString (1 &U _angle_VoltageP1 ]
[; ;Phases.c: 1589: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_A_VOLTAGE_ANGLE_PHASE));
"1589
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 80 `ul ]
[; ;Phases.c: 1590: LCDNokia_gotoXY(0,2);
"1590
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1591: LCDNokia_sendString(angle_VoltageP2);
"1591
[e ( _LCDNokia_sendString (1 &U _angle_VoltageP2 ]
[; ;Phases.c: 1592: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_B_VOLTAGE_ANGLE_PHASE));
"1592
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 81 `ul ]
[; ;Phases.c: 1593: LCDNokia_gotoXY(0,3);
"1593
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1594: LCDNokia_sendString(angle_VoltageP3);
"1594
[e ( _LCDNokia_sendString (1 &U _angle_VoltageP3 ]
[; ;Phases.c: 1595: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_C_VOLTAGE_ANGLE_PHASE));
"1595
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 82 `ul ]
[; ;Phases.c: 1597: return (currentPhaseAngle2);
"1597
[e ) F3816 ]
[e $UE 456  ]
[; ;Phases.c: 1598: }
"1598
[e :UE 456 ]
}
"1600
[v _THDNPhaseAngle `(S300 ~T0 @X0 1 ef1`S300 ]
"1601
{
[; ;Phases.c: 1600: PhasePhaseAngle_Type THDNPhaseAngle(PhasePhaseAngle_Type data)
[; ;Phases.c: 1601: {
[e :U _THDNPhaseAngle ]
"1600
[v _data `S300 ~T0 @X0 1 r1 ]
"1601
[f ]
"1602
[v F3818 `uc ~T0 @X0 1 s counter ]
[i F3818
-> -> 0 `i `uc
]
"1603
[v _maxScreens `Cuc ~T0 @X0 1 a ]
[; ;Phases.c: 1602: static uint8_t counter = 0;
[; ;Phases.c: 1603: const uint8_t maxScreens = 1;
[e = _maxScreens -> -> 1 `i `uc ]
[v F3821 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3821
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 118 `c
-> 84 `c
-> 72 `c
-> 68 `c
-> 78 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1604
[v _voltage1_THDN `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1604: const uint8_t voltage1_THDN[] = "PA vTHDN: ";
[e = _voltage1_THDN F3821 ]
[v F3823 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3823
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 118 `c
-> 84 `c
-> 72 `c
-> 68 `c
-> 78 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1605
[v _voltage2_THDN `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1605: const uint8_t voltage2_THDN[] = "PB vTHDN: ";
[e = _voltage2_THDN F3823 ]
[v F3825 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3825
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 118 `c
-> 84 `c
-> 72 `c
-> 68 `c
-> 78 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1606
[v _voltage3_THDN `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1606: const uint8_t voltage3_THDN[] = "PC vTHDN: ";
[e = _voltage3_THDN F3825 ]
[v F3827 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3827
:U ..
-> 80 `c
-> 65 `c
-> 32 `c
-> 99 `c
-> 84 `c
-> 72 `c
-> 68 `c
-> 78 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1608
[v _current1_THDN `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1608: const uint8_t current1_THDN[] = "PA cTHDN: ";
[e = _current1_THDN F3827 ]
[v F3829 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3829
:U ..
-> 80 `c
-> 66 `c
-> 32 `c
-> 99 `c
-> 84 `c
-> 72 `c
-> 68 `c
-> 78 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1609
[v _current2_THDN `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1609: const uint8_t current2_THDN[] = "PB cTHDN: ";
[e = _current2_THDN F3829 ]
[v F3831 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3831
:U ..
-> 80 `c
-> 67 `c
-> 32 `c
-> 99 `c
-> 84 `c
-> 72 `c
-> 68 `c
-> 78 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1610
[v _current3_THDN `Cuc ~T0 @X0 11  a ]
[; ;Phases.c: 1610: const uint8_t current3_THDN[] = "PC cTHDN: ";
[e = _current3_THDN F3831 ]
"1613
[v F3832 `S300 ~T0 @X0 1 s currentPhaseAngle3 ]
[; ;Phases.c: 1613: static PhasePhaseAngle_Type currentPhaseAngle3;
[; ;Phases.c: 1616: currentPhaseAngle3.phaseState = THDN_PA;
"1616
[e = . F3832 1 . `E3441 2 ]
[; ;Phases.c: 1617: currentPhaseAngle3.stateMain = data.stateMain;
"1617
[e = . F3832 2 . _data 2 ]
[; ;Phases.c: 1619: if(getButton1() == 1)
"1619
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 460  ]
[; ;Phases.c: 1620: {
"1620
{
[; ;Phases.c: 1621: currentPhaseAngle3.phaseState = EXIT_PA;
"1621
[e = . F3832 1 . `E3441 3 ]
"1623
}
[e :U 460 ]
[; ;Phases.c: 1623: }
[; ;Phases.c: 1624: if(getButton2() == 1)
"1624
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 461  ]
[; ;Phases.c: 1625: {
"1625
{
[; ;Phases.c: 1626: currentPhaseAngle3.phaseState = EXIT_PA;
"1626
[e = . F3832 1 . `E3441 3 ]
"1627
}
[e :U 461 ]
[; ;Phases.c: 1627: }
[; ;Phases.c: 1628: if(getButton3() == 1)
"1628
[e $ ! == -> ( _getButton3 ..  `i -> 1 `i 462  ]
[; ;Phases.c: 1629: {
"1629
{
[; ;Phases.c: 1630: counter++;
"1630
[e ++ F3818 -> -> 1 `i `uc ]
[; ;Phases.c: 1631: LCDNokia_clear();
"1631
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1632: if(counter > maxScreens)
"1632
[e $ ! > -> F3818 `i -> _maxScreens `i 463  ]
[; ;Phases.c: 1633: {
"1633
{
[; ;Phases.c: 1634: counter = 0;
"1634
[e = F3818 -> -> 0 `i `uc ]
"1635
}
[e :U 463 ]
"1636
}
[e :U 462 ]
[; ;Phases.c: 1635: }
[; ;Phases.c: 1636: }
[; ;Phases.c: 1637: switch(counter)
"1637
[e $U 465  ]
[; ;Phases.c: 1638: {
"1638
{
[; ;Phases.c: 1639: case 0:
"1639
[e :U 466 ]
[; ;Phases.c: 1640: LCDNokia_gotoXY(0,1);
"1640
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1641: LCDNokia_sendString(voltage1_THDN);
"1641
[e ( _LCDNokia_sendString (1 &U _voltage1_THDN ]
[; ;Phases.c: 1642: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_A_VOLTAGE_ANGLE_PHASE));
"1642
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 80 `ul ]
[; ;Phases.c: 1643: LCDNokia_gotoXY(0,2);
"1643
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1644: LCDNokia_sendString(voltage2_THDN);
"1644
[e ( _LCDNokia_sendString (1 &U _voltage2_THDN ]
[; ;Phases.c: 1645: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_B_VOLTAGE_ANGLE_PHASE));
"1645
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 81 `ul ]
[; ;Phases.c: 1646: LCDNokia_gotoXY(0,3);
"1646
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1647: LCDNokia_sendString(voltage3_THDN);
"1647
[e ( _LCDNokia_sendString (1 &U _voltage3_THDN ]
[; ;Phases.c: 1648: LCDNokia_printValue(ATM_registers(PHASE_ANGLE_TYPE, PHASE_C_VOLTAGE_ANGLE_PHASE));
"1648
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 15 . `E3190 82 `ul ]
[; ;Phases.c: 1649: break;
"1649
[e $U 464  ]
[; ;Phases.c: 1650: case 1:
"1650
[e :U 467 ]
[; ;Phases.c: 1651: LCDNokia_gotoXY(0,1);
"1651
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1652: LCDNokia_sendString(current1_THDN);
"1652
[e ( _LCDNokia_sendString (1 &U _current1_THDN ]
[; ;Phases.c: 1653: LCDNokia_printValue(ATM_registers(THDN_TYPE, PHASE_A_CURRENT_THDN));
"1653
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 13 . `E3190 72 `ul ]
[; ;Phases.c: 1654: LCDNokia_gotoXY(0,2);
"1654
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;Phases.c: 1655: LCDNokia_sendString(current2_THDN);
"1655
[e ( _LCDNokia_sendString (1 &U _current2_THDN ]
[; ;Phases.c: 1656: LCDNokia_printValue(ATM_registers(THDN_TYPE, PHASE_B_CURRENT_THDN));
"1656
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 13 . `E3190 73 `ul ]
[; ;Phases.c: 1657: LCDNokia_gotoXY(0,3);
"1657
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;Phases.c: 1658: LCDNokia_sendString(current3_THDN);
"1658
[e ( _LCDNokia_sendString (1 &U _current3_THDN ]
[; ;Phases.c: 1659: LCDNokia_printValue(ATM_registers(THDN_TYPE, PHASE_C_CURRENT_THDN));
"1659
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 13 . `E3190 74 `ul ]
[; ;Phases.c: 1660: break;
"1660
[e $U 464  ]
[; ;Phases.c: 1661: default:
"1661
[e :U 468 ]
[; ;Phases.c: 1662: break;
"1662
[e $U 464  ]
"1663
}
[; ;Phases.c: 1663: }
[e $U 464  ]
"1637
[e :U 465 ]
[e [\ F3818 , $ -> -> 0 `i `uc 466
 , $ -> -> 1 `i `uc 467
 468 ]
"1663
[e :U 464 ]
[; ;Phases.c: 1664: return (currentPhaseAngle3);
"1664
[e ) F3832 ]
[e $UE 459  ]
[; ;Phases.c: 1665: }
"1665
[e :UE 459 ]
}
"1667
[v _exitPhaseAngle `(S300 ~T0 @X0 1 ef1`S300 ]
"1668
{
[; ;Phases.c: 1667: PhasePhaseAngle_Type exitPhaseAngle(PhasePhaseAngle_Type data)
[; ;Phases.c: 1668: {
[e :U _exitPhaseAngle ]
"1667
[v _data `S300 ~T0 @X0 1 r1 ]
"1668
[f ]
"1670
[v F3834 `S300 ~T0 @X0 1 s currentPhaseAngle3 ]
[; ;Phases.c: 1670: static PhasePhaseAngle_Type currentPhaseAngle3;
[; ;Phases.c: 1672: LCDNokia_clear();
"1672
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1674: currentPhaseAngle3.phaseState = data.phaseState;
"1674
[e = . F3834 1 . _data 1 ]
[; ;Phases.c: 1675: currentPhaseAngle3.stateMain = data.stateMain;
"1675
[e = . F3834 2 . _data 2 ]
[; ;Phases.c: 1677: return (currentPhaseAngle3);
"1677
[e ) F3834 ]
[e $UE 469  ]
[; ;Phases.c: 1678: }
"1678
[e :UE 469 ]
}
"1680
[v _showFrequency `(S302 ~T0 @X0 1 ef1`S302 ]
"1681
{
[; ;Phases.c: 1680: PhaseFrequency_Type showFrequency(PhaseFrequency_Type data)
[; ;Phases.c: 1681: {
[e :U _showFrequency ]
"1680
[v _data `S302 ~T0 @X0 1 r1 ]
"1681
[f ]
[v F3837 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3837
:U ..
-> 70 `c
-> 114 `c
-> 101 `c
-> 113 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1682
[v _frequency `Cuc ~T0 @X0 7  a ]
[; ;Phases.c: 1682: const uint8_t frequency[] = "Freq: ";
[e = _frequency F3837 ]
"1684
[v F3838 `S302 ~T0 @X0 1 s currentFrequency1 ]
[; ;Phases.c: 1684: static PhaseFrequency_Type currentFrequency1;
[; ;Phases.c: 1687: currentFrequency1.phaseState = SHOW_FREQUENCY;
"1687
[e = . F3838 1 . `E3460 0 ]
[; ;Phases.c: 1688: currentFrequency1.stateMain = data.stateMain;
"1688
[e = . F3838 2 . _data 2 ]
[; ;Phases.c: 1690: if(getButton1() == 1)
"1690
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 471  ]
[; ;Phases.c: 1691: {
"1691
{
[; ;Phases.c: 1692: currentFrequency1.phaseState = EXIT_FREQUENCY;
"1692
[e = . F3838 1 . `E3460 1 ]
"1693
}
[e :U 471 ]
[; ;Phases.c: 1693: }
[; ;Phases.c: 1694: if(getButton2() == 1)
"1694
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 472  ]
[; ;Phases.c: 1695: {
"1695
{
[; ;Phases.c: 1696: currentFrequency1.phaseState = EXIT_FREQUENCY;
"1696
[e = . F3838 1 . `E3460 1 ]
"1697
}
[e :U 472 ]
[; ;Phases.c: 1697: }
[; ;Phases.c: 1698: LCDNokia_gotoXY(0,1);
"1698
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1699: LCDNokia_sendString(frequency);
"1699
[e ( _LCDNokia_sendString (1 &U _frequency ]
[; ;Phases.c: 1700: LCDNokia_printValue(ATM_registers(FREQUENCY_TYPE, FREQUENCY_REG));
"1700
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 14 . `E3190 75 `ul ]
[; ;Phases.c: 1702: return (currentFrequency1);
"1702
[e ) F3838 ]
[e $UE 470  ]
[; ;Phases.c: 1703: }
"1703
[e :UE 470 ]
}
"1705
[v _exitFrequency `(S302 ~T0 @X0 1 ef1`S302 ]
"1706
{
[; ;Phases.c: 1705: PhaseFrequency_Type exitFrequency(PhaseFrequency_Type data)
[; ;Phases.c: 1706: {
[e :U _exitFrequency ]
"1705
[v _data `S302 ~T0 @X0 1 r1 ]
"1706
[f ]
"1708
[v F3840 `S302 ~T0 @X0 1 s currentFrequency2 ]
[; ;Phases.c: 1708: static PhaseFrequency_Type currentFrequency2;
[; ;Phases.c: 1710: LCDNokia_clear();
"1710
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1712: currentFrequency2.phaseState = data.phaseState;
"1712
[e = . F3840 1 . _data 1 ]
[; ;Phases.c: 1713: currentFrequency2.stateMain = data.stateMain;
"1713
[e = . F3840 2 . _data 2 ]
[; ;Phases.c: 1715: return (currentFrequency2);
"1715
[e ) F3840 ]
[e $UE 473  ]
[; ;Phases.c: 1716: }
"1716
[e :UE 473 ]
}
"1718
[v _showTemperature `(S304 ~T0 @X0 1 ef1`S304 ]
"1719
{
[; ;Phases.c: 1718: PhaseTemperature_Type showTemperature(PhaseTemperature_Type data)
[; ;Phases.c: 1719: {
[e :U _showTemperature ]
"1718
[v _data `S304 ~T0 @X0 1 r1 ]
"1719
[f ]
[v F3843 `Cuc ~T0 @X0 -> 0 `x s ]
[i F3843
:U ..
-> 84 `c
-> 101 `c
-> 109 `c
-> 112 `c
-> 58 `c
-> 32 `c
-> 0 `c
..
]
"1720
[v _temperature `Cuc ~T0 @X0 7  a ]
[; ;Phases.c: 1720: const uint8_t temperature[] = "Temp: ";
[e = _temperature F3843 ]
"1722
[v F3844 `S304 ~T0 @X0 1 s currentTemperature1 ]
[; ;Phases.c: 1722: static PhaseTemperature_Type currentTemperature1;
[; ;Phases.c: 1725: currentTemperature1.phaseState = SHOW_TEMPERATURE;
"1725
[e = . F3844 1 . `E3477 0 ]
[; ;Phases.c: 1726: currentTemperature1.stateMain = data.stateMain;
"1726
[e = . F3844 2 . _data 2 ]
[; ;Phases.c: 1728: if(getButton1() == 1)
"1728
[e $ ! == -> ( _getButton1 ..  `i -> 1 `i 475  ]
[; ;Phases.c: 1729: {
"1729
{
[; ;Phases.c: 1730: currentTemperature1.phaseState = EXIT_TEMPERATURE;
"1730
[e = . F3844 1 . `E3477 1 ]
"1731
}
[e :U 475 ]
[; ;Phases.c: 1731: }
[; ;Phases.c: 1732: if(getButton2() == 1)
"1732
[e $ ! == -> ( _getButton2 ..  `i -> 1 `i 476  ]
[; ;Phases.c: 1733: {
"1733
{
[; ;Phases.c: 1734: currentTemperature1.phaseState = EXIT_TEMPERATURE;
"1734
[e = . F3844 1 . `E3477 1 ]
"1735
}
[e :U 476 ]
[; ;Phases.c: 1735: }
[; ;Phases.c: 1737: LCDNokia_gotoXY(0,1);
"1737
[e ( _LCDNokia_gotoXY (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;Phases.c: 1738: LCDNokia_sendString(temperature);
"1738
[e ( _LCDNokia_sendString (1 &U _temperature ]
[; ;Phases.c: 1739: LCDNokia_printValue(ATM_registers(TEMPERATURE_TYPE, TEMPERATURE_REG));
"1739
[e ( _LCDNokia_printValue (1 -> ( _ATM_registers (2 , . `E3171 16 . `E3190 79 `ul ]
[; ;Phases.c: 1741: return (currentTemperature1);
"1741
[e ) F3844 ]
[e $UE 474  ]
[; ;Phases.c: 1742: }
"1742
[e :UE 474 ]
}
"1744
[v _exitTemperature `(S304 ~T0 @X0 1 ef1`S304 ]
"1745
{
[; ;Phases.c: 1744: PhaseTemperature_Type exitTemperature(PhaseTemperature_Type data)
[; ;Phases.c: 1745: {
[e :U _exitTemperature ]
"1744
[v _data `S304 ~T0 @X0 1 r1 ]
"1745
[f ]
"1747
[v F3846 `S304 ~T0 @X0 1 s currentTemperature2 ]
[; ;Phases.c: 1747: static PhaseTemperature_Type currentTemperature2;
[; ;Phases.c: 1749: LCDNokia_clear();
"1749
[e ( _LCDNokia_clear ..  ]
[; ;Phases.c: 1751: currentTemperature2.phaseState = data.phaseState;
"1751
[e = . F3846 1 . _data 1 ]
[; ;Phases.c: 1752: currentTemperature2.stateMain = data.stateMain;
"1752
[e = . F3846 2 . _data 2 ]
[; ;Phases.c: 1754: return (currentTemperature2);
"1754
[e ) F3846 ]
[e $UE 477  ]
[; ;Phases.c: 1755: }
"1755
[e :UE 477 ]
}
