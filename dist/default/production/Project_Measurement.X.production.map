Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.44\dat\en_msgs.txt -cs \
  -h+dist/default/production\Project_Measurement.X.production.sym \
  --cmf=dist/default/production\Project_Measurement.X.production.cmf -z \
  -Q18F2331 -oC:\Users\ANDRES~1\AppData\Local\Temp\s1nbo.2 \
  -Mdist/default/production/Project_Measurement.X.production.map -E1 \
  -ver=XC8 -ASTACK=06Ch-02ffh -pstack=STACK -ACODE=00h-01FFFh \
  -ACONST=00h-01FFFh -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0300h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\ANDRES~1\AppData\Local\Temp\s1nbo.obj \
  dist/default/production\Project_Measurement.X.production.obj 

Object code version is 3.11

Machine type is 18F2331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ANDRES~1\AppData\Local\Temp\s1nbo.obj
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Project_Measurement.X.production.obj
                smallconst                          300      300       42      180       0
                text36                              49A      49A       60      1A1       0
                text35                              84C      84C       3E      1A1       0
                text34                              88A      88A       30      1A1       0
                text33                              804      804       48      1A1       0
                text32                              342      342       DC      1A1       0
                text31                              41E      41E       7C      1A1       0
                text30                              8F4      8F4       18      1A1       0
                text29                              A40      A40       16      1A1       0
                text28                              A9E      A9E       12      1A1       0
                text27                              A8C      A8C       12      1A1       0
                text26                              A7A      A7A       12      1A1       0
                text25                              A2A      A2A       16      1A1       0
                text24                              A14      A14       16      1A1       0
                text23                              9FE      9FE       16      1A1       0
                text22                              9E8      9E8       16      1A1       0
                text21                              9D2      9D2       16      1A1       0
                text20                              9BC      9BC       16      1A1       0
                text19                              9A6      9A6       16      1A1       0
                text18                              990      990       16      1A1       0
                text17                              97A      97A       16      1A1       0
                text16                              964      964       16      1A1       0
                text15                              A68      A68       12      1A1       0
                text14                              A56      A56       12      1A1       0
                text13                              94E      94E       16      1A1       0
                text12                              938      938       16      1A1       0
                text11                              922      922       16      1A1       0
                text10                              8DC      8DC       18      1A1       0
                text9                               90C      90C       16      1A1       0
                text8                               70C      70C       58      1A1       0
                text7                               7B4      7B4       50      1A1       0
                text6                               6B4      6B4       58      1A1       0
                text5                               65C      65C       58      1A1       0
                text4                               604      604       58      1A1       0
                text3                               764      764       50      1A1       0
                text2                               5AC      5AC       58      1A1       0
                text1                               554      554       58      1A1       0
                text0                               4FA      4FA       5A      1A1       0
                cstackCOMRAM                         54       54        C        1       1
                bssBANK0                             60       60        C       60       1
                bssCOMRAM                             1        1       53        1       1
                cinit                               8BA      8BA       22      1A1       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text36                              49A      49A       60         0
                text35                              84C      84C       3E         0
                text34                              88A      88A       30         0
                text33                              804      804       48         0
                text32                              342      342       DC         0
                text31                              41E      41E       7C         0
                text30                              8F4      8F4       18         0
                text29                              A40      A40       16         0
                text28                              A9E      A9E       12         0
                text27                              A8C      A8C       12         0
                text26                              A7A      A7A       12         0
                text25                              A2A      A2A       16         0
                text24                              A14      A14       16         0
                text23                              9FE      9FE       16         0
                text22                              9E8      9E8       16         0
                text21                              9D2      9D2       16         0
                text20                              9BC      9BC       16         0
                text19                              9A6      9A6       16         0
                text18                              990      990       16         0
                text17                              97A      97A       16         0
                text16                              964      964       16         0
                text15                              A68      A68       12         0
                text14                              A56      A56       12         0
                text13                              94E      94E       16         0
                text12                              938      938       16         0
                text11                              922      922       16         0
                text10                              8DC      8DC       18         0
                text9                               90C      90C       16         0
                text8                               70C      70C       58         0
                text7                               7B4      7B4       50         0
                text6                               6B4      6B4       58         0
                text5                               65C      65C       58         0
                text4                               604      604       58         0
                text3                               764      764       50         0
                text2                               5AC      5AC       58         0
                text1                               554      554       58         0
                text0                               4FA      4FA       5A         0
                cinit                               8BA      8BA       22         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       42         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         54       54        C         1
                bssCOMRAM                             1        1       53         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                bssBANK0                             60       60        C         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                bssCOMRAM                      000001  00005F  000060         1       1  COMRAM  
                bssBANK0                       000060  00000C  00006C        60       1  BANK0   
                smallconst                     000300  000042  000342       180       0  SMALLCON
                text32                         000342  00076E  000AB0       1A1       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00006C-0000FF               94
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00006C-0002FF              294
        CODE             000004-0002FF              2FC
                         000AB0-001FFF             1550
        CONST            000004-0002FF              2FC
                         000AB0-001FFF             1550
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000AB0-001FFF             1550
        RAM              00006C-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000AB0-001FFF              100
        STACK            00006C-0002FF              294

                                  Symbol Table

?_exitFrequency                       cstackCOMRAM 000054
?_exitPhaseAngle                      cstackCOMRAM 000054
?_exitPower1                          cstackCOMRAM 000054
?_exitPower2                          cstackCOMRAM 000054
?_exitPowerFactor                     cstackCOMRAM 000054
?_exitRmsVI                           cstackCOMRAM 000054
?_exitTemperature                     cstackCOMRAM 000054
?_fhPower2                            cstackCOMRAM 000054
?_generalView                         cstackCOMRAM 000054
?_initialLoad                         cstackCOMRAM 000054
?_neutralRmsVI                        cstackCOMRAM 000054
?_phPhaseAngle                        cstackCOMRAM 000054
?_phPower1                            cstackCOMRAM 000054
?_phPower2                            cstackCOMRAM 000054
?_phPowerFactor                       cstackCOMRAM 000054
?_phRmsVI                             cstackCOMRAM 000054
?_showFrequency                       cstackCOMRAM 000054
?_showTemperature                     cstackCOMRAM 000054
?_typesPower1                         cstackCOMRAM 000054
?_vectorPower1                        cstackCOMRAM 000054
?_viPhaseAngle                        cstackCOMRAM 000054
?_viewMenu                            cstackCOMRAM 000054
GPIO_dataDirectionPIN@pin             cstackCOMRAM 000054
GPIO_dataDirectionPIN@portName        cstackCOMRAM 000058
GPIO_dataDirectionPIN@state           cstackCOMRAM 000055
GPIO_sourceClock@clk                  cstackCOMRAM 000054
SPI_enableClock@cpol                  cstackCOMRAM 000054
SPI_enableClock@phase                 cstackCOMRAM 000055
SPI_enablePins@serial                 cstackCOMRAM 000054
SPI_init@SPI_Config                   cstackCOMRAM 000056
UART_init@baudRate                    cstackCOMRAM 000059
_ANSEL0                               (abs)        000FB8
_BAUDCTLbits                          (abs)        000FAA
_GPIO_dataDirectionPIN                text32       000342
_GPIO_sourceClock                     text36       00049A
_OSCCON                               (abs)        000FD3
_RCSTAbits                            (abs)        000FAB
_SPBRG                                (abs)        000FAF
_SPI_Config                           smallconst   00033D
_SPI_enableClock                      text35       00084C
_SPI_enablePins                       text34       00088A
_SPI_init                             text33       000804
_SSPBUF                               (abs)        000FC9
_SSPCON                               (abs)        000FC6
_SSPCONbits                           (abs)        000FC6
_SSPSTAT                              (abs)        000FC7
_SSPSTATbits                          (abs)        000FC7
_StateProgram                         smallconst   000301
_TRISA                                (abs)        000F92
_TRISB                                (abs)        000F93
_TRISC                                (abs)        000F94
_TRISCbits                            (abs)        000F94
_TXREG                                (abs)        000FAD
_TXSTAbits                            (abs)        000FAC
_UART_init                            text31       00041E
__HRAM                                (abs)        000000
__Habs1                               abs1         000000
__Hbank0                              bank0        000000
__Hbank1                              bank1        000000
__Hbank2                              bank2        000000
__Hbigbss                             bigbss       000000
__Hbigdata                            bigdata      000000
__Hbigram                             bigram       000000
__Hbss                                bss          000000
__HbssBANK0                           bssBANK0     000000
__HbssCOMRAM                          bssCOMRAM    000000
__Hcinit                              cinit        000000
__Hclrtext                            clrtext      000000
__Hcomram                             comram       000000
__Hconfig                             config       30000E
__Hconst                              const        000000
__HcstackCOMRAM                       cstackCOMRAM 000000
__Hdata                               data         000000
__Heeprom_data                        eeprom_data  000000
__Hfarbss                             farbss       000000
__Hfardata                            fardata      000000
__Hibigdata                           ibigdata     000000
__Hidata                              idata        000000
__Hidloc                              idloc        200008
__Hifardata                           ifardata     000000
__Hinit                               init         000004
__Hintcode                            intcode      000000
__Hintcode_body                       intcode_body 000000
__Hintcodelo                          intcodelo    000000
__Hintentry                           intentry     000000
__Hintret                             intret       000000
__Hintsave_regs                       intsave_regs 000000
__Hirdata                             irdata       000000
__Hmediumconst                        mediumconst  000000
__HnvFARRAM                           nvFARRAM     000000
__Hnvbit                              nvbit        000000
__Hnvrram                             nvrram       000000
__Hparam                              rparam       000000
__Hpowerup                            powerup      000000
__Hram                                ram          000000
__Hramtop                             ramtop       000300
__Hrbit                               rbit         000000
__Hrbss                               rbss         000000
__Hrdata                              rdata        000000
__Hreset_vec                          reset_vec    000000
__Hrparam                             rparam       000000
__Hsfr                                sfr          000000
__Hsmallconst                         smallconst   000342
__Hspace_0                            (abs)        30000E
__Hspace_1                            (abs)        00006C
__Hspace_2                            (abs)        000000
__Hstack                              stack        000000
__Hstruct                             struct       000000
__Htemp                               temp         000000
__Htext                               text         000000
__Htext0                              text0        000000
__Htext1                              text1        000000
__Htext10                             text10       000000
__Htext11                             text11       000000
__Htext12                             text12       000000
__Htext13                             text13       000000
__Htext14                             text14       000000
__Htext15                             text15       000000
__Htext16                             text16       000000
__Htext17                             text17       000000
__Htext18                             text18       000000
__Htext19                             text19       000000
__Htext2                              text2        000000
__Htext20                             text20       000000
__Htext21                             text21       000000
__Htext22                             text22       000000
__Htext23                             text23       000000
__Htext24                             text24       000000
__Htext25                             text25       000000
__Htext26                             text26       000000
__Htext27                             text27       000000
__Htext28                             text28       000000
__Htext29                             text29       000000
__Htext3                              text3        000000
__Htext30                             text30       000000
__Htext31                             text31       000000
__Htext32                             text32       000000
__Htext33                             text33       000000
__Htext34                             text34       000000
__Htext35                             text35       000000
__Htext36                             text36       000000
__Htext37                             text37       000000
__Htext4                              text4        000000
__Htext5                              text5        000000
__Htext6                              text6        000000
__Htext7                              text7        000000
__Htext8                              text8        000000
__Htext9                              text9        000000
__LRAM                                (abs)        000001
__Labs1                               abs1         000000
__Lbank0                              bank0        000000
__Lbank1                              bank1        000000
__Lbank2                              bank2        000000
__Lbigbss                             bigbss       000000
__Lbigdata                            bigdata      000000
__Lbigram                             bigram       000000
__Lbss                                bss          000000
__LbssBANK0                           bssBANK0     000000
__LbssCOMRAM                          bssCOMRAM    000000
__Lcinit                              cinit        000000
__Lclrtext                            clrtext      000000
__Lcomram                             comram       000000
__Lconfig                             config       300000
__Lconst                              const        000000
__LcstackCOMRAM                       cstackCOMRAM 000000
__Ldata                               data         000000
__Leeprom_data                        eeprom_data  000000
__Lfarbss                             farbss       000000
__Lfardata                            fardata      000000
__Libigdata                           ibigdata     000000
__Lidata                              idata        000000
__Lidloc                              idloc        200000
__Lifardata                           ifardata     000000
__Linit                               init         000000
__Lintcode                            intcode      000000
__Lintcode_body                       intcode_body 000000
__Lintcodelo                          intcodelo    000000
__Lintentry                           intentry     000000
__Lintret                             intret       000000
__Lintsave_regs                       intsave_regs 000000
__Lirdata                             irdata       000000
__Lmediumconst                        mediumconst  000000
__LnvFARRAM                           nvFARRAM     000000
__Lnvbit                              nvbit        000000
__Lnvrram                             nvrram       000000
__Lparam                              rparam       000000
__Lpowerup                            powerup      000000
__Lram                                ram          000000
__Lramtop                             ramtop       000300
__Lrbit                               rbit         000000
__Lrbss                               rbss         000000
__Lrdata                              rdata        000000
__Lreset_vec                          reset_vec    000000
__Lrparam                             rparam       000000
__Lsfr                                sfr          000000
__Lsmallconst                         smallconst   000300
__Lspace_0                            (abs)        000000
__Lspace_1                            (abs)        000000
__Lspace_2                            (abs)        000000
__Lstack                              stack        000000
__Lstruct                             struct       000000
__Ltemp                               temp         000000
__Ltext                               text         000000
__Ltext0                              text0        000000
__Ltext1                              text1        000000
__Ltext10                             text10       000000
__Ltext11                             text11       000000
__Ltext12                             text12       000000
__Ltext13                             text13       000000
__Ltext14                             text14       000000
__Ltext15                             text15       000000
__Ltext16                             text16       000000
__Ltext17                             text17       000000
__Ltext18                             text18       000000
__Ltext19                             text19       000000
__Ltext2                              text2        000000
__Ltext20                             text20       000000
__Ltext21                             text21       000000
__Ltext22                             text22       000000
__Ltext23                             text23       000000
__Ltext24                             text24       000000
__Ltext25                             text25       000000
__Ltext26                             text26       000000
__Ltext27                             text27       000000
__Ltext28                             text28       000000
__Ltext29                             text29       000000
__Ltext3                              text3        000000
__Ltext30                             text30       000000
__Ltext31                             text31       000000
__Ltext32                             text32       000000
__Ltext33                             text33       000000
__Ltext34                             text34       000000
__Ltext35                             text35       000000
__Ltext36                             text36       000000
__Ltext37                             text37       000000
__Ltext4                              text4        000000
__Ltext5                              text5        000000
__Ltext6                              text6        000000
__Ltext7                              text7        000000
__Ltext8                              text8        000000
__Ltext9                              text9        000000
__S0                                  (abs)        30000E
__S1                                  (abs)        00006C
__S2                                  (abs)        000000
___inthi_sp                           stack        000000
___intlo_sp                           stack        000000
___param_bank                         (abs)        000000
___rparam_used                        (abs)        000001
___sp                                 stack        000000
__accesstop                           (abs)        000060
__activetblptr                        (abs)        000002
__end_of_GPIO_dataDirectionPIN        text32       00041E
__end_of_GPIO_sourceClock             text36       0004FA
__end_of_SPI_Config                   smallconst   000340
__end_of_SPI_enableClock              text35       00088A
__end_of_SPI_enablePins               text34       0008BA
__end_of_SPI_init                     text33       00084C
__end_of_StateProgram                 smallconst   000311
__end_of_UART_init                    text31       00049A
__end_of__initialization              cinit        0008D2
__end_of_exitFrequency                text29       000A56
__end_of_exitPhaseAngle               text23       000A14
__end_of_exitPower1                   text19       0009BC
__end_of_exitPower2                   text16       00097A
__end_of_exitPowerFactor              text14       000A68
__end_of_exitRmsVI                    text11       000938
__end_of_exitTemperature              text9        000922
__end_of_fhPower2                     text17       000990
__end_of_generalView                  text26       000A8C
__end_of_initialLoad                  text27       000A9E
__end_of_main                         text0        000554
__end_of_neutralRmsVI                 text12       00094E
__end_of_phPhaseAngle                 text24       000A2A
__end_of_phPower1                     text20       0009D2
__end_of_phPower2                     text18       0009A6
__end_of_phPowerFactor                text15       000A7A
__end_of_phRmsVI                      text13       000964
__end_of_phasesFrequency              smallconst   000339
__end_of_phasesMainMenu               smallconst   000331
__end_of_phasesPhaseAngle             smallconst   00031F
__end_of_phasesPower1                 smallconst   000319
__end_of_phasesPower2                 smallconst   00032B
__end_of_phasesPowerFactor            smallconst   00033D
__end_of_phasesRmsVI                  smallconst   000325
__end_of_phasesTemperature            smallconst   000335
__end_of_showFrequency                text30       00090C
__end_of_showTemperature              text10       0008F4
__end_of_stateFrequency               text1        0005AC
__end_of_stateMainMenu                text7        000804
__end_of_statePhaseAngle              text2        000604
__end_of_statePower1                  text6        00070C
__end_of_statePower2                  text5        0006B4
__end_of_statePowerFactor             text3        0007B4
__end_of_stateRmsVI                   text4        00065C
__end_of_stateTemperature             text8        000764
__end_of_typesPower1                  text21       0009E8
__end_of_vectorPower1                 text22       0009FE
__end_of_viPhaseAngle                 text25       000A40
__end_of_viewMenu                     text28       000AB0
__initialization                      cinit        0008BA
__mediumconst                         mediumconst  000000
__pbssBANK0                           bssBANK0     000060
__pbssCOMRAM                          bssCOMRAM    000001
__pcinit                              cinit        0008BA
__pcstackCOMRAM                       cstackCOMRAM 000054
__psmallconst                         smallconst   000300
__ptext0                              text0        0004FA
__ptext1                              text1        000554
__ptext10                             text10       0008DC
__ptext11                             text11       000922
__ptext12                             text12       000938
__ptext13                             text13       00094E
__ptext14                             text14       000A56
__ptext15                             text15       000A68
__ptext16                             text16       000964
__ptext17                             text17       00097A
__ptext18                             text18       000990
__ptext19                             text19       0009A6
__ptext2                              text2        0005AC
__ptext20                             text20       0009BC
__ptext21                             text21       0009D2
__ptext22                             text22       0009E8
__ptext23                             text23       0009FE
__ptext24                             text24       000A14
__ptext25                             text25       000A2A
__ptext26                             text26       000A7A
__ptext27                             text27       000A8C
__ptext28                             text28       000A9E
__ptext29                             text29       000A40
__ptext3                              text3        000764
__ptext30                             text30       0008F4
__ptext31                             text31       00041E
__ptext32                             text32       000342
__ptext33                             text33       000804
__ptext34                             text34       00088A
__ptext35                             text35       00084C
__ptext36                             text36       00049A
__ptext37                             text37       000000
__ptext4                              text4        000604
__ptext5                              text5        00065C
__ptext6                              text6        0006B4
__ptext7                              text7        0007B4
__ptext8                              text8        00070C
__ptext9                              text9        00090C
__ramtop                              ramtop       000300
__size_of_GPIO_dataDirectionPIN       (abs)        000000
__size_of_GPIO_sourceClock            (abs)        000000
__size_of_SPI_enableClock             (abs)        000000
__size_of_SPI_enablePins              (abs)        000000
__size_of_SPI_init                    (abs)        000000
__size_of_UART_init                   (abs)        000000
__size_of_exitFrequency               (abs)        000000
__size_of_exitPhaseAngle              (abs)        000000
__size_of_exitPower1                  (abs)        000000
__size_of_exitPower2                  (abs)        000000
__size_of_exitPowerFactor             (abs)        000000
__size_of_exitRmsVI                   (abs)        000000
__size_of_exitTemperature             (abs)        000000
__size_of_fhPower2                    (abs)        000000
__size_of_generalView                 (abs)        000000
__size_of_initialLoad                 (abs)        000000
__size_of_main                        (abs)        000000
__size_of_neutralRmsVI                (abs)        000000
__size_of_phPhaseAngle                (abs)        000000
__size_of_phPower1                    (abs)        000000
__size_of_phPower2                    (abs)        000000
__size_of_phPowerFactor               (abs)        000000
__size_of_phRmsVI                     (abs)        000000
__size_of_showFrequency               (abs)        000000
__size_of_showTemperature             (abs)        000000
__size_of_stateFrequency              (abs)        000000
__size_of_stateMainMenu               (abs)        000000
__size_of_statePhaseAngle             (abs)        000000
__size_of_statePower1                 (abs)        000000
__size_of_statePower2                 (abs)        000000
__size_of_statePowerFactor            (abs)        000000
__size_of_stateRmsVI                  (abs)        000000
__size_of_stateTemperature            (abs)        000000
__size_of_typesPower1                 (abs)        000000
__size_of_vectorPower1                (abs)        000000
__size_of_viPhaseAngle                (abs)        000000
__size_of_viewMenu                    (abs)        000000
__smallconst                          smallconst   000300
_exitFrequency                        text29       000A40
_exitPhaseAngle                       text23       0009FE
_exitPower1                           text19       0009A6
_exitPower2                           text16       000964
_exitPowerFactor                      text14       000A56
_exitRmsVI                            text11       000922
_exitTemperature                      text9        00090C
_fhPower2                             text17       00097A
_generalView                          text26       000A7A
_initialLoad                          text27       000A8C
_main                                 text0        0004FA
_neutralRmsVI                         text12       000938
_phPhaseAngle                         text24       000A14
_phPower1                             text20       0009BC
_phPower2                             text18       000990
_phPowerFactor                        text15       000A68
_phRmsVI                              text13       00094E
_phasesFrequency                      smallconst   000335
_phasesMainMenu                       smallconst   00032B
_phasesPhaseAngle                     smallconst   000319
_phasesPower1                         smallconst   000311
_phasesPower2                         smallconst   000325
_phasesPowerFactor                    smallconst   000339
_phasesRmsVI                          smallconst   00031F
_phasesTemperature                    smallconst   000331
_showFrequency                        text30       0008F4
_showTemperature                      text10       0008DC
_stateFrequency                       text1        000554
_stateMainMenu                        text7        0007B4
_statePhaseAngle                      text2        0005AC
_statePower1                          text6        0006B4
_statePower2                          text5        00065C
_statePowerFactor                     text3        000764
_stateRmsVI                           text4        000604
_stateTemperature                     text8        00070C
_typesPower1                          text21       0009D2
_vectorPower1                         text22       0009E8
_viPhaseAngle                         text25       000A2A
_viewMenu                             text28       000A9E
end_of_initialization                 cinit        0008D2
exitFrequency@currentFrequency2       bssBANK0     000066
exitFrequency@data                    cstackCOMRAM 000054
exitPhaseAngle@currentPhaseAngle3     bssCOMRAM    000005
exitPhaseAngle@data                   cstackCOMRAM 000054
exitPower1@currentPower1_4            bssCOMRAM    000020
exitPower1@data                       cstackCOMRAM 000054
exitPower2@currentPower2_3            bssCOMRAM    000017
exitPower2@data                       cstackCOMRAM 000054
exitPowerFactor@currentPowerFactor2   bssCOMRAM    00003E
exitPowerFactor@data                  cstackCOMRAM 000054
exitRmsVI@currentRms3                 bssCOMRAM    00000E
exitRmsVI@data                        cstackCOMRAM 000054
exitTemperature@currentTemperature2   bssBANK0     000060
exitTemperature@data                  cstackCOMRAM 000054
expBASE10@value                       bssCOMRAM    000001
fhPower2@currentPower2_1              bssCOMRAM    00001D
fhPower2@data                         cstackCOMRAM 000054
generalView@currentMainMenu2          bssCOMRAM    000044
generalView@data                      cstackCOMRAM 000054
initialLoad@currentMainMenu1          bssCOMRAM    000046
initialLoad@data                      cstackCOMRAM 000054
intlevel0                             text         000000
intlevel1                             text         000000
intlevel2                             text         000000
intlevel3                             text         000000
main@currentState                     cstackCOMRAM 00005F
main@mainFunctions                    cstackCOMRAM 00005D
neutralRmsVI@currentRms2              bssCOMRAM    000011
neutralRmsVI@data                     cstackCOMRAM 000054
phPhaseAngle@currentPhaseAngle1       bssCOMRAM    00000B
phPhaseAngle@data                     cstackCOMRAM 000054
phPower1@currentPower1_2              bssCOMRAM    000026
phPower1@data                         cstackCOMRAM 000054
phPower2@currentPower2_2              bssCOMRAM    00001A
phPower2@data                         cstackCOMRAM 000054
phPowerFactor@currentPowerFactor1     bssCOMRAM    000040
phPowerFactor@data                    cstackCOMRAM 000054
phRmsVI@currentRms1                   bssCOMRAM    000014
phRmsVI@data                          cstackCOMRAM 000054
showFrequency@currentFrequency1       bssBANK0     000069
showFrequency@data                    cstackCOMRAM 000054
showTemperature@currentTemperature1   bssBANK0     000063
showTemperature@data                  cstackCOMRAM 000054
stackhi                               (abs)        0002FF
stacklo                               (abs)        00006C
start                                 init         000000
start_initialization                  cinit        0008BA
stateFrequency@frequencyFunctions     cstackCOMRAM 000057
stateFrequency@phase                  bssCOMRAM    00004D
stateFrequency@phaseFrequency         bssCOMRAM    00002F
stateMainMenu@mainMenuFunctions       cstackCOMRAM 000056
stateMainMenu@phase                   bssCOMRAM    000053
stateMainMenu@phaseMain               bssCOMRAM    00004A
statePhaseAngle@phase                 bssCOMRAM    00004E
statePhaseAngle@phaseAngleFunctions   cstackCOMRAM 000057
statePhaseAngle@phasePhaseAngle       bssCOMRAM    000032
statePower1@phase                     bssCOMRAM    000052
statePower1@phasePower1               bssCOMRAM    00003B
statePower1@power1Functions           cstackCOMRAM 000057
statePower2@phase                     bssCOMRAM    000051
statePower2@phasePower2               bssCOMRAM    000038
statePower2@power2Functions           cstackCOMRAM 000057
statePowerFactor@phase                bssCOMRAM    00004F
statePowerFactor@phasePowerFactor     bssCOMRAM    000048
statePowerFactor@powerFactorFunctions cstackCOMRAM 000056
stateRmsVI@phase                      bssCOMRAM    000050
stateRmsVI@phaseRmsVI                 bssCOMRAM    000035
stateRmsVI@rmsVIFunctions             cstackCOMRAM 000057
stateTemperature@phase                bssCOMRAM    00004C
stateTemperature@phaseTemperature     bssCOMRAM    00002C
stateTemperature@temperatureFunctions cstackCOMRAM 000057
typesPower1@currentPower1_1           bssCOMRAM    000029
typesPower1@data                      cstackCOMRAM 000054
vectorPower1@currentPower1_3          bssCOMRAM    000023
vectorPower1@data                     cstackCOMRAM 000054
viPhaseAngle@currentPhaseAngle2       bssCOMRAM    000008
viPhaseAngle@data                     cstackCOMRAM 000054
viewMenu@currentMainMenu3             bssCOMRAM    000042
viewMenu@data                         cstackCOMRAM 000054


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  mainFunction    2    9[COMRAM] PTR FTN()enum E3139
		 -> stateTemperature(1), stateFrequency(1), statePhaseAngle(1), statePowerFactor(1), 
		 -> stateRmsVI(1), statePower2(1), statePower1(1), stateMainMenu(1), 
  currentState    1   11[COMRAM] enum E3139
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_GPIO_sourceClock
		_SPI_init
		_UART_init
		_stateFrequency
		_stateMainMenu
		_statePhaseAngle
		_statePower1
		_statePower2
		_statePowerFactor
		_stateRmsVI
		_stateTemperature
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _stateFrequency *****************
 Defined at:
		line 169 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  frequencyFun    2    3[COMRAM] PTR FTN(struct .,)struct
		 -> exitFrequency(3), showFrequency(3), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitFrequency
		_showFrequency
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _statePhaseAngle *****************
 Defined at:
		line 152 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  phaseAngleFu    2    3[COMRAM] PTR FTN(struct .,)struct
		 -> exitPhaseAngle(3), viPhaseAngle(3), phPhaseAngle(3), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitPhaseAngle
		_phPhaseAngle
		_viPhaseAngle
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _statePowerFactor *****************
 Defined at:
		line 135 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  powerFactorF    2    2[COMRAM] PTR FTN(struct .,)struct
		 -> exitPowerFactor(2), phPowerFactor(2), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitPowerFactor
		_phPowerFactor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stateRmsVI *****************
 Defined at:
		line 118 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rmsVIFunctio    2    3[COMRAM] PTR FTN(struct .,)struct
		 -> exitRmsVI(3), neutralRmsVI(3), phRmsVI(3), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitRmsVI
		_neutralRmsVI
		_phRmsVI
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _statePower2 *****************
 Defined at:
		line 101 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  power2Functi    2    3[COMRAM] PTR FTN(struct .,)struct
		 -> exitPower2(3), phPower2(3), fhPower2(3), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitPower2
		_fhPower2
		_phPower2
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _statePower1 *****************
 Defined at:
		line 84 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  power1Functi    2    3[COMRAM] PTR FTN(struct .,)struct
		 -> exitPower1(3), vectorPower1(3), phPower1(3), typesPower1(3), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitPower1
		_phPower1
		_typesPower1
		_vectorPower1
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stateMainMenu *****************
 Defined at:
		line 67 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  mainMenuFunc    2    2[COMRAM] PTR FTN(struct .,)struct
		 -> viewMenu(2), generalView(2), initialLoad(2), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_generalView
		_initialLoad
		_viewMenu
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stateTemperature *****************
 Defined at:
		line 186 in file "States.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temperatureF    2    3[COMRAM] PTR FTN(struct .,)struct
		 -> exitTemperature(3), showTemperature(3), 
 Return value:  Size  Location     Type
                  1    wreg      enum E3139
 Registers used:
		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_exitTemperature
		_showTemperature
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _exitTemperature *****************
 Defined at:
		line 259 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateTemperature
 This function uses a non-reentrant model


 *************** function _showTemperature *****************
 Defined at:
		line 247 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateTemperature
 This function uses a non-reentrant model


 *************** function _exitRmsVI *****************
 Defined at:
		line 151 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateRmsVI
 This function uses a non-reentrant model


 *************** function _neutralRmsVI *****************
 Defined at:
		line 139 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateRmsVI
 This function uses a non-reentrant model


 *************** function _phRmsVI *****************
 Defined at:
		line 127 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateRmsVI
 This function uses a non-reentrant model


 *************** function _exitPowerFactor *****************
 Defined at:
		line 175 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePowerFactor
 This function uses a non-reentrant model


 *************** function _phPowerFactor *****************
 Defined at:
		line 163 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePowerFactor
 This function uses a non-reentrant model


 *************** function _exitPower2 *****************
 Defined at:
		line 115 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower2
 This function uses a non-reentrant model


 *************** function _fhPower2 *****************
 Defined at:
		line 91 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower2
 This function uses a non-reentrant model


 *************** function _phPower2 *****************
 Defined at:
		line 103 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower2
 This function uses a non-reentrant model


 *************** function _exitPower1 *****************
 Defined at:
		line 79 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower1
 This function uses a non-reentrant model


 *************** function _phPower1 *****************
 Defined at:
		line 55 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower1
 This function uses a non-reentrant model


 *************** function _typesPower1 *****************
 Defined at:
		line 43 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower1
 This function uses a non-reentrant model


 *************** function _vectorPower1 *****************
 Defined at:
		line 67 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePower1
 This function uses a non-reentrant model


 *************** function _exitPhaseAngle *****************
 Defined at:
		line 211 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePhaseAngle
 This function uses a non-reentrant model


 *************** function _phPhaseAngle *****************
 Defined at:
		line 187 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePhaseAngle
 This function uses a non-reentrant model


 *************** function _viPhaseAngle *****************
 Defined at:
		line 199 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_statePhaseAngle
 This function uses a non-reentrant model


 *************** function _generalView *****************
 Defined at:
		line 19 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateMainMenu
 This function uses a non-reentrant model


 *************** function _initialLoad *****************
 Defined at:
		line 4 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateMainMenu
 This function uses a non-reentrant model


 *************** function _viewMenu *****************
 Defined at:
		line 31 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateMainMenu
 This function uses a non-reentrant model


 *************** function _exitFrequency *****************
 Defined at:
		line 235 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateFrequency
 This function uses a non-reentrant model


 *************** function _showFrequency *****************
 Defined at:
		line 223 in file "Phases.c"
 Parameters:    Size  Location     Type
  data            3    0[COMRAM] struct .
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] struct .
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stateFrequency
 This function uses a non-reentrant model


 *************** function _UART_init *****************
 Defined at:
		line 11 in file "UART.c"
 Parameters:    Size  Location     Type
  baudRate        2    5[COMRAM] enum E3061
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_GPIO_dataDirectionPIN
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GPIO_dataDirectionPIN *****************
 Defined at:
		line 51 in file "GPIO.c"
 Parameters:    Size  Location     Type
  portName        1    wreg     enum E3075
  pin             1    0[COMRAM] unsigned char 
  state           1    1[COMRAM] enum E3071
 Auto vars:     Size  Location     Type
  portName        1    4[COMRAM] enum E3075
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_UART_init
 This function uses a non-reentrant model


 *************** function _SPI_init *****************
 Defined at:
		line 76 in file "SPI.c"
 Parameters:    Size  Location     Type
  SPI_Config      2    2[COMRAM] PTR const struct .
		 -> SPI_Config(3), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_SPI_enableClock
		_SPI_enablePins
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SPI_enablePins *****************
 Defined at:
		line 48 in file "SPI.c"
 Parameters:    Size  Location     Type
  serial          1    wreg     enum E3069
 Auto vars:     Size  Location     Type
  serial          1    0[COMRAM] enum E3069
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPI_init
 This function uses a non-reentrant model


 *************** function _SPI_enableClock *****************
 Defined at:
		line 14 in file "SPI.c"
 Parameters:    Size  Location     Type
  phase           1    wreg     enum E3065
  cpol            1    0[COMRAM] enum E3061
 Auto vars:     Size  Location     Type
  phase           1    1[COMRAM] enum E3065
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPI_init
 This function uses a non-reentrant model


 *************** function _GPIO_sourceClock *****************
 Defined at:
		line 18 in file "GPIO.c"
 Parameters:    Size  Location     Type
  clk             1    wreg     enum E3061
 Auto vars:     Size  Location     Type
  clk             1    0[COMRAM] enum E3061
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
UART.c
		_UART_init     		CODE           	041E	0000	125

UART.c estimated size: 125

Phases.c
		_fhPower2      		CODE           	097A	0000	23
		_exitPower1    		CODE           	09A6	0000	23
		_exitPower2    		CODE           	0964	0000	23
		_generalView   		CODE           	0A7A	0000	19
		_typesPower1   		CODE           	09D2	0000	23
		_exitFrequency 		CODE           	0A40	0000	23
		_phPower1      		CODE           	09BC	0000	23
		_phPower2      		CODE           	0990	0000	23
		_vectorPower1  		CODE           	09E8	0000	23
		_phPowerFactor 		CODE           	0A68	0000	19
		_showTemperature		CODE           	08DC	0000	25
		_showFrequency 		CODE           	08F4	0000	25
		_exitPowerFactor		CODE           	0A56	0000	19
		_phPhaseAngle  		CODE           	0A14	0000	23
		_neutralRmsVI  		CODE           	0938	0000	23
		_exitPhaseAngle		CODE           	09FE	0000	23
		_viPhaseAngle  		CODE           	0A2A	0000	23
		_initialLoad   		CODE           	0A8C	0000	19
		_viewMenu      		CODE           	0A9E	0000	19
		_exitRmsVI     		CODE           	0922	0000	23
		_exitTemperature		CODE           	090C	0000	23
		_phRmsVI       		CODE           	094E	0000	23

Phases.c estimated size: 490

shared
		_phasesFrequency		SMALLCONST     	0335	0000	5
		_SPI_Config    		SMALLCONST     	033D	0000	4
		__initialization		CODE           	08BA	0000	25
		_phasesPower1  		SMALLCONST     	0311	0000	9
		_phasesPower2  		SMALLCONST     	0325	0000	7
		_phasesTemperature		SMALLCONST     	0331	0000	5
		_phasesPhaseAngle		SMALLCONST     	0319	0000	7
		_phasesMainMenu		SMALLCONST     	032B	0000	7
		_phasesPowerFactor		SMALLCONST     	0339	0000	5
		_phasesRmsVI   		SMALLCONST     	031F	0000	7
		_StateProgram  		SMALLCONST     	0301	0000	17

shared estimated size: 98

GPIO.c
		_GPIO_dataDirectionPIN		CODE           	0342	0000	221
		_GPIO_sourceClock		CODE           	049A	0000	97

GPIO.c estimated size: 318

SPI.c
		_SPI_init      		CODE           	0804	0000	73
		_SPI_enablePins		CODE           	088A	0000	49
		_SPI_enableClock		CODE           	084C	0000	63

SPI.c estimated size: 185

States.c
		_stateFrequency		CODE           	0554	0000	89
		_statePower1   		CODE           	06B4	0000	89
		_statePower2   		CODE           	065C	0000	89
		_statePowerFactor		CODE           	0764	0000	81
		_stateRmsVI    		CODE           	0604	0000	89
		_stateMainMenu 		CODE           	07B4	0000	81
		_stateTemperature		CODE           	070C	0000	89
		_statePhaseAngle		CODE           	05AC	0000	89

States.c estimated size: 696

main.c
		_main          		CODE           	04FA	0000	91

main.c estimated size: 91

