

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Jun 05 20:15:48 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 1.44
    36                           ; Generated 14/09/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F2331 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70 ;; Function _stateMainMenu is unused but had its address taken
    71  0000                     
    72 ;; Function _statePower1 is unused but had its address taken
    73  0000                     
    74 ;; Function _statePower2 is unused but had its address taken
    75  0000                     
    76 ;; Function _stateRmsVI is unused but had its address taken
    77  0000                     
    78 ;; Function _statePowerFactor is unused but had its address taken
    79  0000                     
    80 ;; Function _statePhaseAngle is unused but had its address taken
    81  0000                     
    82 ;; Function _stateFrequency is unused but had its address taken
    83  0000                     
    84 ;; Function _stateTemperature is unused but had its address taken
    85  0000                     
    86 ;; Function _initialLoad is unused but had its address taken
    87  0000                     
    88 ;; Function _generalView is unused but had its address taken
    89  0000                     
    90 ;; Function _viewMenu is unused but had its address taken
    91  0000                     
    92 ;; Function _typesPower1 is unused but had its address taken
    93  0000                     
    94 ;; Function _phPower1 is unused but had its address taken
    95  0000                     
    96 ;; Function _vectorPower1 is unused but had its address taken
    97  0000                     
    98 ;; Function _exitPower1 is unused but had its address taken
    99  0000                     
   100 ;; Function _fhPower2 is unused but had its address taken
   101  0000                     
   102 ;; Function _phPower2 is unused but had its address taken
   103  0000                     
   104 ;; Function _exitPower2 is unused but had its address taken
   105  0000                     
   106 ;; Function _phRmsVI is unused but had its address taken
   107  0000                     
   108 ;; Function _neutralRmsVI is unused but had its address taken
   109  0000                     
   110 ;; Function _exitRmsVI is unused but had its address taken
   111  0000                     
   112 ;; Function _phPowerFactor is unused but had its address taken
   113  0000                     
   114 ;; Function _exitPowerFactor is unused but had its address taken
   115  0000                     
   116 ;; Function _phPhaseAngle is unused but had its address taken
   117  0000                     
   118 ;; Function _viPhaseAngle is unused but had its address taken
   119  0000                     
   120 ;; Function _exitPhaseAngle is unused but had its address taken
   121  0000                     
   122 ;; Function _showFrequency is unused but had its address taken
   123  0000                     
   124 ;; Function _exitFrequency is unused but had its address taken
   125  0000                     
   126 ;; Function _showTemperature is unused but had its address taken
   127  0000                     
   128 ;; Function _exitTemperature is unused but had its address taken
   129  0000                     
   130                           	psect	idataBANK0
   131  000692                     __pidataBANK0:
   132                           	opt stack 0
   133                           
   134                           ;initializer for main@F3282
   135  000692  48                 	db	72
   136  000693  6F                 	db	111
   137  000694  6C                 	db	108
   138  000695  61                 	db	97
   139  000696  20                 	db	32
   140  000697  4D                 	db	77
   141  000698  75                 	db	117
   142  000699  6E                 	db	110
   143  00069A  64                 	db	100
   144  00069B  6F                 	db	111
   145  00069C  00                 	db	0
   146                           
   147                           	psect	mediumconst
   148  001DDE                     __pmediumconst:
   149                           	opt stack 0
   150  001DDE  00                 	db	0
   151  001DDF                     _ASCII:
   152                           	opt stack 0
   153  001DDF  00                 	db	0
   154  001DE0  00                 	db	0
   155  001DE1  00                 	db	0
   156  001DE2  00                 	db	0
   157  001DE3  00                 	db	0
   158  001DE4  00                 	db	0
   159  001DE5  00                 	db	0
   160  001DE6  5F                 	db	95
   161  001DE7  00                 	db	0
   162  001DE8  00                 	db	0
   163  001DE9  00                 	db	0
   164  001DEA  07                 	db	7
   165  001DEB  00                 	db	0
   166  001DEC  07                 	db	7
   167  001DED  00                 	db	0
   168  001DEE  14                 	db	20
   169  001DEF  7F                 	db	127
   170  001DF0  14                 	db	20
   171  001DF1  7F                 	db	127
   172  001DF2  14                 	db	20
   173  001DF3  24                 	db	36
   174  001DF4  2A                 	db	42
   175  001DF5  7F                 	db	127
   176  001DF6  2A                 	db	42
   177  001DF7  12                 	db	18
   178  001DF8  23                 	db	35
   179  001DF9  13                 	db	19
   180  001DFA  08                 	db	8
   181  001DFB  64                 	db	100
   182  001DFC  62                 	db	98
   183  001DFD  36                 	db	54
   184  001DFE  49                 	db	73
   185  001DFF  55                 	db	85
   186  001E00  22                 	db	34
   187  001E01  50                 	db	80
   188  001E02  00                 	db	0
   189  001E03  05                 	db	5
   190  001E04  03                 	db	3
   191  001E05  00                 	db	0
   192  001E06  00                 	db	0
   193  001E07  00                 	db	0
   194  001E08  1C                 	db	28
   195  001E09  22                 	db	34
   196  001E0A  41                 	db	65
   197  001E0B  00                 	db	0
   198  001E0C  00                 	db	0
   199  001E0D  41                 	db	65
   200  001E0E  22                 	db	34
   201  001E0F  1C                 	db	28
   202  001E10  00                 	db	0
   203  001E11  14                 	db	20
   204  001E12  08                 	db	8
   205  001E13  3E                 	db	62
   206  001E14  08                 	db	8
   207  001E15  14                 	db	20
   208  001E16  08                 	db	8
   209  001E17  08                 	db	8
   210  001E18  3E                 	db	62
   211  001E19  08                 	db	8
   212  001E1A  08                 	db	8
   213  001E1B  00                 	db	0
   214  001E1C  50                 	db	80
   215  001E1D  30                 	db	48
   216  001E1E  00                 	db	0
   217  001E1F  00                 	db	0
   218  001E20  08                 	db	8
   219  001E21  08                 	db	8
   220  001E22  08                 	db	8
   221  001E23  08                 	db	8
   222  001E24  08                 	db	8
   223  001E25  00                 	db	0
   224  001E26  60                 	db	96
   225  001E27  60                 	db	96
   226  001E28  00                 	db	0
   227  001E29  00                 	db	0
   228  001E2A  20                 	db	32
   229  001E2B  10                 	db	16
   230  001E2C  08                 	db	8
   231  001E2D  04                 	db	4
   232  001E2E  02                 	db	2
   233  001E2F  3E                 	db	62
   234  001E30  51                 	db	81
   235  001E31  49                 	db	73
   236  001E32  45                 	db	69
   237  001E33  3E                 	db	62
   238  001E34  00                 	db	0
   239  001E35  42                 	db	66
   240  001E36  7F                 	db	127
   241  001E37  40                 	db	64
   242  001E38  00                 	db	0
   243  001E39  42                 	db	66
   244  001E3A  61                 	db	97
   245  001E3B  51                 	db	81
   246  001E3C  49                 	db	73
   247  001E3D  46                 	db	70
   248  001E3E  21                 	db	33
   249  001E3F  41                 	db	65
   250  001E40  45                 	db	69
   251  001E41  4B                 	db	75
   252  001E42  31                 	db	49
   253  001E43  18                 	db	24
   254  001E44  14                 	db	20
   255  001E45  12                 	db	18
   256  001E46  7F                 	db	127
   257  001E47  10                 	db	16
   258  001E48  27                 	db	39
   259  001E49  45                 	db	69
   260  001E4A  45                 	db	69
   261  001E4B  45                 	db	69
   262  001E4C  39                 	db	57
   263  001E4D  3C                 	db	60
   264  001E4E  4A                 	db	74
   265  001E4F  49                 	db	73
   266  001E50  49                 	db	73
   267  001E51  30                 	db	48
   268  001E52  01                 	db	1
   269  001E53  71                 	db	113
   270  001E54  09                 	db	9
   271  001E55  05                 	db	5
   272  001E56  03                 	db	3
   273  001E57  36                 	db	54
   274  001E58  49                 	db	73
   275  001E59  49                 	db	73
   276  001E5A  49                 	db	73
   277  001E5B  36                 	db	54
   278  001E5C  06                 	db	6
   279  001E5D  49                 	db	73
   280  001E5E  49                 	db	73
   281  001E5F  29                 	db	41
   282  001E60  1E                 	db	30
   283  001E61  00                 	db	0
   284  001E62  36                 	db	54
   285  001E63  36                 	db	54
   286  001E64  00                 	db	0
   287  001E65  00                 	db	0
   288  001E66  00                 	db	0
   289  001E67  56                 	db	86
   290  001E68  36                 	db	54
   291  001E69  00                 	db	0
   292  001E6A  00                 	db	0
   293  001E6B  08                 	db	8
   294  001E6C  14                 	db	20
   295  001E6D  22                 	db	34
   296  001E6E  41                 	db	65
   297  001E6F  00                 	db	0
   298  001E70  14                 	db	20
   299  001E71  14                 	db	20
   300  001E72  14                 	db	20
   301  001E73  14                 	db	20
   302  001E74  14                 	db	20
   303  001E75  00                 	db	0
   304  001E76  41                 	db	65
   305  001E77  22                 	db	34
   306  001E78  14                 	db	20
   307  001E79  08                 	db	8
   308  001E7A  02                 	db	2
   309  001E7B  01                 	db	1
   310  001E7C  51                 	db	81
   311  001E7D  09                 	db	9
   312  001E7E  06                 	db	6
   313  001E7F  32                 	db	50
   314  001E80  49                 	db	73
   315  001E81  79                 	db	121
   316  001E82  41                 	db	65
   317  001E83  3E                 	db	62
   318  001E84  7E                 	db	126
   319  001E85  11                 	db	17
   320  001E86  11                 	db	17
   321  001E87  11                 	db	17
   322  001E88  7E                 	db	126
   323  001E89  7F                 	db	127
   324  001E8A  49                 	db	73
   325  001E8B  49                 	db	73
   326  001E8C  49                 	db	73
   327  001E8D  36                 	db	54
   328  001E8E  3E                 	db	62
   329  001E8F  41                 	db	65
   330  001E90  41                 	db	65
   331  001E91  41                 	db	65
   332  001E92  22                 	db	34
   333  001E93  7F                 	db	127
   334  001E94  41                 	db	65
   335  001E95  41                 	db	65
   336  001E96  22                 	db	34
   337  001E97  1C                 	db	28
   338  001E98  7F                 	db	127
   339  001E99  49                 	db	73
   340  001E9A  49                 	db	73
   341  001E9B  49                 	db	73
   342  001E9C  41                 	db	65
   343  001E9D  7F                 	db	127
   344  001E9E  09                 	db	9
   345  001E9F  09                 	db	9
   346  001EA0  09                 	db	9
   347  001EA1  01                 	db	1
   348  001EA2  3E                 	db	62
   349  001EA3  41                 	db	65
   350  001EA4  49                 	db	73
   351  001EA5  49                 	db	73
   352  001EA6  7A                 	db	122
   353  001EA7  7F                 	db	127
   354  001EA8  08                 	db	8
   355  001EA9  08                 	db	8
   356  001EAA  08                 	db	8
   357  001EAB  7F                 	db	127
   358  001EAC  00                 	db	0
   359  001EAD  41                 	db	65
   360  001EAE  7F                 	db	127
   361  001EAF  41                 	db	65
   362  001EB0  00                 	db	0
   363  001EB1  20                 	db	32
   364  001EB2  40                 	db	64
   365  001EB3  41                 	db	65
   366  001EB4  3F                 	db	63
   367  001EB5  01                 	db	1
   368  001EB6  7F                 	db	127
   369  001EB7  08                 	db	8
   370  001EB8  14                 	db	20
   371  001EB9  22                 	db	34
   372  001EBA  41                 	db	65
   373  001EBB  7F                 	db	127
   374  001EBC  40                 	db	64
   375  001EBD  40                 	db	64
   376  001EBE  40                 	db	64
   377  001EBF  40                 	db	64
   378  001EC0  7F                 	db	127
   379  001EC1  02                 	db	2
   380  001EC2  0C                 	db	12
   381  001EC3  02                 	db	2
   382  001EC4  7F                 	db	127
   383  001EC5  7F                 	db	127
   384  001EC6  04                 	db	4
   385  001EC7  08                 	db	8
   386  001EC8  10                 	db	16
   387  001EC9  7F                 	db	127
   388  001ECA  3E                 	db	62
   389  001ECB  41                 	db	65
   390  001ECC  41                 	db	65
   391  001ECD  41                 	db	65
   392  001ECE  3E                 	db	62
   393  001ECF  7F                 	db	127
   394  001ED0  09                 	db	9
   395  001ED1  09                 	db	9
   396  001ED2  09                 	db	9
   397  001ED3  06                 	db	6
   398  001ED4  3E                 	db	62
   399  001ED5  41                 	db	65
   400  001ED6  51                 	db	81
   401  001ED7  21                 	db	33
   402  001ED8  5E                 	db	94
   403  001ED9  7F                 	db	127
   404  001EDA  09                 	db	9
   405  001EDB  19                 	db	25
   406  001EDC  29                 	db	41
   407  001EDD  46                 	db	70
   408  001EDE  46                 	db	70
   409  001EDF  49                 	db	73
   410  001EE0  49                 	db	73
   411  001EE1  49                 	db	73
   412  001EE2  31                 	db	49
   413  001EE3  01                 	db	1
   414  001EE4  01                 	db	1
   415  001EE5  7F                 	db	127
   416  001EE6  01                 	db	1
   417  001EE7  01                 	db	1
   418  001EE8  3F                 	db	63
   419  001EE9  40                 	db	64
   420  001EEA  40                 	db	64
   421  001EEB  40                 	db	64
   422  001EEC  3F                 	db	63
   423  001EED  1F                 	db	31
   424  001EEE  20                 	db	32
   425  001EEF  40                 	db	64
   426  001EF0  20                 	db	32
   427  001EF1  1F                 	db	31
   428  001EF2  3F                 	db	63
   429  001EF3  40                 	db	64
   430  001EF4  38                 	db	56
   431  001EF5  40                 	db	64
   432  001EF6  3F                 	db	63
   433  001EF7  63                 	db	99
   434  001EF8  14                 	db	20
   435  001EF9  08                 	db	8
   436  001EFA  14                 	db	20
   437  001EFB  63                 	db	99
   438  001EFC  07                 	db	7
   439  001EFD  08                 	db	8
   440  001EFE  70                 	db	112
   441  001EFF  08                 	db	8
   442  001F00  07                 	db	7
   443  001F01  61                 	db	97
   444  001F02  51                 	db	81
   445  001F03  49                 	db	73
   446  001F04  45                 	db	69
   447  001F05  43                 	db	67
   448  001F06  00                 	db	0
   449  001F07  7F                 	db	127
   450  001F08  41                 	db	65
   451  001F09  41                 	db	65
   452  001F0A  00                 	db	0
   453  001F0B  02                 	db	2
   454  001F0C  04                 	db	4
   455  001F0D  08                 	db	8
   456  001F0E  10                 	db	16
   457  001F0F  20                 	db	32
   458  001F10  00                 	db	0
   459  001F11  41                 	db	65
   460  001F12  41                 	db	65
   461  001F13  7F                 	db	127
   462  001F14  00                 	db	0
   463  001F15  04                 	db	4
   464  001F16  02                 	db	2
   465  001F17  01                 	db	1
   466  001F18  02                 	db	2
   467  001F19  04                 	db	4
   468  001F1A  40                 	db	64
   469  001F1B  40                 	db	64
   470  001F1C  40                 	db	64
   471  001F1D  40                 	db	64
   472  001F1E  40                 	db	64
   473  001F1F  00                 	db	0
   474  001F20  01                 	db	1
   475  001F21  02                 	db	2
   476  001F22  04                 	db	4
   477  001F23  00                 	db	0
   478  001F24  20                 	db	32
   479  001F25  54                 	db	84
   480  001F26  54                 	db	84
   481  001F27  54                 	db	84
   482  001F28  78                 	db	120
   483  001F29  7F                 	db	127
   484  001F2A  48                 	db	72
   485  001F2B  44                 	db	68
   486  001F2C  44                 	db	68
   487  001F2D  38                 	db	56
   488  001F2E  38                 	db	56
   489  001F2F  44                 	db	68
   490  001F30  44                 	db	68
   491  001F31  44                 	db	68
   492  001F32  20                 	db	32
   493  001F33  38                 	db	56
   494  001F34  44                 	db	68
   495  001F35  44                 	db	68
   496  001F36  48                 	db	72
   497  001F37  7F                 	db	127
   498  001F38  38                 	db	56
   499  001F39  54                 	db	84
   500  001F3A  54                 	db	84
   501  001F3B  54                 	db	84
   502  001F3C  18                 	db	24
   503  001F3D  08                 	db	8
   504  001F3E  7E                 	db	126
   505  001F3F  09                 	db	9
   506  001F40  01                 	db	1
   507  001F41  02                 	db	2
   508  001F42  0C                 	db	12
   509  001F43  52                 	db	82
   510  001F44  52                 	db	82
   511  001F45  52                 	db	82
   512  001F46  3E                 	db	62
   513  001F47  7F                 	db	127
   514  001F48  08                 	db	8
   515  001F49  04                 	db	4
   516  001F4A  04                 	db	4
   517  001F4B  78                 	db	120
   518  001F4C  00                 	db	0
   519  001F4D  44                 	db	68
   520  001F4E  7D                 	db	125
   521  001F4F  40                 	db	64
   522  001F50  00                 	db	0
   523  001F51  20                 	db	32
   524  001F52  40                 	db	64
   525  001F53  44                 	db	68
   526  001F54  3D                 	db	61
   527  001F55  00                 	db	0
   528  001F56  7F                 	db	127
   529  001F57  10                 	db	16
   530  001F58  28                 	db	40
   531  001F59  44                 	db	68
   532  001F5A  00                 	db	0
   533  001F5B  00                 	db	0
   534  001F5C  41                 	db	65
   535  001F5D  7F                 	db	127
   536  001F5E  40                 	db	64
   537  001F5F  00                 	db	0
   538  001F60  7C                 	db	124
   539  001F61  04                 	db	4
   540  001F62  18                 	db	24
   541  001F63  04                 	db	4
   542  001F64  78                 	db	120
   543  001F65  7C                 	db	124
   544  001F66  08                 	db	8
   545  001F67  04                 	db	4
   546  001F68  04                 	db	4
   547  001F69  78                 	db	120
   548  001F6A  38                 	db	56
   549  001F6B  44                 	db	68
   550  001F6C  44                 	db	68
   551  001F6D  44                 	db	68
   552  001F6E  38                 	db	56
   553  001F6F  7C                 	db	124
   554  001F70  14                 	db	20
   555  001F71  14                 	db	20
   556  001F72  14                 	db	20
   557  001F73  08                 	db	8
   558  001F74  08                 	db	8
   559  001F75  14                 	db	20
   560  001F76  14                 	db	20
   561  001F77  18                 	db	24
   562  001F78  7C                 	db	124
   563  001F79  7C                 	db	124
   564  001F7A  08                 	db	8
   565  001F7B  04                 	db	4
   566  001F7C  04                 	db	4
   567  001F7D  08                 	db	8
   568  001F7E  48                 	db	72
   569  001F7F  54                 	db	84
   570  001F80  54                 	db	84
   571  001F81  54                 	db	84
   572  001F82  20                 	db	32
   573  001F83  04                 	db	4
   574  001F84  3F                 	db	63
   575  001F85  44                 	db	68
   576  001F86  40                 	db	64
   577  001F87  20                 	db	32
   578  001F88  3C                 	db	60
   579  001F89  40                 	db	64
   580  001F8A  40                 	db	64
   581  001F8B  20                 	db	32
   582  001F8C  7C                 	db	124
   583  001F8D  1C                 	db	28
   584  001F8E  20                 	db	32
   585  001F8F  40                 	db	64
   586  001F90  20                 	db	32
   587  001F91  1C                 	db	28
   588  001F92  3C                 	db	60
   589  001F93  40                 	db	64
   590  001F94  30                 	db	48
   591  001F95  40                 	db	64
   592  001F96  3C                 	db	60
   593  001F97  44                 	db	68
   594  001F98  28                 	db	40
   595  001F99  10                 	db	16
   596  001F9A  28                 	db	40
   597  001F9B  44                 	db	68
   598  001F9C  0C                 	db	12
   599  001F9D  50                 	db	80
   600  001F9E  50                 	db	80
   601  001F9F  50                 	db	80
   602  001FA0  3C                 	db	60
   603  001FA1  44                 	db	68
   604  001FA2  64                 	db	100
   605  001FA3  54                 	db	84
   606  001FA4  4C                 	db	76
   607  001FA5  44                 	db	68
   608  001FA6  00                 	db	0
   609  001FA7  08                 	db	8
   610  001FA8  36                 	db	54
   611  001FA9  41                 	db	65
   612  001FAA  00                 	db	0
   613  001FAB  00                 	db	0
   614  001FAC  00                 	db	0
   615  001FAD  7F                 	db	127
   616  001FAE  00                 	db	0
   617  001FAF  00                 	db	0
   618  001FB0  00                 	db	0
   619  001FB1  41                 	db	65
   620  001FB2  36                 	db	54
   621  001FB3  08                 	db	8
   622  001FB4  00                 	db	0
   623  001FB5  10                 	db	16
   624  001FB6  08                 	db	8
   625  001FB7  08                 	db	8
   626  001FB8  10                 	db	16
   627  001FB9  08                 	db	8
   628  001FBA  78                 	db	120
   629  001FBB  46                 	db	70
   630  001FBC  41                 	db	65
   631  001FBD  46                 	db	70
   632  001FBE  78                 	db	120
   633  001FBF                     __end_of_ASCII:
   634                           	opt stack 0
   635  001FBF                     _StateProgram:
   636                           	opt stack 0
   637  001FBF  00                 	db	0
   638  001FC0  00                 	db	0
   639  001FC1  00                 	db	0
   640  001FC2  00                 	db	0
   641  001FC3  00                 	db	0
   642  001FC4  00                 	db	0
   643  001FC5  00                 	db	0
   644  001FC6  00                 	db	0
   645  001FC7  00                 	db	0
   646  001FC8  00                 	db	0
   647  001FC9  00                 	db	0
   648  001FCA  00                 	db	0
   649  001FCB  00                 	db	0
   650  001FCC  00                 	db	0
   651  001FCD  00                 	db	0
   652  001FCE  00                 	db	0
   653  001FCF                     __end_of_StateProgram:
   654                           	opt stack 0
   655  001FCF                     _phasesPower1:
   656                           	opt stack 0
   657  001FCF  00                 	db	0
   658  001FD0  00                 	db	0
   659  001FD1  00                 	db	0
   660  001FD2  00                 	db	0
   661  001FD3  00                 	db	0
   662  001FD4  00                 	db	0
   663  001FD5  00                 	db	0
   664  001FD6  00                 	db	0
   665  001FD7                     __end_of_phasesPower1:
   666                           	opt stack 0
   667  001FD7                     _phasesPhaseAngle:
   668                           	opt stack 0
   669  001FD7  00                 	db	0
   670  001FD8  00                 	db	0
   671  001FD9  00                 	db	0
   672  001FDA  00                 	db	0
   673  001FDB  00                 	db	0
   674  001FDC  00                 	db	0
   675  001FDD                     __end_of_phasesPhaseAngle:
   676                           	opt stack 0
   677  001FDD                     _phasesRmsVI:
   678                           	opt stack 0
   679  001FDD  00                 	db	0
   680  001FDE  00                 	db	0
   681  001FDF  00                 	db	0
   682  001FE0  00                 	db	0
   683  001FE1  00                 	db	0
   684  001FE2  00                 	db	0
   685  001FE3                     __end_of_phasesRmsVI:
   686                           	opt stack 0
   687  001FE3                     _phasesPower2:
   688                           	opt stack 0
   689  001FE3  00                 	db	0
   690  001FE4  00                 	db	0
   691  001FE5  00                 	db	0
   692  001FE6  00                 	db	0
   693  001FE7  00                 	db	0
   694  001FE8  00                 	db	0
   695  001FE9                     __end_of_phasesPower2:
   696                           	opt stack 0
   697  001FE9                     _phasesMainMenu:
   698                           	opt stack 0
   699  001FE9  00                 	db	0
   700  001FEA  00                 	db	0
   701  001FEB  00                 	db	0
   702  001FEC  00                 	db	0
   703  001FED  00                 	db	0
   704  001FEE  00                 	db	0
   705  001FEF                     __end_of_phasesMainMenu:
   706                           	opt stack 0
   707  001FEF                     _phasesTemperature:
   708                           	opt stack 0
   709  001FEF  00                 	db	0
   710  001FF0  00                 	db	0
   711  001FF1  00                 	db	0
   712  001FF2  00                 	db	0
   713  001FF3                     __end_of_phasesTemperature:
   714                           	opt stack 0
   715  001FF3                     _phasesFrequency:
   716                           	opt stack 0
   717  001FF3  00                 	db	0
   718  001FF4  00                 	db	0
   719  001FF5  00                 	db	0
   720  001FF6  00                 	db	0
   721  001FF7                     __end_of_phasesFrequency:
   722                           	opt stack 0
   723  001FF7                     _phasesPowerFactor:
   724                           	opt stack 0
   725  001FF7  00                 	db	0
   726  001FF8  00                 	db	0
   727  001FF9  00                 	db	0
   728  001FFA  00                 	db	0
   729  001FFB                     __end_of_phasesPowerFactor:
   730                           	opt stack 0
   731  001FFB                     _SPI_Config:
   732                           	opt stack 0
   733  001FFB  00                 	db	0
   734  001FFC  00                 	db	0
   735  001FFD  02                 	db	2
   736  001FFE                     __end_of_SPI_Config:
   737                           	opt stack 0
   738  0000                     _TXREG	set	4013
   739  0000                     _BAUDCTLbits	set	4010
   740  0000                     _RCSTAbits	set	4011
   741  0000                     _TXSTAbits	set	4012
   742  0000                     _SPBRG	set	4015
   743  0000                     _SSPBUF	set	4041
   744  0000                     _PIR1bits	set	3998
   745  0000                     _SSPCON	set	4038
   746  0000                     _SSPCONbits	set	4038
   747  0000                     _SSPSTATbits	set	4039
   748  0000                     _SSPSTAT	set	4039
   749  0000                     _TRISCbits	set	3988
   750  0000                     _PORTC	set	3970
   751  0000                     _PORTB	set	3969
   752  0000                     _PORTA	set	3968
   753  0000                     _ANSEL0	set	4024
   754  0000                     _TRISC	set	3988
   755  0000                     _TRISB	set	3987
   756  0000                     _TRISA	set	3986
   757  0000                     _OSCCON	set	4051
   758  0000                     _GIE	set	32663
   759  0000                     _INT0IE	set	32660
   760  0000                     _INT0IF	set	32657
   761                           
   762                           ; #config settings
   763  001FFE  00                 	db	0	; dummy byte at the end
   764  0000                     
   765                           	psect	cinit
   766  0004C2                     __pcinit:
   767                           	opt stack 0
   768  0004C2                     start_initialization:
   769                           	opt stack 0
   770  0004C2                     __initialization:
   771                           	opt stack 0
   772                           
   773                           ; Initialize objects allocated to BANK0 (11 bytes)
   774                           ; load TBLPTR registers with __pidataBANK0
   775  0004C2  0E92               	movlw	low __pidataBANK0
   776  0004C4  6EF6               	movwf	tblptrl,c
   777  0004C6  0E06               	movlw	high __pidataBANK0
   778  0004C8  6EF7               	movwf	tblptrh,c
   779  0004CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   780  0004CC  6EF8               	movwf	tblptru,c
   781  0004CE  EE00  F09E         	lfsr	0,__pdataBANK0
   782  0004D2  EE10 F00B          	lfsr	1,11
   783  0004D6                     copy_data0:
   784  0004D6  0009               	tblrd		*+
   785  0004D8  CFF5 FFEE          	movff	tablat,postinc0
   786  0004DC  50E5               	movf	postdec1,w,c
   787  0004DE  50E1               	movf	fsr1l,w,c
   788  0004E0  E1FA               	bnz	copy_data0
   789                           
   790                           ; Clear objects allocated to BANK0 (45 bytes)
   791  0004E2  EE00  F060         	lfsr	0,__pbssBANK0
   792  0004E6  0E2D               	movlw	45
   793  0004E8                     clear_0:
   794  0004E8  6AEE               	clrf	postinc0,c
   795  0004EA  06E8               	decf	wreg,f,c
   796  0004EC  E1FD               	bnz	clear_0
   797                           
   798                           ; Clear objects allocated to COMRAM (50 bytes)
   799  0004EE  EE00  F001         	lfsr	0,__pbssCOMRAM
   800  0004F2  0E32               	movlw	50
   801  0004F4                     clear_1:
   802  0004F4  6AEE               	clrf	postinc0,c
   803  0004F6  06E8               	decf	wreg,f,c
   804  0004F8  E1FD               	bnz	clear_1
   805  0004FA                     end_of_initialization:
   806                           	opt stack 0
   807  0004FA                     __end_of__initialization:
   808                           	opt stack 0
   809  0004FA  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   810  0004FC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   811  0004FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   812  000500  6EF8               	movwf	tblptru,c
   813  000502  0100               	movlb	0
   814  000504  EF15  F002         	goto	_main	;jump to C main() function
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           postdec1	equ	0xFE5
   822                           fsr1l	equ	0xFE1
   823                           
   824                           	psect	bssCOMRAM
   825  000001                     __pbssCOMRAM:
   826                           	opt stack 0
   827  000001                     expBASE10@value:
   828                           	opt stack 0
   829  000001                     	ds	4
   830  000005                     phPower1@currentPower1_2:
   831                           	opt stack 0
   832  000005                     	ds	3
   833  000008                     typesPower1@currentPower1_1:
   834                           	opt stack 0
   835  000008                     	ds	3
   836  00000B                     stateTemperature@phaseTemperature:
   837                           	opt stack 0
   838  00000B                     	ds	3
   839  00000E                     stateFrequency@phaseFrequency:
   840                           	opt stack 0
   841  00000E                     	ds	3
   842  000011                     statePhaseAngle@phasePhaseAngle:
   843                           	opt stack 0
   844  000011                     	ds	3
   845  000014                     stateRmsVI@phaseRmsVI:
   846                           	opt stack 0
   847  000014                     	ds	3
   848  000017                     statePower2@phasePower2:
   849                           	opt stack 0
   850  000017                     	ds	3
   851  00001A                     statePower1@phasePower1:
   852                           	opt stack 0
   853  00001A                     	ds	3
   854  00001D                     exitPowerFactor@currentPowerFactor2:
   855                           	opt stack 0
   856  00001D                     	ds	2
   857  00001F                     phPowerFactor@currentPowerFactor1:
   858                           	opt stack 0
   859  00001F                     	ds	2
   860  000021                     viewMenu@currentMainMenu3:
   861                           	opt stack 0
   862  000021                     	ds	2
   863  000023                     generalView@currentMainMenu2:
   864                           	opt stack 0
   865  000023                     	ds	2
   866  000025                     initialLoad@currentMainMenu1:
   867                           	opt stack 0
   868  000025                     	ds	2
   869  000027                     statePowerFactor@phasePowerFactor:
   870                           	opt stack 0
   871  000027                     	ds	2
   872  000029                     stateMainMenu@phaseMain:
   873                           	opt stack 0
   874  000029                     	ds	2
   875  00002B                     stateTemperature@phase:
   876                           	opt stack 0
   877  00002B                     	ds	1
   878  00002C                     stateFrequency@phase:
   879                           	opt stack 0
   880  00002C                     	ds	1
   881  00002D                     statePhaseAngle@phase:
   882                           	opt stack 0
   883  00002D                     	ds	1
   884  00002E                     statePowerFactor@phase:
   885                           	opt stack 0
   886  00002E                     	ds	1
   887  00002F                     stateRmsVI@phase:
   888                           	opt stack 0
   889  00002F                     	ds	1
   890  000030                     statePower2@phase:
   891                           	opt stack 0
   892  000030                     	ds	1
   893  000031                     statePower1@phase:
   894                           	opt stack 0
   895  000031                     	ds	1
   896  000032                     stateMainMenu@phase:
   897                           	opt stack 0
   898  000032                     	ds	1
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1l	equ	0xFE1
   907                           
   908                           	psect	bssBANK0
   909  000060                     __pbssBANK0:
   910                           	opt stack 0
   911  000060                     exitTemperature@currentTemperature2:
   912                           	opt stack 0
   913  000060                     	ds	3
   914  000063                     showTemperature@currentTemperature1:
   915                           	opt stack 0
   916  000063                     	ds	3
   917  000066                     exitFrequency@currentFrequency2:
   918                           	opt stack 0
   919  000066                     	ds	3
   920  000069                     showFrequency@currentFrequency1:
   921                           	opt stack 0
   922  000069                     	ds	3
   923  00006C                     exitPhaseAngle@currentPhaseAngle3:
   924                           	opt stack 0
   925  00006C                     	ds	3
   926  00006F                     viPhaseAngle@currentPhaseAngle2:
   927                           	opt stack 0
   928  00006F                     	ds	3
   929  000072                     phPhaseAngle@currentPhaseAngle1:
   930                           	opt stack 0
   931  000072                     	ds	3
   932  000075                     exitRmsVI@currentRms3:
   933                           	opt stack 0
   934  000075                     	ds	3
   935  000078                     neutralRmsVI@currentRms2:
   936                           	opt stack 0
   937  000078                     	ds	3
   938  00007B                     phRmsVI@currentRms1:
   939                           	opt stack 0
   940  00007B                     	ds	3
   941  00007E                     exitPower2@currentPower2_3:
   942                           	opt stack 0
   943  00007E                     	ds	3
   944  000081                     phPower2@currentPower2_2:
   945                           	opt stack 0
   946  000081                     	ds	3
   947  000084                     fhPower2@currentPower2_1:
   948                           	opt stack 0
   949  000084                     	ds	3
   950  000087                     exitPower1@currentPower1_4:
   951                           	opt stack 0
   952  000087                     	ds	3
   953  00008A                     vectorPower1@currentPower1_3:
   954                           	opt stack 0
   955  00008A                     	ds	3
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           tblptrl	equ	0xFF6
   959                           tablat	equ	0xFF5
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           postdec1	equ	0xFE5
   963                           fsr1l	equ	0xFE1
   964                           
   965                           	psect	dataBANK0
   966  00009E                     __pdataBANK0:
   967                           	opt stack 0
   968  00009E                     main@F3282:
   969                           	opt stack 0
   970  00009E                     	ds	11
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           
   980                           	psect	cstackBANK0
   981  00008D                     __pcstackBANK0:
   982                           	opt stack 0
   983  00008D                     ??_LCDNokia_sendChar:
   984  00008D                     LCDNokia_gotoXY@y:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x0
   988  00008D                     	ds	1
   989  00008E                     LCDNokia_gotoXY@x:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x1
   993  00008E                     	ds	1
   994  00008F                     LCDNokia_sendChar@character:
   995                           	opt stack 0
   996  00008F                     LCDNokia_clear@index:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x2
  1000  00008F                     	ds	1
  1001  000090                     LCDNokia_sendChar@index:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x3
  1005  000090                     	ds	2
  1006  000092                     main@arrayTest:
  1007                           	opt stack 0
  1008                           
  1009                           ; 11 bytes @ 0x5
  1010  000092                     	ds	11
  1011  00009D                     main@test:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x10
  1015  00009D                     	ds	1
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1l	equ	0xFE1
  1024                           
  1025                           	psect	cstackCOMRAM
  1026  000033                     __pcstackCOMRAM:
  1027                           	opt stack 0
  1028  000033                     ??_Button1:
  1029                           
  1030                           ; 1 bytes @ 0x0
  1031  000033                     	ds	18
  1032  000045                     ?___wmul:
  1033                           	opt stack 0
  1034  000045                     GPIO_sourceClock@clk:
  1035                           	opt stack 0
  1036  000045                     GPIO_dataDirectionPIN@pin:
  1037                           	opt stack 0
  1038  000045                     GPIO_setPIN@pin:
  1039                           	opt stack 0
  1040  000045                     GPIO_clearPIN@pin:
  1041                           	opt stack 0
  1042  000045                     SPI_enableClock@cpol:
  1043                           	opt stack 0
  1044  000045                     SPI_enablePins@serial:
  1045                           	opt stack 0
  1046  000045                     SPI_write@success:
  1047                           	opt stack 0
  1048  000045                     ___wmul@multiplier:
  1049                           	opt stack 0
  1050  000045                     delay@delay:
  1051                           	opt stack 0
  1052  000045                     LCD_delay@counter:
  1053                           	opt stack 0
  1054                           
  1055                           ; 4 bytes @ 0x12
  1056  000045                     	ds	1
  1057  000046                     ??_GPIO_setPIN:
  1058  000046                     ??_GPIO_clearPIN:
  1059  000046                     GPIO_dataDirectionPIN@state:
  1060                           	opt stack 0
  1061  000046                     SPI_enableClock@phase:
  1062                           	opt stack 0
  1063  000046                     SPI_write@data:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x13
  1067  000046                     	ds	1
  1068  000047                     ??_GPIO_dataDirectionPIN:
  1069  000047                     SPI_write@dummy:
  1070                           	opt stack 0
  1071  000047                     SPI_init@SPI_Config:
  1072                           	opt stack 0
  1073  000047                     ___wmul@multiplicand:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x14
  1077  000047                     	ds	1
  1078  000048                     GPIO_setPIN@portName:
  1079                           	opt stack 0
  1080  000048                     GPIO_clearPIN@portName:
  1081                           	opt stack 0
  1082                           
  1083                           ; 1 bytes @ 0x15
  1084  000048                     	ds	1
  1085  000049                     ??_SPI_init:
  1086  000049                     GPIO_dataDirectionPIN@portName:
  1087                           	opt stack 0
  1088  000049                     ___wmul@product:
  1089                           	opt stack 0
  1090  000049                     delay@counter:
  1091                           	opt stack 0
  1092                           
  1093                           ; 4 bytes @ 0x16
  1094  000049                     	ds	2
  1095  00004B                     LCDNokia_writeByte@data:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x18
  1099  00004B                     	ds	1
  1100  00004C                     LCDNokia_writeByte@DataOrCmd:
  1101                           	opt stack 0
  1102                           
  1103                           ; 1 bytes @ 0x19
  1104  00004C                     	ds	1
  1105  00004D                     tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           postinc0	equ	0xFEE
  1110                           wreg	equ	0xFE8
  1111                           postdec1	equ	0xFE5
  1112                           fsr1l	equ	0xFE1
  1113                           
  1114                           ; 1 bytes @ 0x1A
  1115 ;;
  1116 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1117 ;;
  1118 ;; *************** function _main *****************
  1119 ;; Defined at:
  1120 ;;		line 88 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  arrayTest      11    5[BANK0 ] unsigned char [11]
  1125 ;;  test            1   16[BANK0 ] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1135 ;;      Params:         0       0       0       0
  1136 ;;      Locals:         0      12       0       0
  1137 ;;      Temps:          0       0       0       0
  1138 ;;      Totals:         0      12       0       0
  1139 ;;Total ram usage:       12 bytes
  1140 ;; Hardware stack levels required when called:    5
  1141 ;; This function calls:
  1142 ;;		_GPIO_sourceClock
  1143 ;;		_LCDNokia_clear
  1144 ;;		_LCDNokia_init
  1145 ;;		_LCDNokia_sendChar
  1146 ;;		_SPI_init
  1147 ;;		_delay
  1148 ;; This function is called by:
  1149 ;;		Startup code after reset
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text0
  1154  00042A                     __ptext0:
  1155                           	opt stack 0
  1156  00042A                     _main:
  1157                           	opt stack 26
  1158                           
  1159                           ;main.c: 97: GPIO_sourceClock(CLK_8MHZ);
  1160                           
  1161                           ;incstack = 0
  1162  00042A  0E00               	movlw	0
  1163  00042C  ECE5  F001         	call	_GPIO_sourceClock
  1164                           
  1165                           ;main.c: 100: SPI_init(&SPI_Config);
  1166  000430  0EFB               	movlw	low _SPI_Config
  1167  000432  6E47               	movwf	SPI_init@SPI_Config,c
  1168  000434  0E1F               	movlw	high _SPI_Config
  1169  000436  6E48               	movwf	SPI_init@SPI_Config+1,c
  1170  000438  EC3D  F002         	call	_SPI_init	;wreg free
  1171                           
  1172                           ;main.c: 101: LCDNokia_init();
  1173  00043C  EC53  F000         	call	_LCDNokia_init	;wreg free
  1174                           
  1175                           ;main.c: 102: LCDNokia_clear();
  1176  000440  ECA3  F002         	call	_LCDNokia_clear	;wreg free
  1177                           
  1178                           ;main.c: 107: uint8_t test = 'O';
  1179  000444  0E4F               	movlw	79
  1180  000446  0100               	movlb	0	; () banked
  1181  000448  6F9D               	movwf	main@test& (0+255),b
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;main.c: 108: uint8_t arrayTest[] = "Hola Mundo";
  1185  00044A  EE20  F09E         	lfsr	2,main@F3282
  1186  00044E  EE10  F092         	lfsr	1,main@arrayTest
  1187  000452  0E0A               	movlw	10
  1188  000454                     u1211:
  1189  000454  CFDB FFE3          	movff	plusw2,plusw1
  1190  000458  06E8               	decf	wreg,f,c
  1191  00045A  E2FC               	bc	u1211
  1192  00045C                     
  1193                           ;main.c: 110: {
  1194                           ;main.c: 111: LCDNokia_sendChar(test);
  1195                           
  1196                           ; BSR set to: 0
  1197  00045C  0100               	movlb	0	; () banked
  1198  00045E  519D               	movf	main@test& (0+255),w,b
  1199  000460  EC36  F001         	call	_LCDNokia_sendChar
  1200                           
  1201                           ;main.c: 113: delay(1000);
  1202  000464  0EE8               	movlw	232
  1203  000466  6E45               	movwf	delay@delay,c
  1204  000468  0E03               	movlw	3
  1205  00046A  6E46               	movwf	delay@delay+1,c
  1206  00046C  0E00               	movlw	0
  1207  00046E  6E47               	movwf	delay@delay+2,c
  1208  000470  0E00               	movlw	0
  1209  000472  6E48               	movwf	delay@delay+3,c
  1210  000474  ECF1  F002         	call	_delay	;wreg free
  1211                           
  1212                           ;main.c: 119: }
  1213  000478  D7F1               	goto	l39
  1214  00047A                     __end_of_main:
  1215                           	opt stack 0
  1216                           tblptru	equ	0xFF8
  1217                           tblptrh	equ	0xFF7
  1218                           tblptrl	equ	0xFF6
  1219                           tablat	equ	0xFF5
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           postdec1	equ	0xFE5
  1223                           plusw1	equ	0xFE3
  1224                           fsr1l	equ	0xFE1
  1225                           plusw2	equ	0xFDB
  1226                           
  1227 ;; *************** function _SPI_init *****************
  1228 ;; Defined at:
  1229 ;;		line 80 in file "SPI.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  SPI_Config      2   20[COMRAM] PTR const struct .
  1232 ;;		 -> SPI_Config(3), 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1244 ;;      Params:         2       0       0       0
  1245 ;;      Locals:         0       0       0       0
  1246 ;;      Temps:          2       0       0       0
  1247 ;;      Totals:         4       0       0       0
  1248 ;;Total ram usage:        4 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    2
  1251 ;; This function calls:
  1252 ;;		_SPI_enableClock
  1253 ;;		_SPI_enablePins
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text1
  1260  00047A                     __ptext1:
  1261                           	opt stack 0
  1262  00047A                     _SPI_init:
  1263                           	opt stack 28
  1264                           
  1265                           ;SPI.c: 82: SPI_enableClock(SPI_Config->SPI_Polarity, SPI_Config->SPI_Phase);
  1266                           
  1267                           ;incstack = 0
  1268  00047A  0E01               	movlw	1
  1269  00047C  2447               	addwf	SPI_init@SPI_Config,w,c
  1270  00047E  6E49               	movwf	??_SPI_init& (0+255),c
  1271  000480  0E00               	movlw	0
  1272  000482  2048               	addwfc	SPI_init@SPI_Config+1,w,c
  1273  000484  6E4A               	movwf	(??_SPI_init+1)& (0+255),c
  1274  000486  C049  FFF6         	movff	??_SPI_init,tblptrl
  1275  00048A  C04A  FFF7         	movff	??_SPI_init+1,tblptrh
  1276  00048E                     	if	0	;tblptru may be non-zero
  1277  00048E                     	endif
  1278  00048E                     	if	0	;tblptru may be non-zero
  1279  00048E                     	endif
  1280  00048E  0008               	tblrd		*
  1281  000490  CFF5 F045          	movff	tablat,SPI_enableClock@cpol
  1282  000494  C047  FFF6         	movff	SPI_init@SPI_Config,tblptrl
  1283  000498  C048  FFF7         	movff	SPI_init@SPI_Config+1,tblptrh
  1284  00049C                     	if	0	;tblptru may be non-zero
  1285  00049C                     	endif
  1286  00049C                     	if	0	;tblptru may be non-zero
  1287  00049C                     	endif
  1288  00049C  0008               	tblrd		*
  1289  00049E  50F5               	movf	tablat,w,c
  1290  0004A0  EC84  F002         	call	_SPI_enableClock
  1291                           
  1292                           ;SPI.c: 83: SPI_enablePins(SPI_Config->SPI_Clk);
  1293  0004A4  0E02               	movlw	2
  1294  0004A6  2447               	addwf	SPI_init@SPI_Config,w,c
  1295  0004A8  6E49               	movwf	??_SPI_init& (0+255),c
  1296  0004AA  0E00               	movlw	0
  1297  0004AC  2048               	addwfc	SPI_init@SPI_Config+1,w,c
  1298  0004AE  6E4A               	movwf	(??_SPI_init+1)& (0+255),c
  1299  0004B0  C049  FFF6         	movff	??_SPI_init,tblptrl
  1300  0004B4  C04A  FFF7         	movff	??_SPI_init+1,tblptrh
  1301  0004B8                     	if	0	;tblptru may be non-zero
  1302  0004B8                     	endif
  1303  0004B8                     	if	0	;tblptru may be non-zero
  1304  0004B8                     	endif
  1305  0004B8  0008               	tblrd		*
  1306  0004BA  50F5               	movf	tablat,w,c
  1307  0004BC  ECDB  F002         	call	_SPI_enablePins
  1308  0004C0  0012               	return		;funcret
  1309  0004C2                     __end_of_SPI_init:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           postdec1	equ	0xFE5
  1318                           plusw1	equ	0xFE3
  1319                           fsr1l	equ	0xFE1
  1320                           plusw2	equ	0xFDB
  1321                           
  1322 ;; *************** function _SPI_enablePins *****************
  1323 ;; Defined at:
  1324 ;;		line 56 in file "SPI.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  serial          1    wreg     enum E3069
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  serial          1   18[COMRAM] enum E3069
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1338 ;;      Params:         0       0       0       0
  1339 ;;      Locals:         1       0       0       0
  1340 ;;      Temps:          0       0       0       0
  1341 ;;      Totals:         1       0       0       0
  1342 ;;Total ram usage:        1 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_SPI_init
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text2
  1353  0005B6                     __ptext2:
  1354                           	opt stack 0
  1355  0005B6                     _SPI_enablePins:
  1356                           	opt stack 28
  1357                           
  1358                           ;incstack = 0
  1359                           ;SPI_enablePins@serial stored from wreg
  1360  0005B6  6E45               	movwf	SPI_enablePins@serial,c
  1361                           
  1362                           ;SPI.c: 58: switch(serial)
  1363  0005B8  D007               	goto	l172
  1364  0005BA                     
  1365                           ;SPI.c: 61: SSPCON &= (0x00);
  1366  0005BA  0E00               	movlw	0
  1367  0005BC  6EC6               	movwf	4038,c	;volatile
  1368                           
  1369                           ;SPI.c: 62: break;
  1370  0005BE  D00E               	goto	l174
  1371  0005C0                     
  1372                           ;SPI.c: 64: SSPCON |= (0x01);
  1373  0005C0  80C6               	bsf	4038,0,c	;volatile
  1374                           
  1375                           ;SPI.c: 65: break;
  1376  0005C2  D00C               	goto	l174
  1377  0005C4                     
  1378                           ;SPI.c: 67: SSPCON |= (0x02);
  1379  0005C4  82C6               	bsf	4038,1,c	;volatile
  1380                           
  1381                           ;SPI.c: 71: }
  1382                           
  1383                           ;SPI.c: 70: break;
  1384                           
  1385                           ;SPI.c: 69: default:
  1386                           
  1387                           ;SPI.c: 68: break;
  1388  0005C6  D00A               	goto	l174
  1389  0005C8                     l172:
  1390  0005C8  5045               	movf	SPI_enablePins@serial,w,c
  1391                           
  1392                           ; Switch size 1, requested type "space"
  1393                           ; Number of cases is 3, Range of values is 0 to 2
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte           10     6 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398  0005CA  0A00               	xorlw	0	; case 0
  1399  0005CC  B4D8               	btfsc	status,2,c
  1400  0005CE  D7F5               	goto	l173
  1401  0005D0  0A01               	xorlw	1	; case 1
  1402  0005D2  B4D8               	btfsc	status,2,c
  1403  0005D4  D7F5               	goto	l175
  1404  0005D6  0A03               	xorlw	3	; case 2
  1405  0005D8  B4D8               	btfsc	status,2,c
  1406  0005DA  D7F4               	goto	l176
  1407  0005DC                     l174:
  1408                           
  1409                           ;SPI.c: 74: SSPCON |= (0x20);
  1410  0005DC  8AC6               	bsf	4038,5,c	;volatile
  1411                           
  1412                           ;SPI.c: 77: PIR1bits.SSPIF = 0;
  1413  0005DE  969E               	bcf	3998,3,c	;volatile
  1414  0005E0  0012               	return		;funcret
  1415  0005E2                     __end_of_SPI_enablePins:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           plusw1	equ	0xFE3
  1425                           fsr1l	equ	0xFE1
  1426                           plusw2	equ	0xFDB
  1427                           status	equ	0xFD8
  1428                           
  1429 ;; *************** function _SPI_enableClock *****************
  1430 ;; Defined at:
  1431 ;;		line 14 in file "SPI.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  phase           1    wreg     enum E3065
  1434 ;;  cpol            1   18[COMRAM] enum E3061
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  phase           1   19[COMRAM] enum E3065
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1446 ;;      Params:         1       0       0       0
  1447 ;;      Locals:         1       0       0       0
  1448 ;;      Temps:          0       0       0       0
  1449 ;;      Totals:         2       0       0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_SPI_init
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text3
  1461  000508                     __ptext3:
  1462                           	opt stack 0
  1463  000508                     _SPI_enableClock:
  1464                           	opt stack 28
  1465                           
  1466                           ;incstack = 0
  1467                           ;SPI_enableClock@phase stored from wreg
  1468  000508  6E46               	movwf	SPI_enableClock@phase,c
  1469                           
  1470                           ;SPI.c: 17: TRISCbits.TRISC5 = 0;
  1471  00050A  9A94               	bcf	3988,5,c	;volatile
  1472                           
  1473                           ;SPI.c: 19: TRISCbits.TRISC4 = 1;
  1474  00050C  8894               	bsf	3988,4,c	;volatile
  1475                           
  1476                           ;SPI.c: 21: TRISCbits.TRISC7 = 0;
  1477  00050E  9E94               	bcf	3988,7,c	;volatile
  1478                           
  1479                           ;SPI.c: 28: SSPSTAT |= (0x40);
  1480  000510  8CC7               	bsf	4039,6,c	;volatile
  1481                           
  1482                           ;SPI.c: 29: SSPSTATbits.BF = 0;
  1483  000512  90C7               	bcf	4039,0,c	;volatile
  1484                           
  1485                           ;SPI.c: 31: switch(phase)
  1486  000514  D004               	goto	l159
  1487  000516                     l160:
  1488                           
  1489                           ;SPI.c: 34: SSPCONbits.CKP = 0;
  1490  000516  98C6               	bcf	4038,4,c	;volatile
  1491                           
  1492                           ;SPI.c: 35: break;
  1493  000518  D00E               	goto	l164
  1494  00051A                     l162:
  1495                           
  1496                           ;SPI.c: 37: SSPCONbits.CKP = 1;
  1497  00051A  88C6               	bsf	4038,4,c	;volatile
  1498                           
  1499                           ;SPI.c: 41: }
  1500                           
  1501                           ;SPI.c: 40: break;
  1502                           
  1503                           ;SPI.c: 39: default:
  1504                           
  1505                           ;SPI.c: 38: break;
  1506  00051C  D00C               	goto	l164
  1507  00051E                     l159:
  1508  00051E  5046               	movf	SPI_enableClock@phase,w,c
  1509                           
  1510                           ; Switch size 1, requested type "space"
  1511                           ; Number of cases is 2, Range of values is 0 to 1
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte            7     4 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516  000520  0A00               	xorlw	0	; case 0
  1517  000522  B4D8               	btfsc	status,2,c
  1518  000524  D7F8               	goto	l160
  1519  000526  0A01               	xorlw	1	; case 1
  1520  000528  B4D8               	btfsc	status,2,c
  1521  00052A  D7F7               	goto	l162
  1522                           
  1523                           ;SPI.c: 43: switch(cpol)
  1524  00052C  D004               	goto	l164
  1525  00052E                     l165:
  1526                           
  1527                           ;SPI.c: 46: SSPSTATbits.CKE = 0;
  1528  00052E  9CC7               	bcf	4039,6,c	;volatile
  1529                           
  1530                           ;SPI.c: 47: break;
  1531  000530  0012               	return	
  1532  000532                     l167:
  1533                           
  1534                           ;SPI.c: 49: SSPSTATbits.CKE = 1;
  1535  000532  8CC7               	bsf	4039,6,c	;volatile
  1536                           
  1537                           ;SPI.c: 53: }
  1538                           
  1539                           ;SPI.c: 52: break;
  1540                           
  1541                           ;SPI.c: 51: default:
  1542                           
  1543                           ;SPI.c: 50: break;
  1544  000534  0012               	return	
  1545  000536                     l164:
  1546  000536  5045               	movf	SPI_enableClock@cpol,w,c
  1547                           
  1548                           ; Switch size 1, requested type "space"
  1549                           ; Number of cases is 2, Range of values is 0 to 1
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte            7     4 (average)
  1553                           ;	Chosen strategy is simple_byte
  1554  000538  0A00               	xorlw	0	; case 0
  1555  00053A  B4D8               	btfsc	status,2,c
  1556  00053C  D7F8               	goto	l165
  1557  00053E  0A01               	xorlw	1	; case 1
  1558  000540  A4D8               	btfss	status,2,c
  1559  000542  0012               	return	
  1560  000544  D7F6               	goto	l167
  1561  000546                     __end_of_SPI_enableClock:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           plusw1	equ	0xFE3
  1571                           fsr1l	equ	0xFE1
  1572                           plusw2	equ	0xFDB
  1573                           status	equ	0xFD8
  1574                           
  1575 ;; *************** function _LCDNokia_sendChar *****************
  1576 ;; Defined at:
  1577 ;;		line 157 in file "LCDNokia5110.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  character       1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  character       1    2[BANK0 ] unsigned char 
  1582 ;;  index           2    3[BANK0 ] unsigned int 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1592 ;;      Params:         0       0       0       0
  1593 ;;      Locals:         0       3       0       0
  1594 ;;      Temps:          0       2       0       0
  1595 ;;      Totals:         0       5       0       0
  1596 ;;Total ram usage:        5 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		_LCDNokia_writeByte
  1601 ;;		___wmul
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;;		_LCDNokia_sendString
  1605 ;;		_LCDNokia_printValue
  1606 ;;		_LCDNokia_printFloatValue
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text4
  1611  00026C                     __ptext4:
  1612                           	opt stack 0
  1613  00026C                     _LCDNokia_sendChar:
  1614                           	opt stack 27
  1615                           
  1616                           ;incstack = 0
  1617                           ;LCDNokia_sendChar@character stored from wreg
  1618  00026C  0100               	movlb	0	; () banked
  1619  00026E  6F8F               	movwf	LCDNokia_sendChar@character& (0+255),b
  1620                           
  1621                           ;LCDNokia5110.c: 159: uint16_t index = 0;
  1622  000270  0E00               	movlw	0
  1623  000272  0100               	movlb	0	; () banked
  1624  000274  6F91               	movwf	(LCDNokia_sendChar@index+1)& (0+255),b
  1625  000276  0E00               	movlw	0
  1626  000278  6F90               	movwf	LCDNokia_sendChar@index& (0+255),b
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;LCDNokia5110.c: 161: LCDNokia_writeByte(1, 0x00);
  1630  00027A  0E00               	movlw	0
  1631  00027C  6E4B               	movwf	LCDNokia_writeByte@data,c
  1632  00027E  0E01               	movlw	1
  1633  000280  EC18  F003         	call	_LCDNokia_writeByte
  1634                           
  1635                           ;LCDNokia5110.c: 163: for (index = 0; index < 5; index++)
  1636  000284  0E00               	movlw	0
  1637  000286  0100               	movlb	0	; () banked
  1638  000288  6F91               	movwf	(LCDNokia_sendChar@index+1)& (0+255),b
  1639  00028A  0E00               	movlw	0
  1640  00028C  6F90               	movwf	LCDNokia_sendChar@index& (0+255),b
  1641  00028E                     l2442:
  1642                           
  1643                           ; BSR set to: 0
  1644  00028E  5191               	movf	(LCDNokia_sendChar@index+1)& (0+255),w,b
  1645  000290  E12B               	bnz	l2452
  1646  000292  0E05               	movlw	5
  1647  000294  5D90               	subwf	LCDNokia_sendChar@index& (0+255),w,b
  1648  000296  B0D8               	btfsc	status,0,c
  1649  000298  D027               	goto	u1160
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;LCDNokia5110.c: 164: {
  1653                           ;LCDNokia5110.c: 165: LCDNokia_writeByte(1, ASCII[character - 0x20][index]);
  1654                           
  1655                           ; BSR set to: 0
  1656                           
  1657                           ; BSR set to: 0
  1658  00029A  0EE0               	movlw	224
  1659  00029C  258F               	addwf	LCDNokia_sendChar@character& (0+255),w,b
  1660  00029E  6E45               	movwf	___wmul@multiplier,c
  1661  0002A0  6A46               	clrf	___wmul@multiplier+1,c
  1662  0002A2  0EFF               	movlw	255
  1663  0002A4  2246               	addwfc	___wmul@multiplier+1,f,c
  1664  0002A6  0E00               	movlw	0
  1665  0002A8  6E48               	movwf	___wmul@multiplicand+1,c
  1666  0002AA  0E05               	movlw	5
  1667  0002AC  6E47               	movwf	___wmul@multiplicand,c
  1668  0002AE  EC05  F003         	call	___wmul	;wreg free
  1669  0002B2  0EDF               	movlw	low _ASCII
  1670  0002B4  0100               	movlb	0	; () banked
  1671  0002B6  6F8D               	movwf	??_LCDNokia_sendChar& (0+255),b
  1672  0002B8  0E1D               	movlw	high _ASCII
  1673  0002BA  6F8E               	movwf	(??_LCDNokia_sendChar+1)& (0+255),b
  1674  0002BC  5045               	movf	?___wmul,w,c
  1675  0002BE  278D               	addwf	??_LCDNokia_sendChar& (0+255),f,b
  1676  0002C0  5046               	movf	?___wmul+1,w,c
  1677  0002C2  238E               	addwfc	(??_LCDNokia_sendChar+1)& (0+255),f,b
  1678  0002C4  5190               	movf	LCDNokia_sendChar@index& (0+255),w,b
  1679  0002C6  278D               	addwf	??_LCDNokia_sendChar& (0+255),f,b
  1680  0002C8  5191               	movf	(LCDNokia_sendChar@index+1)& (0+255),w,b
  1681  0002CA  238E               	addwfc	(??_LCDNokia_sendChar+1)& (0+255),f,b
  1682  0002CC  C08D  FFF6         	movff	??_LCDNokia_sendChar,tblptrl
  1683  0002D0  C08E  FFF7         	movff	??_LCDNokia_sendChar+1,tblptrh
  1684  0002D4                     	if	0	;tblptru may be non-zero
  1685  0002D4                     	endif
  1686  0002D4                     	if	0	;tblptru may be non-zero
  1687  0002D4                     	endif
  1688  0002D4  0008               	tblrd		*
  1689  0002D6  CFF5 F04B          	movff	tablat,LCDNokia_writeByte@data
  1690  0002DA  0E01               	movlw	1
  1691  0002DC  EC18  F003         	call	_LCDNokia_writeByte
  1692  0002E0  0100               	movlb	0	; () banked
  1693  0002E2  4B90               	infsnz	LCDNokia_sendChar@index& (0+255),f,b
  1694  0002E4  2B91               	incf	(LCDNokia_sendChar@index+1)& (0+255),f,b
  1695  0002E6  D7D3               	goto	l2442
  1696  0002E8                     u1160:
  1697  0002E8                     l2452:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;LCDNokia5110.c: 169: }
  1701                           ;LCDNokia5110.c: 171: LCDNokia_writeByte(1, 0x00);
  1702  0002E8  0E00               	movlw	0
  1703  0002EA  6E4B               	movwf	LCDNokia_writeByte@data,c
  1704  0002EC  0E01               	movlw	1
  1705  0002EE  EC18  F003         	call	_LCDNokia_writeByte
  1706  0002F2  0012               	return		;funcret
  1707  0002F4                     __end_of_LCDNokia_sendChar:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           postdec1	equ	0xFE5
  1716                           plusw1	equ	0xFE3
  1717                           fsr1l	equ	0xFE1
  1718                           plusw2	equ	0xFDB
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function ___wmul *****************
  1722 ;; Defined at:
  1723 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  multiplier      2   18[COMRAM] unsigned int 
  1726 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  product         2   22[COMRAM] unsigned int 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2   18[COMRAM] unsigned int 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, prodl, prodh
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1738 ;;      Params:         4       0       0       0
  1739 ;;      Locals:         2       0       0       0
  1740 ;;      Temps:          0       0       0       0
  1741 ;;      Totals:         6       0       0       0
  1742 ;;Total ram usage:        6 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_LCDNokia_sendChar
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text5
  1753  00060A                     __ptext5:
  1754                           	opt stack 0
  1755  00060A                     ___wmul:
  1756                           	opt stack 28
  1757                           
  1758                           ;incstack = 0
  1759  00060A  5045               	movf	___wmul@multiplier,w,c
  1760  00060C  0247               	mulwf	___wmul@multiplicand,c
  1761  00060E  CFF3 F049          	movff	prodl,___wmul@product
  1762  000612  CFF4 F04A          	movff	prodh,___wmul@product+1
  1763  000616  5045               	movf	___wmul@multiplier,w,c
  1764  000618  0248               	mulwf	___wmul@multiplicand+1,c
  1765  00061A  50F3               	movf	prodl,w,c
  1766  00061C  264A               	addwf	___wmul@product+1,f,c
  1767  00061E  5046               	movf	___wmul@multiplier+1,w,c
  1768  000620  0247               	mulwf	___wmul@multiplicand,c
  1769  000622  50F3               	movf	prodl,w,c
  1770  000624  264A               	addwf	___wmul@product+1,f,c
  1771  000626  C049  F045         	movff	___wmul@product,?___wmul
  1772  00062A  C04A  F046         	movff	___wmul@product+1,?___wmul+1
  1773  00062E  0012               	return	
  1774  000630                     __end_of___wmul:
  1775                           	opt stack 0
  1776                           tblptru	equ	0xFF8
  1777                           tblptrh	equ	0xFF7
  1778                           tblptrl	equ	0xFF6
  1779                           tablat	equ	0xFF5
  1780                           prodh	equ	0xFF4
  1781                           prodl	equ	0xFF3
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec1	equ	0xFE5
  1785                           plusw1	equ	0xFE3
  1786                           fsr1l	equ	0xFE1
  1787                           plusw2	equ	0xFDB
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _LCDNokia_init *****************
  1791 ;; Defined at:
  1792 ;;		line 108 in file "LCDNokia5110.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1806 ;;      Params:         0       0       0       0
  1807 ;;      Locals:         0       0       0       0
  1808 ;;      Temps:          0       0       0       0
  1809 ;;      Totals:         0       0       0       0
  1810 ;;Total ram usage:        0 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    3
  1813 ;; This function calls:
  1814 ;;		_GPIO_clearPIN
  1815 ;;		_GPIO_dataDirectionPIN
  1816 ;;		_GPIO_setPIN
  1817 ;;		_LCDNokia_writeByte
  1818 ;;		_LCD_delay
  1819 ;;		_delay
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text6
  1826  0000A6                     __ptext6:
  1827                           	opt stack 0
  1828  0000A6                     _LCDNokia_init:
  1829                           	opt stack 27
  1830                           
  1831                           ;LCDNokia5110.c: 111: GPIO_dataDirectionPIN(GPIO_B, 2, GPIO_OUTPUT);
  1832                           
  1833                           ;incstack = 0
  1834  0000A6  0E02               	movlw	2
  1835  0000A8  6E45               	movwf	GPIO_dataDirectionPIN@pin,c
  1836  0000AA  0E01               	movlw	1
  1837  0000AC  6E46               	movwf	GPIO_dataDirectionPIN@state,c
  1838  0000AE  0E01               	movlw	1
  1839  0000B0  ECC8  F000         	call	_GPIO_dataDirectionPIN
  1840                           
  1841                           ;LCDNokia5110.c: 112: GPIO_dataDirectionPIN(GPIO_B, 1, GPIO_OUTPUT);
  1842  0000B4  0E01               	movlw	1
  1843  0000B6  6E45               	movwf	GPIO_dataDirectionPIN@pin,c
  1844  0000B8  0E01               	movlw	1
  1845  0000BA  6E46               	movwf	GPIO_dataDirectionPIN@state,c
  1846  0000BC  0E01               	movlw	1
  1847  0000BE  ECC8  F000         	call	_GPIO_dataDirectionPIN
  1848                           
  1849                           ;LCDNokia5110.c: 114: GPIO_clearPIN(GPIO_B, 1);
  1850  0000C2  0E01               	movlw	1
  1851  0000C4  6E45               	movwf	GPIO_clearPIN@pin,c
  1852  0000C6  0E01               	movlw	1
  1853  0000C8  EC7A  F001         	call	_GPIO_clearPIN
  1854                           
  1855                           ;LCDNokia5110.c: 115: LCD_delay();
  1856  0000CC  ECC1  F002         	call	_LCD_delay	;wreg free
  1857                           
  1858                           ;LCDNokia5110.c: 116: GPIO_setPIN(GPIO_B, 1);
  1859  0000D0  0E01               	movlw	1
  1860  0000D2  6E45               	movwf	GPIO_setPIN@pin,c
  1861  0000D4  0E01               	movlw	1
  1862  0000D6  ECB1  F001         	call	_GPIO_setPIN
  1863                           
  1864                           ;LCDNokia5110.c: 118: LCDNokia_writeByte(0, 0x21);
  1865  0000DA  0E21               	movlw	33
  1866  0000DC  6E4B               	movwf	LCDNokia_writeByte@data,c
  1867  0000DE  0E00               	movlw	0
  1868  0000E0  EC18  F003         	call	_LCDNokia_writeByte
  1869                           
  1870                           ;LCDNokia5110.c: 119: delay(1000);
  1871  0000E4  0EE8               	movlw	232
  1872  0000E6  6E45               	movwf	delay@delay,c
  1873  0000E8  0E03               	movlw	3
  1874  0000EA  6E46               	movwf	delay@delay+1,c
  1875  0000EC  0E00               	movlw	0
  1876  0000EE  6E47               	movwf	delay@delay+2,c
  1877  0000F0  0E00               	movlw	0
  1878  0000F2  6E48               	movwf	delay@delay+3,c
  1879  0000F4  ECF1  F002         	call	_delay	;wreg free
  1880                           
  1881                           ;LCDNokia5110.c: 120: LCDNokia_writeByte(0, 0xC0);
  1882  0000F8  0EC0               	movlw	192
  1883  0000FA  6E4B               	movwf	LCDNokia_writeByte@data,c
  1884  0000FC  0E00               	movlw	0
  1885  0000FE  EC18  F003         	call	_LCDNokia_writeByte
  1886                           
  1887                           ;LCDNokia5110.c: 121: delay(1000);
  1888  000102  0EE8               	movlw	232
  1889  000104  6E45               	movwf	delay@delay,c
  1890  000106  0E03               	movlw	3
  1891  000108  6E46               	movwf	delay@delay+1,c
  1892  00010A  0E00               	movlw	0
  1893  00010C  6E47               	movwf	delay@delay+2,c
  1894  00010E  0E00               	movlw	0
  1895  000110  6E48               	movwf	delay@delay+3,c
  1896  000112  ECF1  F002         	call	_delay	;wreg free
  1897                           
  1898                           ;LCDNokia5110.c: 122: LCDNokia_writeByte(0, 0x07);
  1899  000116  0E07               	movlw	7
  1900  000118  6E4B               	movwf	LCDNokia_writeByte@data,c
  1901  00011A  0E00               	movlw	0
  1902  00011C  EC18  F003         	call	_LCDNokia_writeByte
  1903                           
  1904                           ;LCDNokia5110.c: 123: delay(1000);
  1905  000120  0EE8               	movlw	232
  1906  000122  6E45               	movwf	delay@delay,c
  1907  000124  0E03               	movlw	3
  1908  000126  6E46               	movwf	delay@delay+1,c
  1909  000128  0E00               	movlw	0
  1910  00012A  6E47               	movwf	delay@delay+2,c
  1911  00012C  0E00               	movlw	0
  1912  00012E  6E48               	movwf	delay@delay+3,c
  1913  000130  ECF1  F002         	call	_delay	;wreg free
  1914                           
  1915                           ;LCDNokia5110.c: 124: LCDNokia_writeByte(0, 0x13);
  1916  000134  0E13               	movlw	19
  1917  000136  6E4B               	movwf	LCDNokia_writeByte@data,c
  1918  000138  0E00               	movlw	0
  1919  00013A  EC18  F003         	call	_LCDNokia_writeByte
  1920                           
  1921                           ;LCDNokia5110.c: 126: delay(1000);
  1922  00013E  0EE8               	movlw	232
  1923  000140  6E45               	movwf	delay@delay,c
  1924  000142  0E03               	movlw	3
  1925  000144  6E46               	movwf	delay@delay+1,c
  1926  000146  0E00               	movlw	0
  1927  000148  6E47               	movwf	delay@delay+2,c
  1928  00014A  0E00               	movlw	0
  1929  00014C  6E48               	movwf	delay@delay+3,c
  1930  00014E  ECF1  F002         	call	_delay	;wreg free
  1931                           
  1932                           ;LCDNokia5110.c: 127: LCDNokia_writeByte(0, 0x20);
  1933  000152  0E20               	movlw	32
  1934  000154  6E4B               	movwf	LCDNokia_writeByte@data,c
  1935  000156  0E00               	movlw	0
  1936  000158  EC18  F003         	call	_LCDNokia_writeByte
  1937                           
  1938                           ;LCDNokia5110.c: 128: delay(1000);
  1939  00015C  0EE8               	movlw	232
  1940  00015E  6E45               	movwf	delay@delay,c
  1941  000160  0E03               	movlw	3
  1942  000162  6E46               	movwf	delay@delay+1,c
  1943  000164  0E00               	movlw	0
  1944  000166  6E47               	movwf	delay@delay+2,c
  1945  000168  0E00               	movlw	0
  1946  00016A  6E48               	movwf	delay@delay+3,c
  1947  00016C  ECF1  F002         	call	_delay	;wreg free
  1948                           
  1949                           ;LCDNokia5110.c: 129: LCDNokia_writeByte(0, 0x0D);
  1950  000170  0E0D               	movlw	13
  1951  000172  6E4B               	movwf	LCDNokia_writeByte@data,c
  1952  000174  0E00               	movlw	0
  1953  000176  EC18  F003         	call	_LCDNokia_writeByte
  1954                           
  1955                           ;LCDNokia5110.c: 130: delay(1000);
  1956  00017A  0EE8               	movlw	232
  1957  00017C  6E45               	movwf	delay@delay,c
  1958  00017E  0E03               	movlw	3
  1959  000180  6E46               	movwf	delay@delay+1,c
  1960  000182  0E00               	movlw	0
  1961  000184  6E47               	movwf	delay@delay+2,c
  1962  000186  0E00               	movlw	0
  1963  000188  6E48               	movwf	delay@delay+3,c
  1964  00018A  ECF1  F002         	call	_delay	;wreg free
  1965  00018E  0012               	return		;funcret
  1966  000190                     __end_of_LCDNokia_init:
  1967                           	opt stack 0
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodh	equ	0xFF4
  1973                           prodl	equ	0xFF3
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           postdec1	equ	0xFE5
  1977                           plusw1	equ	0xFE3
  1978                           fsr1l	equ	0xFE1
  1979                           plusw2	equ	0xFDB
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _delay *****************
  1983 ;; Defined at:
  1984 ;;		line 189 in file "GPIO.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  delay           4   18[COMRAM] unsigned long 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  counter         4   22[COMRAM] volatile unsigned long 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1998 ;;      Params:         4       0       0       0
  1999 ;;      Locals:         4       0       0       0
  2000 ;;      Temps:          0       0       0       0
  2001 ;;      Totals:         8       0       0       0
  2002 ;;Total ram usage:        8 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;;		_LCDNokia_init
  2010 ;;		_UART_putString
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text7
  2015  0005E2                     __ptext7:
  2016                           	opt stack 0
  2017  0005E2                     _delay:
  2018                           	opt stack 29
  2019                           
  2020                           ;GPIO.c: 191: volatile uint32_t counter;
  2021                           ;GPIO.c: 193: for(counter = delay; counter > 0; counter--)
  2022                           
  2023                           ;incstack = 0
  2024  0005E2  C045  F049         	movff	delay@delay,delay@counter	;volatile
  2025  0005E6  C046  F04A         	movff	delay@delay+1,delay@counter+1	;volatile
  2026  0005EA  C047  F04B         	movff	delay@delay+2,delay@counter+2	;volatile
  2027  0005EE  C048  F04C         	movff	delay@delay+3,delay@counter+3	;volatile
  2028  0005F2                     l2318:
  2029  0005F2  5049               	movf	delay@counter,w,c	;volatile
  2030  0005F4  104A               	iorwf	delay@counter+1,w,c	;volatile
  2031  0005F6  104B               	iorwf	delay@counter+2,w,c	;volatile
  2032  0005F8  104C               	iorwf	delay@counter+3,w,c	;volatile
  2033  0005FA  B4D8               	btfsc	status,2,c
  2034  0005FC  0012               	return	
  2035                           
  2036                           ;GPIO.c: 194: {}
  2037  0005FE  0649               	decf	delay@counter,f,c	;volatile
  2038  000600  0E00               	movlw	0
  2039  000602  5A4A               	subwfb	delay@counter+1,f,c	;volatile
  2040  000604  5A4B               	subwfb	delay@counter+2,f,c	;volatile
  2041  000606  5A4C               	subwfb	delay@counter+3,f,c	;volatile
  2042  000608  D7F4               	goto	l2318
  2043  00060A                     __end_of_delay:
  2044                           	opt stack 0
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           prodh	equ	0xFF4
  2050                           prodl	equ	0xFF3
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           postdec1	equ	0xFE5
  2054                           plusw1	equ	0xFE3
  2055                           fsr1l	equ	0xFE1
  2056                           plusw2	equ	0xFDB
  2057                           status	equ	0xFD8
  2058                           
  2059 ;; *************** function _LCD_delay *****************
  2060 ;; Defined at:
  2061 ;;		line 200 in file "LCDNokia5110.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  counter         4   18[COMRAM] unsigned long 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2075 ;;      Params:         0       0       0       0
  2076 ;;      Locals:         4       0       0       0
  2077 ;;      Temps:          0       0       0       0
  2078 ;;      Totals:         4       0       0       0
  2079 ;;Total ram usage:        4 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_LCDNokia_init
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text8
  2090  000582                     __ptext8:
  2091                           	opt stack 0
  2092  000582                     _LCD_delay:
  2093                           	opt stack 28
  2094                           
  2095                           ;LCDNokia5110.c: 202: uint32_t counter;
  2096                           ;LCDNokia5110.c: 204: for(counter = 0; counter < 100000; counter++)
  2097                           
  2098                           ;incstack = 0
  2099  000582  0E00               	movlw	0
  2100  000584  6E45               	movwf	LCD_delay@counter,c
  2101  000586  0E00               	movlw	0
  2102  000588  6E46               	movwf	LCD_delay@counter+1,c
  2103  00058A  0E00               	movlw	0
  2104  00058C  6E47               	movwf	LCD_delay@counter+2,c
  2105  00058E  0E00               	movlw	0
  2106  000590  6E48               	movwf	LCD_delay@counter+3,c
  2107  000592                     l2382:
  2108  000592  5048               	movf	LCD_delay@counter+3,w,c
  2109  000594  E10F               	bnz	l532
  2110  000596  0EA0               	movlw	160
  2111  000598  5C45               	subwf	LCD_delay@counter,w,c
  2112  00059A  0E86               	movlw	134
  2113  00059C  5846               	subwfb	LCD_delay@counter+1,w,c
  2114  00059E  0E01               	movlw	1
  2115  0005A0  5847               	subwfb	LCD_delay@counter+2,w,c
  2116  0005A2  B0D8               	btfsc	status,0,c
  2117  0005A4  0012               	return	
  2118                           
  2119                           ;LCDNokia5110.c: 205: {
  2120  0005A6  0E01               	movlw	1
  2121  0005A8  2645               	addwf	LCD_delay@counter,f,c
  2122  0005AA  0E00               	movlw	0
  2123  0005AC  2246               	addwfc	LCD_delay@counter+1,f,c
  2124  0005AE  2247               	addwfc	LCD_delay@counter+2,f,c
  2125  0005B0  2248               	addwfc	LCD_delay@counter+3,f,c
  2126  0005B2  D7EF               	goto	l2382
  2127  0005B4                     l532:
  2128  0005B4  0012               	return		;funcret
  2129  0005B6                     __end_of_LCD_delay:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           postdec1	equ	0xFE5
  2140                           plusw1	equ	0xFE3
  2141                           fsr1l	equ	0xFE1
  2142                           plusw2	equ	0xFDB
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _GPIO_dataDirectionPIN *****************
  2146 ;; Defined at:
  2147 ;;		line 51 in file "GPIO.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  portName        1    wreg     enum E3075
  2150 ;;  pin             1   18[COMRAM] unsigned char 
  2151 ;;  state           1   19[COMRAM] enum E3071
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  portName        1   22[COMRAM] enum E3075
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2163 ;;      Params:         2       0       0       0
  2164 ;;      Locals:         1       0       0       0
  2165 ;;      Temps:          2       0       0       0
  2166 ;;      Totals:         5       0       0       0
  2167 ;;Total ram usage:        5 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_LCDNokia_init
  2174 ;;		_UART_init
  2175 ;;		_ButtonInt_config
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text9
  2180  000190                     __ptext9:
  2181                           	opt stack 0
  2182  000190                     _GPIO_dataDirectionPIN:
  2183                           	opt stack 28
  2184                           
  2185                           ;incstack = 0
  2186                           ;GPIO_dataDirectionPIN@portName stored from wreg
  2187  000190  6E49               	movwf	GPIO_dataDirectionPIN@portName,c
  2188                           
  2189                           ;GPIO.c: 54: switch(state)
  2190  000192  D064               	goto	l74
  2191  000194                     
  2192                           ;GPIO.c: 60: TRISA |= 1<<pin;
  2193  000194  C045  F047         	movff	GPIO_dataDirectionPIN@pin,??_GPIO_dataDirectionPIN
  2194  000198  0E01               	movlw	1
  2195  00019A  6E48               	movwf	(??_GPIO_dataDirectionPIN+1)& (0+255),c
  2196  00019C  2A47               	incf	??_GPIO_dataDirectionPIN,f,c
  2197  00019E  D002               	goto	u1054
  2198  0001A0                     u1055:
  2199  0001A0  90D8               	bcf	status,0,c
  2200  0001A2  3648               	rlcf	??_GPIO_dataDirectionPIN+1,f,c
  2201  0001A4                     u1054:
  2202  0001A4  2E47               	decfsz	??_GPIO_dataDirectionPIN,f,c
  2203  0001A6  D7FC               	goto	u1055
  2204  0001A8  5048               	movf	??_GPIO_dataDirectionPIN+1,w,c
  2205  0001AA  1292               	iorwf	3986,f,c	;volatile
  2206                           
  2207                           ;GPIO.c: 61: break;
  2208  0001AC  0012               	return	
  2209  0001AE                     
  2210                           ;GPIO.c: 63: TRISB |= 1<<pin;
  2211  0001AE  C045  F047         	movff	GPIO_dataDirectionPIN@pin,??_GPIO_dataDirectionPIN
  2212  0001B2  0E01               	movlw	1
  2213  0001B4  6E48               	movwf	(??_GPIO_dataDirectionPIN+1)& (0+255),c
  2214  0001B6  2A47               	incf	??_GPIO_dataDirectionPIN,f,c
  2215  0001B8  D002               	goto	u1064
  2216  0001BA                     u1065:
  2217  0001BA  90D8               	bcf	status,0,c
  2218  0001BC  3648               	rlcf	??_GPIO_dataDirectionPIN+1,f,c
  2219  0001BE                     u1064:
  2220  0001BE  2E47               	decfsz	??_GPIO_dataDirectionPIN,f,c
  2221  0001C0  D7FC               	goto	u1065
  2222  0001C2  5048               	movf	??_GPIO_dataDirectionPIN+1,w,c
  2223  0001C4  1293               	iorwf	3987,f,c	;volatile
  2224                           
  2225                           ;GPIO.c: 64: break;
  2226  0001C6  0012               	return	
  2227  0001C8                     
  2228                           ;GPIO.c: 66: TRISC |= 1<<pin;
  2229  0001C8  C045  F047         	movff	GPIO_dataDirectionPIN@pin,??_GPIO_dataDirectionPIN
  2230  0001CC  0E01               	movlw	1
  2231  0001CE  6E48               	movwf	(??_GPIO_dataDirectionPIN+1)& (0+255),c
  2232  0001D0  2A47               	incf	??_GPIO_dataDirectionPIN,f,c
  2233  0001D2  D002               	goto	u1074
  2234  0001D4                     u1075:
  2235  0001D4  90D8               	bcf	status,0,c
  2236  0001D6  3648               	rlcf	??_GPIO_dataDirectionPIN+1,f,c
  2237  0001D8                     u1074:
  2238  0001D8  2E47               	decfsz	??_GPIO_dataDirectionPIN,f,c
  2239  0001DA  D7FC               	goto	u1075
  2240  0001DC  5048               	movf	??_GPIO_dataDirectionPIN+1,w,c
  2241  0001DE  1294               	iorwf	3988,f,c	;volatile
  2242                           
  2243                           ;GPIO.c: 70: }
  2244                           
  2245                           ;GPIO.c: 69: break;
  2246                           
  2247                           ;GPIO.c: 68: default:
  2248                           
  2249                           ;GPIO.c: 67: break;
  2250  0001E0  0012               	return	
  2251  0001E2  5049               	movf	GPIO_dataDirectionPIN@portName,w,c
  2252                           
  2253                           ; Switch size 1, requested type "space"
  2254                           ; Number of cases is 3, Range of values is 0 to 2
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte           10     6 (average)
  2258                           ;	Chosen strategy is simple_byte
  2259  0001E4  0A00               	xorlw	0	; case 0
  2260  0001E6  B4D8               	btfsc	status,2,c
  2261  0001E8  D7D5               	goto	l77
  2262  0001EA  0A01               	xorlw	1	; case 1
  2263  0001EC  B4D8               	btfsc	status,2,c
  2264  0001EE  D7DF               	goto	l79
  2265  0001F0  0A03               	xorlw	3	; case 2
  2266  0001F2  A4D8               	btfss	status,2,c
  2267                           
  2268                           ;GPIO.c: 71: break;
  2269  0001F4  0012               	return	
  2270  0001F6  D7E8               	goto	l80
  2271  0001F8                     
  2272                           ;GPIO.c: 76: TRISA &= (0<<pin);
  2273  0001F8  C045  F047         	movff	GPIO_dataDirectionPIN@pin,??_GPIO_dataDirectionPIN
  2274  0001FC  0E00               	movlw	0
  2275  0001FE  6E48               	movwf	(??_GPIO_dataDirectionPIN+1)& (0+255),c
  2276  000200  2A47               	incf	??_GPIO_dataDirectionPIN,f,c
  2277  000202  D002               	goto	u1084
  2278  000204                     u1085:
  2279  000204  90D8               	bcf	status,0,c
  2280  000206  3648               	rlcf	??_GPIO_dataDirectionPIN+1,f,c
  2281  000208                     u1084:
  2282  000208  2E47               	decfsz	??_GPIO_dataDirectionPIN,f,c
  2283  00020A  D7FC               	goto	u1085
  2284  00020C  5048               	movf	??_GPIO_dataDirectionPIN+1,w,c
  2285  00020E  1692               	andwf	3986,f,c	;volatile
  2286                           
  2287                           ;GPIO.c: 77: break;
  2288  000210  0012               	return	
  2289  000212                     
  2290                           ;GPIO.c: 79: TRISB &= (0<<pin);
  2291  000212  C045  F047         	movff	GPIO_dataDirectionPIN@pin,??_GPIO_dataDirectionPIN
  2292  000216  0E00               	movlw	0
  2293  000218  6E48               	movwf	(??_GPIO_dataDirectionPIN+1)& (0+255),c
  2294  00021A  2A47               	incf	??_GPIO_dataDirectionPIN,f,c
  2295  00021C  D002               	goto	u1094
  2296  00021E                     u1095:
  2297  00021E  90D8               	bcf	status,0,c
  2298  000220  3648               	rlcf	??_GPIO_dataDirectionPIN+1,f,c
  2299  000222                     u1094:
  2300  000222  2E47               	decfsz	??_GPIO_dataDirectionPIN,f,c
  2301  000224  D7FC               	goto	u1095
  2302  000226  5048               	movf	??_GPIO_dataDirectionPIN+1,w,c
  2303  000228  1693               	andwf	3987,f,c	;volatile
  2304                           
  2305                           ;GPIO.c: 80: break;
  2306  00022A  0012               	return	
  2307  00022C                     
  2308                           ;GPIO.c: 82: TRISC &= (0<<pin);
  2309  00022C  C045  F047         	movff	GPIO_dataDirectionPIN@pin,??_GPIO_dataDirectionPIN
  2310  000230  0E00               	movlw	0
  2311  000232  6E48               	movwf	(??_GPIO_dataDirectionPIN+1)& (0+255),c
  2312  000234  2A47               	incf	??_GPIO_dataDirectionPIN,f,c
  2313  000236  D002               	goto	u1104
  2314  000238                     u1105:
  2315  000238  90D8               	bcf	status,0,c
  2316  00023A  3648               	rlcf	??_GPIO_dataDirectionPIN+1,f,c
  2317  00023C                     u1104:
  2318  00023C  2E47               	decfsz	??_GPIO_dataDirectionPIN,f,c
  2319  00023E  D7FC               	goto	u1105
  2320  000240  5048               	movf	??_GPIO_dataDirectionPIN+1,w,c
  2321  000242  1694               	andwf	3988,f,c	;volatile
  2322                           
  2323                           ;GPIO.c: 86: }
  2324                           
  2325                           ;GPIO.c: 85: break;
  2326                           
  2327                           ;GPIO.c: 84: default:
  2328                           
  2329                           ;GPIO.c: 83: break;
  2330  000244  0012               	return	
  2331  000246  5049               	movf	GPIO_dataDirectionPIN@portName,w,c
  2332                           
  2333                           ; Switch size 1, requested type "space"
  2334                           ; Number of cases is 3, Range of values is 0 to 2
  2335                           ; switch strategies available:
  2336                           ; Name         Instructions Cycles
  2337                           ; simple_byte           10     6 (average)
  2338                           ;	Chosen strategy is simple_byte
  2339  000248  0A00               	xorlw	0	; case 0
  2340  00024A  B4D8               	btfsc	status,2,c
  2341  00024C  D7D5               	goto	l85
  2342  00024E  0A01               	xorlw	1	; case 1
  2343  000250  B4D8               	btfsc	status,2,c
  2344  000252  D7DF               	goto	l87
  2345  000254  0A03               	xorlw	3	; case 2
  2346  000256  A4D8               	btfss	status,2,c
  2347                           
  2348                           ;GPIO.c: 90: }
  2349                           
  2350                           ;GPIO.c: 89: break;
  2351                           
  2352                           ;GPIO.c: 88: default:
  2353                           
  2354                           ;GPIO.c: 87: break;
  2355  000258  0012               	return	
  2356  00025A  D7E8               	goto	l88
  2357  00025C                     l74:
  2358  00025C  5046               	movf	GPIO_dataDirectionPIN@state,w,c
  2359                           
  2360                           ; Switch size 1, requested type "space"
  2361                           ; Number of cases is 2, Range of values is 0 to 1
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            7     4 (average)
  2365                           ;	Chosen strategy is simple_byte
  2366  00025E  0A00               	xorlw	0	; case 0
  2367  000260  B4D8               	btfsc	status,2,c
  2368  000262  D7BF               	goto	l76
  2369  000264  0A01               	xorlw	1	; case 1
  2370  000266  A4D8               	btfss	status,2,c
  2371  000268  0012               	return	
  2372  00026A  D7ED               	goto	l84
  2373  00026C                     __end_of_GPIO_dataDirectionPIN:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           prodh	equ	0xFF4
  2380                           prodl	equ	0xFF3
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           postdec1	equ	0xFE5
  2384                           plusw1	equ	0xFE3
  2385                           fsr1l	equ	0xFE1
  2386                           plusw2	equ	0xFDB
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _LCDNokia_clear *****************
  2390 ;; Defined at:
  2391 ;;		line 182 in file "LCDNokia5110.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  index           2    2[BANK0 ] unsigned int 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2405 ;;      Params:         0       0       0       0
  2406 ;;      Locals:         0       2       0       0
  2407 ;;      Temps:          0       0       0       0
  2408 ;;      Totals:         0       2       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    4
  2412 ;; This function calls:
  2413 ;;		_LCDNokia_gotoXY
  2414 ;;		_LCDNokia_writeByte
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;;		_initialLoad
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text10
  2422  000546                     __ptext10:
  2423                           	opt stack 0
  2424  000546                     _LCDNokia_clear:
  2425                           	opt stack 26
  2426                           
  2427                           ;LCDNokia5110.c: 184: uint16_t index = 0;
  2428                           
  2429                           ;incstack = 0
  2430  000546  0E00               	movlw	0
  2431  000548  0100               	movlb	0	; () banked
  2432  00054A  6F90               	movwf	(LCDNokia_clear@index+1)& (0+255),b
  2433  00054C  0E00               	movlw	0
  2434  00054E  6F8F               	movwf	LCDNokia_clear@index& (0+255),b
  2435                           
  2436                           ;LCDNokia5110.c: 186: for (index = 0; index < (84 * 48 / 8); index++)
  2437  000550  0E00               	movlw	0
  2438  000552  6F90               	movwf	(LCDNokia_clear@index+1)& (0+255),b
  2439  000554  0E00               	movlw	0
  2440  000556  6F8F               	movwf	LCDNokia_clear@index& (0+255),b
  2441  000558                     l2424:
  2442                           
  2443                           ; BSR set to: 0
  2444  000558  0EF8               	movlw	248
  2445  00055A  5D8F               	subwf	LCDNokia_clear@index& (0+255),w,b
  2446  00055C  0E01               	movlw	1
  2447  00055E  5990               	subwfb	(LCDNokia_clear@index+1)& (0+255),w,b
  2448  000560  B0D8               	btfsc	status,0,c
  2449  000562  D009               	goto	u1140
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;LCDNokia5110.c: 187: {
  2453                           ;LCDNokia5110.c: 188: LCDNokia_writeByte(1, 0x00);
  2454                           
  2455                           ; BSR set to: 0
  2456                           
  2457                           ; BSR set to: 0
  2458  000564  0E00               	movlw	0
  2459  000566  6E4B               	movwf	LCDNokia_writeByte@data,c
  2460  000568  0E01               	movlw	1
  2461  00056A  EC18  F003         	call	_LCDNokia_writeByte
  2462  00056E  0100               	movlb	0	; () banked
  2463  000570  4B8F               	infsnz	LCDNokia_clear@index& (0+255),f,b
  2464  000572  2B90               	incf	(LCDNokia_clear@index+1)& (0+255),f,b
  2465  000574  D7F1               	goto	l2424
  2466  000576                     u1140:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;LCDNokia5110.c: 189: }
  2470                           ;LCDNokia5110.c: 191: LCDNokia_gotoXY(0, 0);
  2471                           
  2472                           ; BSR set to: 0
  2473  000576  0E00               	movlw	0
  2474  000578  6F8D               	movwf	LCDNokia_gotoXY@y& (0+255),b
  2475  00057A  0E00               	movlw	0
  2476  00057C  EC2B  F003         	call	_LCDNokia_gotoXY
  2477  000580  0012               	return		;funcret
  2478  000582                     __end_of_LCDNokia_clear:
  2479                           	opt stack 0
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           prodh	equ	0xFF4
  2485                           prodl	equ	0xFF3
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           postdec1	equ	0xFE5
  2489                           plusw1	equ	0xFE3
  2490                           fsr1l	equ	0xFE1
  2491                           plusw2	equ	0xFDB
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _LCDNokia_gotoXY *****************
  2495 ;; Defined at:
  2496 ;;		line 194 in file "LCDNokia5110.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  x               1    wreg     unsigned char 
  2499 ;;  y               1    0[BANK0 ] unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  x               1    1[BANK0 ] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2511 ;;      Params:         0       1       0       0
  2512 ;;      Locals:         0       1       0       0
  2513 ;;      Temps:          0       0       0       0
  2514 ;;      Totals:         0       2       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    3
  2518 ;; This function calls:
  2519 ;;		_LCDNokia_writeByte
  2520 ;; This function is called by:
  2521 ;;		_LCDNokia_clear
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text11
  2526  000656                     __ptext11:
  2527                           	opt stack 0
  2528  000656                     _LCDNokia_gotoXY:
  2529                           	opt stack 26
  2530                           
  2531                           ;incstack = 0
  2532                           ;LCDNokia_gotoXY@x stored from wreg
  2533  000656  0100               	movlb	0	; () banked
  2534  000658  6F8E               	movwf	LCDNokia_gotoXY@x& (0+255),b
  2535                           
  2536                           ;LCDNokia5110.c: 196: LCDNokia_writeByte(0, 0x80 | x);
  2537  00065A  0100               	movlb	0	; () banked
  2538  00065C  518E               	movf	LCDNokia_gotoXY@x& (0+255),w,b
  2539  00065E  0980               	iorlw	128
  2540  000660  6E4B               	movwf	LCDNokia_writeByte@data,c
  2541  000662  0E00               	movlw	0
  2542  000664  EC18  F003         	call	_LCDNokia_writeByte
  2543                           
  2544                           ;LCDNokia5110.c: 197: LCDNokia_writeByte(0, 0x40 | y);
  2545  000668  0100               	movlb	0	; () banked
  2546  00066A  518D               	movf	LCDNokia_gotoXY@y& (0+255),w,b
  2547  00066C  0940               	iorlw	64
  2548  00066E  6E4B               	movwf	LCDNokia_writeByte@data,c
  2549  000670  0E00               	movlw	0
  2550  000672  EC18  F003         	call	_LCDNokia_writeByte
  2551  000676  0012               	return		;funcret
  2552  000678                     __end_of_LCDNokia_gotoXY:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           postdec1	equ	0xFE5
  2563                           plusw1	equ	0xFE3
  2564                           fsr1l	equ	0xFE1
  2565                           plusw2	equ	0xFDB
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _LCDNokia_writeByte *****************
  2569 ;; Defined at:
  2570 ;;		line 143 in file "LCDNokia5110.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  DataOrCmd       1    wreg     unsigned char 
  2573 ;;  data            1   24[COMRAM] unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  DataOrCmd       1   25[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2585 ;;      Params:         1       0       0       0
  2586 ;;      Locals:         1       0       0       0
  2587 ;;      Temps:          0       0       0       0
  2588 ;;      Totals:         2       0       0       0
  2589 ;;Total ram usage:        2 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    2
  2592 ;; This function calls:
  2593 ;;		_GPIO_clearPIN
  2594 ;;		_GPIO_setPIN
  2595 ;;		_SPI_write
  2596 ;; This function is called by:
  2597 ;;		_LCDNokia_init
  2598 ;;		_LCDNokia_sendChar
  2599 ;;		_LCDNokia_clear
  2600 ;;		_LCDNokia_gotoXY
  2601 ;;		_LCDNokia_bitmap
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text12
  2606  000630                     __ptext12:
  2607                           	opt stack 0
  2608  000630                     _LCDNokia_writeByte:
  2609                           	opt stack 27
  2610                           
  2611                           ;incstack = 0
  2612                           ;LCDNokia_writeByte@DataOrCmd stored from wreg
  2613  000630  6E4C               	movwf	LCDNokia_writeByte@DataOrCmd,c
  2614                           
  2615                           ;LCDNokia5110.c: 145: if(DataOrCmd)
  2616  000632  504C               	movf	LCDNokia_writeByte@DataOrCmd,w,c
  2617  000634  B4D8               	btfsc	status,2,c
  2618  000636  D006               	goto	l506
  2619                           
  2620                           ;LCDNokia5110.c: 146: {
  2621                           ;LCDNokia5110.c: 147: GPIO_setPIN(GPIO_B, 2);
  2622  000638  0E02               	movlw	2
  2623  00063A  6E45               	movwf	GPIO_setPIN@pin,c
  2624  00063C  0E01               	movlw	1
  2625  00063E  ECB1  F001         	call	_GPIO_setPIN
  2626                           
  2627                           ;LCDNokia5110.c: 148: }
  2628  000642  D005               	goto	l507
  2629  000644                     l506:
  2630                           
  2631                           ;LCDNokia5110.c: 149: else
  2632                           ;LCDNokia5110.c: 150: {
  2633                           ;LCDNokia5110.c: 151: GPIO_clearPIN(GPIO_B, 2);
  2634  000644  0E02               	movlw	2
  2635  000646  6E45               	movwf	GPIO_clearPIN@pin,c
  2636  000648  0E01               	movlw	1
  2637  00064A  EC7A  F001         	call	_GPIO_clearPIN
  2638  00064E                     l507:
  2639                           
  2640                           ;LCDNokia5110.c: 152: }
  2641                           ;LCDNokia5110.c: 154: SPI_write(data);
  2642  00064E  504B               	movf	LCDNokia_writeByte@data,w,c
  2643  000650  EC3C  F003         	call	_SPI_write
  2644  000654  0012               	return		;funcret
  2645  000656                     __end_of_LCDNokia_writeByte:
  2646                           	opt stack 0
  2647                           tblptru	equ	0xFF8
  2648                           tblptrh	equ	0xFF7
  2649                           tblptrl	equ	0xFF6
  2650                           tablat	equ	0xFF5
  2651                           prodh	equ	0xFF4
  2652                           prodl	equ	0xFF3
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postdec1	equ	0xFE5
  2656                           plusw1	equ	0xFE3
  2657                           fsr1l	equ	0xFE1
  2658                           plusw2	equ	0xFDB
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _SPI_write *****************
  2662 ;; Defined at:
  2663 ;;		line 86 in file "SPI.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  data            1    wreg     unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  data            1   19[COMRAM] unsigned char 
  2668 ;;  dummy           1   20[COMRAM] const unsigned char 
  2669 ;;  success         1   18[COMRAM] char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      char 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2679 ;;      Params:         0       0       0       0
  2680 ;;      Locals:         3       0       0       0
  2681 ;;      Temps:          0       0       0       0
  2682 ;;      Totals:         3       0       0       0
  2683 ;;Total ram usage:        3 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_LCDNokia_writeByte
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text13
  2694  000678                     __ptext13:
  2695                           	opt stack 0
  2696  000678                     _SPI_write:
  2697                           	opt stack 27
  2698                           
  2699                           ;incstack = 0
  2700                           ;SPI_write@data stored from wreg
  2701  000678  6E46               	movwf	SPI_write@data,c
  2702                           
  2703                           ;SPI.c: 88: const uint8_t dummy = 0;
  2704  00067A  0E00               	movlw	0
  2705  00067C  6E47               	movwf	SPI_write@dummy,c
  2706                           
  2707                           ;SPI.c: 89: int8_t success = 1;
  2708  00067E  0E01               	movlw	1
  2709  000680  6E45               	movwf	SPI_write@success,c
  2710                           
  2711                           ;SPI.c: 92: SSPBUF = data;
  2712  000682  C046  FFC9         	movff	SPI_write@data,4041	;volatile
  2713  000686  A69E               	btfss	3998,3,c	;volatile
  2714  000688  D7FE               	goto	l185
  2715                           
  2716                           ;SPI.c: 98: PIR1bits.SSPIF = 0;
  2717  00068A  969E               	bcf	3998,3,c	;volatile
  2718                           
  2719                           ;SPI.c: 100: SSPBUF = dummy;
  2720  00068C  C047  FFC9         	movff	SPI_write@dummy,4041	;volatile
  2721                           
  2722                           ;SPI.c: 103: return (success);
  2723                           ;	Return value of _SPI_write is never used
  2724  000690  0012               	return		;funcret
  2725  000692                     __end_of_SPI_write:
  2726                           	opt stack 0
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           prodh	equ	0xFF4
  2732                           prodl	equ	0xFF3
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           postdec1	equ	0xFE5
  2736                           plusw1	equ	0xFE3
  2737                           fsr1l	equ	0xFE1
  2738                           plusw2	equ	0xFDB
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _GPIO_setPIN *****************
  2742 ;; Defined at:
  2743 ;;		line 151 in file "GPIO.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  portName        1    wreg     enum E3075
  2746 ;;  pin             1   18[COMRAM] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  portName        1   21[COMRAM] enum E3075
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2758 ;;      Params:         1       0       0       0
  2759 ;;      Locals:         1       0       0       0
  2760 ;;      Temps:          2       0       0       0
  2761 ;;      Totals:         4       0       0       0
  2762 ;;Total ram usage:        4 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_LCDNokia_init
  2769 ;;		_LCDNokia_writeByte
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text14
  2774  000362                     __ptext14:
  2775                           	opt stack 0
  2776  000362                     _GPIO_setPIN:
  2777                           	opt stack 27
  2778                           
  2779                           ;incstack = 0
  2780                           ;GPIO_setPIN@portName stored from wreg
  2781  000362  6E48               	movwf	GPIO_setPIN@portName,c
  2782                           
  2783                           ;GPIO.c: 154: switch(portName)
  2784  000364  D027               	goto	l122
  2785  000366                     
  2786                           ;GPIO.c: 157: PORTA |= (1<<pin);
  2787  000366  C045  F046         	movff	GPIO_setPIN@pin,??_GPIO_setPIN
  2788  00036A  0E01               	movlw	1
  2789  00036C  6E47               	movwf	(??_GPIO_setPIN+1)& (0+255),c
  2790  00036E  2A46               	incf	??_GPIO_setPIN,f,c
  2791  000370  D002               	goto	u954
  2792  000372                     u955:
  2793  000372  90D8               	bcf	status,0,c
  2794  000374  3647               	rlcf	??_GPIO_setPIN+1,f,c
  2795  000376                     u954:
  2796  000376  2E46               	decfsz	??_GPIO_setPIN,f,c
  2797  000378  D7FC               	goto	u955
  2798  00037A  5047               	movf	??_GPIO_setPIN+1,w,c
  2799  00037C  1280               	iorwf	3968,f,c	;volatile
  2800                           
  2801                           ;GPIO.c: 158: break;
  2802  00037E  0012               	return	
  2803  000380                     
  2804                           ;GPIO.c: 160: PORTB |= (1<<pin);
  2805  000380  C045  F046         	movff	GPIO_setPIN@pin,??_GPIO_setPIN
  2806  000384  0E01               	movlw	1
  2807  000386  6E47               	movwf	(??_GPIO_setPIN+1)& (0+255),c
  2808  000388  2A46               	incf	??_GPIO_setPIN,f,c
  2809  00038A  D002               	goto	u964
  2810  00038C                     u965:
  2811  00038C  90D8               	bcf	status,0,c
  2812  00038E  3647               	rlcf	??_GPIO_setPIN+1,f,c
  2813  000390                     u964:
  2814  000390  2E46               	decfsz	??_GPIO_setPIN,f,c
  2815  000392  D7FC               	goto	u965
  2816  000394  5047               	movf	??_GPIO_setPIN+1,w,c
  2817  000396  1281               	iorwf	3969,f,c	;volatile
  2818                           
  2819                           ;GPIO.c: 161: break;
  2820  000398  0012               	return	
  2821  00039A                     
  2822                           ;GPIO.c: 163: PORTC |= (1<<pin);
  2823  00039A  C045  F046         	movff	GPIO_setPIN@pin,??_GPIO_setPIN
  2824  00039E  0E01               	movlw	1
  2825  0003A0  6E47               	movwf	(??_GPIO_setPIN+1)& (0+255),c
  2826  0003A2  2A46               	incf	??_GPIO_setPIN,f,c
  2827  0003A4  D002               	goto	u974
  2828  0003A6                     u975:
  2829  0003A6  90D8               	bcf	status,0,c
  2830  0003A8  3647               	rlcf	??_GPIO_setPIN+1,f,c
  2831  0003AA                     u974:
  2832  0003AA  2E46               	decfsz	??_GPIO_setPIN,f,c
  2833  0003AC  D7FC               	goto	u975
  2834  0003AE  5047               	movf	??_GPIO_setPIN+1,w,c
  2835  0003B0  1282               	iorwf	3970,f,c	;volatile
  2836                           
  2837                           ;GPIO.c: 167: }
  2838                           
  2839                           ;GPIO.c: 166: break;
  2840                           
  2841                           ;GPIO.c: 165: default:
  2842                           
  2843                           ;GPIO.c: 164: break;
  2844  0003B2  0012               	return	
  2845  0003B4                     l122:
  2846  0003B4  5048               	movf	GPIO_setPIN@portName,w,c
  2847                           
  2848                           ; Switch size 1, requested type "space"
  2849                           ; Number of cases is 3, Range of values is 0 to 2
  2850                           ; switch strategies available:
  2851                           ; Name         Instructions Cycles
  2852                           ; simple_byte           10     6 (average)
  2853                           ;	Chosen strategy is simple_byte
  2854  0003B6  0A00               	xorlw	0	; case 0
  2855  0003B8  B4D8               	btfsc	status,2,c
  2856  0003BA  D7D5               	goto	l123
  2857  0003BC  0A01               	xorlw	1	; case 1
  2858  0003BE  B4D8               	btfsc	status,2,c
  2859  0003C0  D7DF               	goto	l125
  2860  0003C2  0A03               	xorlw	3	; case 2
  2861  0003C4  A4D8               	btfss	status,2,c
  2862  0003C6  0012               	return	
  2863  0003C8  D7E8               	goto	l126
  2864  0003CA                     __end_of_GPIO_setPIN:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           prodh	equ	0xFF4
  2871                           prodl	equ	0xFF3
  2872                           postinc0	equ	0xFEE
  2873                           wreg	equ	0xFE8
  2874                           postdec1	equ	0xFE5
  2875                           plusw1	equ	0xFE3
  2876                           fsr1l	equ	0xFE1
  2877                           plusw2	equ	0xFDB
  2878                           status	equ	0xFD8
  2879                           
  2880 ;; *************** function _GPIO_clearPIN *****************
  2881 ;; Defined at:
  2882 ;;		line 170 in file "GPIO.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  portName        1    wreg     enum E3075
  2885 ;;  pin             1   18[COMRAM] unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  portName        1   21[COMRAM] enum E3075
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2897 ;;      Params:         1       0       0       0
  2898 ;;      Locals:         1       0       0       0
  2899 ;;      Temps:          2       0       0       0
  2900 ;;      Totals:         4       0       0       0
  2901 ;;Total ram usage:        4 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_LCDNokia_init
  2908 ;;		_LCDNokia_writeByte
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text15
  2913  0002F4                     __ptext15:
  2914                           	opt stack 0
  2915  0002F4                     _GPIO_clearPIN:
  2916                           	opt stack 27
  2917                           
  2918                           ;incstack = 0
  2919                           ;GPIO_clearPIN@portName stored from wreg
  2920  0002F4  6E48               	movwf	GPIO_clearPIN@portName,c
  2921                           
  2922                           ;GPIO.c: 173: switch(portName)
  2923  0002F6  D02A               	goto	l131
  2924  0002F8                     
  2925                           ;GPIO.c: 176: PORTA &= ~(1<<pin);
  2926  0002F8  C045  F046         	movff	GPIO_clearPIN@pin,??_GPIO_clearPIN
  2927  0002FC  0E01               	movlw	1
  2928  0002FE  6E47               	movwf	(??_GPIO_clearPIN+1)& (0+255),c
  2929  000300  2A46               	incf	??_GPIO_clearPIN,f,c
  2930  000302  D002               	goto	u984
  2931  000304                     u985:
  2932  000304  90D8               	bcf	status,0,c
  2933  000306  3647               	rlcf	??_GPIO_clearPIN+1,f,c
  2934  000308                     u984:
  2935  000308  2E46               	decfsz	??_GPIO_clearPIN,f,c
  2936  00030A  D7FC               	goto	u985
  2937  00030C  5047               	movf	??_GPIO_clearPIN+1,w,c
  2938  00030E  0AFF               	xorlw	255
  2939  000310  1680               	andwf	3968,f,c	;volatile
  2940                           
  2941                           ;GPIO.c: 177: break;
  2942  000312  0012               	return	
  2943  000314                     
  2944                           ;GPIO.c: 179: PORTB &= ~(1<<pin);
  2945  000314  C045  F046         	movff	GPIO_clearPIN@pin,??_GPIO_clearPIN
  2946  000318  0E01               	movlw	1
  2947  00031A  6E47               	movwf	(??_GPIO_clearPIN+1)& (0+255),c
  2948  00031C  2A46               	incf	??_GPIO_clearPIN,f,c
  2949  00031E  D002               	goto	u994
  2950  000320                     u995:
  2951  000320  90D8               	bcf	status,0,c
  2952  000322  3647               	rlcf	??_GPIO_clearPIN+1,f,c
  2953  000324                     u994:
  2954  000324  2E46               	decfsz	??_GPIO_clearPIN,f,c
  2955  000326  D7FC               	goto	u995
  2956  000328  5047               	movf	??_GPIO_clearPIN+1,w,c
  2957  00032A  0AFF               	xorlw	255
  2958  00032C  1681               	andwf	3969,f,c	;volatile
  2959                           
  2960                           ;GPIO.c: 180: break;
  2961  00032E  0012               	return	
  2962  000330                     
  2963                           ;GPIO.c: 182: PORTC &= ~(1<<pin);
  2964  000330  C045  F046         	movff	GPIO_clearPIN@pin,??_GPIO_clearPIN
  2965  000334  0E01               	movlw	1
  2966  000336  6E47               	movwf	(??_GPIO_clearPIN+1)& (0+255),c
  2967  000338  2A46               	incf	??_GPIO_clearPIN,f,c
  2968  00033A  D002               	goto	u1004
  2969  00033C                     u1005:
  2970  00033C  90D8               	bcf	status,0,c
  2971  00033E  3647               	rlcf	??_GPIO_clearPIN+1,f,c
  2972  000340                     u1004:
  2973  000340  2E46               	decfsz	??_GPIO_clearPIN,f,c
  2974  000342  D7FC               	goto	u1005
  2975  000344  5047               	movf	??_GPIO_clearPIN+1,w,c
  2976  000346  0AFF               	xorlw	255
  2977  000348  1682               	andwf	3970,f,c	;volatile
  2978                           
  2979                           ;GPIO.c: 186: }
  2980                           
  2981                           ;GPIO.c: 185: break;
  2982                           
  2983                           ;GPIO.c: 184: default:
  2984                           
  2985                           ;GPIO.c: 183: break;
  2986  00034A  0012               	return	
  2987  00034C                     l131:
  2988  00034C  5048               	movf	GPIO_clearPIN@portName,w,c
  2989                           
  2990                           ; Switch size 1, requested type "space"
  2991                           ; Number of cases is 3, Range of values is 0 to 2
  2992                           ; switch strategies available:
  2993                           ; Name         Instructions Cycles
  2994                           ; simple_byte           10     6 (average)
  2995                           ;	Chosen strategy is simple_byte
  2996  00034E  0A00               	xorlw	0	; case 0
  2997  000350  B4D8               	btfsc	status,2,c
  2998  000352  D7D2               	goto	l132
  2999  000354  0A01               	xorlw	1	; case 1
  3000  000356  B4D8               	btfsc	status,2,c
  3001  000358  D7DD               	goto	l134
  3002  00035A  0A03               	xorlw	3	; case 2
  3003  00035C  A4D8               	btfss	status,2,c
  3004  00035E  0012               	return	
  3005  000360  D7E7               	goto	l135
  3006  000362                     __end_of_GPIO_clearPIN:
  3007                           	opt stack 0
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           prodh	equ	0xFF4
  3013                           prodl	equ	0xFF3
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           plusw1	equ	0xFE3
  3018                           fsr1l	equ	0xFE1
  3019                           plusw2	equ	0xFDB
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function _GPIO_sourceClock *****************
  3023 ;; Defined at:
  3024 ;;		line 18 in file "GPIO.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  clk             1    wreg     enum E3061
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  clk             1   18[COMRAM] enum E3061
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3038 ;;      Params:         0       0       0       0
  3039 ;;      Locals:         1       0       0       0
  3040 ;;      Temps:          0       0       0       0
  3041 ;;      Totals:         1       0       0       0
  3042 ;;Total ram usage:        1 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text16
  3053  0003CA                     __ptext16:
  3054                           	opt stack 0
  3055  0003CA                     _GPIO_sourceClock:
  3056                           	opt stack 29
  3057                           
  3058                           ;incstack = 0
  3059                           ;GPIO_sourceClock@clk stored from wreg
  3060  0003CA  6E45               	movwf	GPIO_sourceClock@clk,c
  3061                           
  3062                           ;GPIO.c: 20: switch(clk)
  3063  0003CC  D014               	goto	l60
  3064  0003CE                     
  3065                           ;GPIO.c: 23: OSCCON |= (0x72);
  3066  0003CE  0E72               	movlw	114
  3067  0003D0  12D3               	iorwf	4051,f,c	;volatile
  3068                           
  3069                           ;GPIO.c: 24: break;
  3070  0003D2  0012               	return	
  3071  0003D4                     
  3072                           ;GPIO.c: 26: OSCCON |= (0x60);
  3073  0003D4  0E60               	movlw	96
  3074  0003D6  12D3               	iorwf	4051,f,c	;volatile
  3075                           
  3076                           ;GPIO.c: 27: break;
  3077  0003D8  0012               	return	
  3078  0003DA                     
  3079                           ;GPIO.c: 29: OSCCON |= (0x50);
  3080  0003DA  0E50               	movlw	80
  3081  0003DC  12D3               	iorwf	4051,f,c	;volatile
  3082                           
  3083                           ;GPIO.c: 30: break;
  3084  0003DE  0012               	return	
  3085  0003E0                     
  3086                           ;GPIO.c: 32: OSCCON |= (0x40);
  3087  0003E0  8CD3               	bsf	4051,6,c	;volatile
  3088                           
  3089                           ;GPIO.c: 33: break;
  3090  0003E2  0012               	return	
  3091  0003E4                     
  3092                           ;GPIO.c: 35: OSCCON |= (0x30);
  3093  0003E4  0E30               	movlw	48
  3094  0003E6  12D3               	iorwf	4051,f,c	;volatile
  3095                           
  3096                           ;GPIO.c: 36: break;
  3097  0003E8  0012               	return	
  3098  0003EA                     
  3099                           ;GPIO.c: 38: OSCCON |= (0x20);
  3100  0003EA  8AD3               	bsf	4051,5,c	;volatile
  3101                           
  3102                           ;GPIO.c: 39: break;
  3103  0003EC  0012               	return	
  3104  0003EE                     
  3105                           ;GPIO.c: 41: OSCCON |= (0x10);
  3106  0003EE  88D3               	bsf	4051,4,c	;volatile
  3107                           
  3108                           ;GPIO.c: 42: break;
  3109  0003F0  0012               	return	
  3110  0003F2                     
  3111                           ;GPIO.c: 44: OSCCON |= (0x00);
  3112  0003F2  50D3               	movf	4051,w,c	;volatile
  3113                           
  3114                           ;GPIO.c: 48: }
  3115                           
  3116                           ;GPIO.c: 47: break;
  3117                           
  3118                           ;GPIO.c: 46: default:
  3119                           
  3120                           ;GPIO.c: 45: break;
  3121  0003F4  0012               	return	
  3122  0003F6                     l60:
  3123  0003F6  5045               	movf	GPIO_sourceClock@clk,w,c
  3124                           
  3125                           ; Switch size 1, requested type "space"
  3126                           ; Number of cases is 8, Range of values is 0 to 7
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte           25    13 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131  0003F8  0A00               	xorlw	0	; case 0
  3132  0003FA  B4D8               	btfsc	status,2,c
  3133  0003FC  D7E8               	goto	l61
  3134  0003FE  0A01               	xorlw	1	; case 1
  3135  000400  B4D8               	btfsc	status,2,c
  3136  000402  D7E8               	goto	l63
  3137  000404  0A03               	xorlw	3	; case 2
  3138  000406  B4D8               	btfsc	status,2,c
  3139  000408  D7E8               	goto	l64
  3140  00040A  0A01               	xorlw	1	; case 3
  3141  00040C  B4D8               	btfsc	status,2,c
  3142  00040E  D7E8               	goto	l65
  3143  000410  0A07               	xorlw	7	; case 4
  3144  000412  B4D8               	btfsc	status,2,c
  3145  000414  D7E7               	goto	l66
  3146  000416  0A01               	xorlw	1	; case 5
  3147  000418  B4D8               	btfsc	status,2,c
  3148  00041A  D7E7               	goto	l67
  3149  00041C  0A03               	xorlw	3	; case 6
  3150  00041E  B4D8               	btfsc	status,2,c
  3151  000420  D7E6               	goto	l68
  3152  000422  0A01               	xorlw	1	; case 7
  3153  000424  A4D8               	btfss	status,2,c
  3154  000426  0012               	return	
  3155  000428  D7E4               	goto	l69
  3156  00042A                     __end_of_GPIO_sourceClock:
  3157                           	opt stack 0
  3158                           tblptru	equ	0xFF8
  3159                           tblptrh	equ	0xFF7
  3160                           tblptrl	equ	0xFF6
  3161                           tablat	equ	0xFF5
  3162                           prodh	equ	0xFF4
  3163                           prodl	equ	0xFF3
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           plusw1	equ	0xFE3
  3168                           fsr1l	equ	0xFE1
  3169                           plusw2	equ	0xFDB
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _Button1 *****************
  3173 ;; Defined at:
  3174 ;;		line 5 in file "Buttons.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		None
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3188 ;;      Params:         0       0       0       0
  3189 ;;      Locals:         0       0       0       0
  3190 ;;      Temps:         18       0       0       0
  3191 ;;      Totals:        18       0       0       0
  3192 ;;Total ram usage:       18 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		Interrupt level 2
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	intcode
  3202  000008                     __pintcode:
  3203                           	opt stack 0
  3204  000008                     _Button1:
  3205                           	opt stack 26
  3206                           
  3207                           ;incstack = 0
  3208  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3209  00000A  CFFA F033          	movff	pclath,??_Button1
  3210  00000E  CFFB F034          	movff	pclatu,??_Button1+1
  3211  000012  CFE9 F035          	movff	fsr0l,??_Button1+2
  3212  000016  CFEA F036          	movff	fsr0h,??_Button1+3
  3213  00001A  CFE1 F037          	movff	fsr1l,??_Button1+4
  3214  00001E  CFE2 F038          	movff	fsr1h,??_Button1+5
  3215  000022  CFD9 F039          	movff	fsr2l,??_Button1+6
  3216  000026  CFDA F03A          	movff	fsr2h,??_Button1+7
  3217  00002A  CFF3 F03B          	movff	prodl,??_Button1+8
  3218  00002E  CFF4 F03C          	movff	prodh,??_Button1+9
  3219  000032  CFF6 F03D          	movff	tblptrl,??_Button1+10
  3220  000036  CFF7 F03E          	movff	tblptrh,??_Button1+11
  3221  00003A  CFF8 F03F          	movff	tblptru,??_Button1+12
  3222  00003E  CFF5 F040          	movff	tablat,??_Button1+13
  3223  000042  C04D  F041         	movff	btemp,??_Button1+14
  3224  000046  C04E  F042         	movff	btemp+1,??_Button1+15
  3225  00004A  C04F  F043         	movff	btemp+2,??_Button1+16
  3226  00004E  C050  F044         	movff	btemp+3,??_Button1+17
  3227                           
  3228                           ;Buttons.c: 8: if(INT0IF)
  3229  000052  B2F2               	btfsc	intcon,1,c	;volatile
  3230                           
  3231                           ;Buttons.c: 9: {
  3232                           ;Buttons.c: 11: INT0IF = 0;
  3233  000054  92F2               	bcf	intcon,1,c	;volatile
  3234  000056  C044  F050         	movff	??_Button1+17,btemp+3
  3235  00005A  C043  F04F         	movff	??_Button1+16,btemp+2
  3236  00005E  C042  F04E         	movff	??_Button1+15,btemp+1
  3237  000062  C041  F04D         	movff	??_Button1+14,btemp
  3238  000066  C040  FFF5         	movff	??_Button1+13,tablat
  3239  00006A  C03F  FFF8         	movff	??_Button1+12,tblptru
  3240  00006E  C03E  FFF7         	movff	??_Button1+11,tblptrh
  3241  000072  C03D  FFF6         	movff	??_Button1+10,tblptrl
  3242  000076  C03C  FFF4         	movff	??_Button1+9,prodh
  3243  00007A  C03B  FFF3         	movff	??_Button1+8,prodl
  3244  00007E  C03A  FFDA         	movff	??_Button1+7,fsr2h
  3245  000082  C039  FFD9         	movff	??_Button1+6,fsr2l
  3246  000086  C038  FFE2         	movff	??_Button1+5,fsr1h
  3247  00008A  C037  FFE1         	movff	??_Button1+4,fsr1l
  3248  00008E  C036  FFEA         	movff	??_Button1+3,fsr0h
  3249  000092  C035  FFE9         	movff	??_Button1+2,fsr0l
  3250  000096  C034  FFFB         	movff	??_Button1+1,pclatu
  3251  00009A  C033  FFFA         	movff	??_Button1,pclath
  3252  00009E  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3253  0000A0  0011               	retfie		f
  3254  0000A2                     __end_of_Button1:
  3255                           	opt stack 0
  3256                           pclatu	equ	0xFFB
  3257                           pclath	equ	0xFFA
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           intcon	equ	0xFF2
  3265                           postinc0	equ	0xFEE
  3266                           fsr0h	equ	0xFEA
  3267                           fsr0l	equ	0xFE9
  3268                           wreg	equ	0xFE8
  3269                           postdec1	equ	0xFE5
  3270                           plusw1	equ	0xFE3
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           plusw2	equ	0xFDB
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           pclatu	equ	0xFFB
  3278                           pclath	equ	0xFFA
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           prodh	equ	0xFF4
  3284                           prodl	equ	0xFF3
  3285                           intcon	equ	0xFF2
  3286                           postinc0	equ	0xFEE
  3287                           fsr0h	equ	0xFEA
  3288                           fsr0l	equ	0xFE9
  3289                           wreg	equ	0xFE8
  3290                           postdec1	equ	0xFE5
  3291                           plusw1	equ	0xFE3
  3292                           fsr1h	equ	0xFE2
  3293                           fsr1l	equ	0xFE1
  3294                           plusw2	equ	0xFDB
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299                           	psect	rparam
  3300  0000                     pclatu	equ	0xFFB
  3301                           pclath	equ	0xFFA
  3302                           tblptru	equ	0xFF8
  3303                           tblptrh	equ	0xFF7
  3304                           tblptrl	equ	0xFF6
  3305                           tablat	equ	0xFF5
  3306                           prodh	equ	0xFF4
  3307                           prodl	equ	0xFF3
  3308                           intcon	equ	0xFF2
  3309                           postinc0	equ	0xFEE
  3310                           fsr0h	equ	0xFEA
  3311                           fsr0l	equ	0xFE9
  3312                           wreg	equ	0xFE8
  3313                           postdec1	equ	0xFE5
  3314                           plusw1	equ	0xFE3
  3315                           fsr1h	equ	0xFE2
  3316                           fsr1l	equ	0xFE1
  3317                           plusw2	equ	0xFDB
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322                           	psect	temp
  3323  00004D                     btemp:
  3324                           	opt stack 0
  3325  00004D                     	ds	1
  3326  0000                     int$flags	set	btemp
  3327  0000                     wtemp6	set	btemp+1
  3328                           pclatu	equ	0xFFB
  3329                           pclath	equ	0xFFA
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           fsr0h	equ	0xFEA
  3339                           fsr0l	equ	0xFE9
  3340                           wreg	equ	0xFE8
  3341                           postdec1	equ	0xFE5
  3342                           plusw1	equ	0xFE3
  3343                           fsr1h	equ	0xFE2
  3344                           fsr1l	equ	0xFE1
  3345                           plusw2	equ	0xFDB
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    543
    Data        11
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      76
    BANK0           160     17      73
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    S907PhaseTemperature$PhaseTemperature	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitTemperature(), showTemperature(), 

    phasesTemperature.PhaseTemperature	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitTemperature(), showTemperature(), 

    S883PhaseFrequency$PhaseFrequency	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitFrequency(), showFrequency(), 

    phasesFrequency.PhaseFrequency	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitFrequency(), showFrequency(), 

    S854PhasePhaseAngle$PhasePhaseAngle	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitPhaseAngle(), viPhaseAngle(), phPhaseAngle(), 

    phasesPhaseAngle.PhasePhaseAngle	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitPhaseAngle(), viPhaseAngle(), phPhaseAngle(), 

    S829PhasePowerFactor$PhasePowerFactor	PTR FTN(struct .,)struct . size(2) Largest target is 2
		 -> exitPowerFactor(), phPowerFactor(), 

    phasesPowerFactor.PhasePowerFactor	PTR FTN(struct .,)struct . size(2) Largest target is 2
		 -> exitPowerFactor(), phPowerFactor(), 

    S801PhaseRmsVI$PhaseRmsVI	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitRmsVI(), neutralRmsVI(), phRmsVI(), 

    phasesRmsVI.PhaseRmsVI	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitRmsVI(), neutralRmsVI(), phRmsVI(), 

    S771PhasePower2$PhasePower2	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitPower2(), phPower2(), fhPower2(), 

    phasesPower2.PhasePower2	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitPower2(), phPower2(), fhPower2(), 

    S736PhasePower1$PhasePower1	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitPower1(), vectorPower1(), phPower1(), typesPower1(), 

    phasesPower1.PhasePower1	PTR FTN(struct .,)struct . size(2) Largest target is 3
		 -> exitPower1(), vectorPower1(), phPower1(), typesPower1(), 

    S705PhaseMainMenu$PhaseMainMenu	PTR FTN(struct .,)struct . size(2) Largest target is 2
		 -> viewMenu(), generalView(), initialLoad(), 

    phasesMainMenu.PhaseMainMenu	PTR FTN(struct .,)struct . size(2) Largest target is 2
		 -> viewMenu(), generalView(), initialLoad(), 

    SPI_init@SPI_Config	PTR const struct . size(2) Largest target is 3
		 -> SPI_Config(CODE[3]), 

    S45State$stateFunction	PTR FTN()enum E3234 size(2) Largest target is 1
		 -> stateTemperature(), stateFrequency(), statePhaseAngle(), statePowerFactor(), 
		 -> stateRmsVI(), statePower2(), statePower1(), stateMainMenu(), 

    StateProgram.stateFunction	PTR FTN()enum E3234 size(2) Largest target is 1
		 -> stateTemperature(), stateFrequency(), statePhaseAngle(), statePowerFactor(), 
		 -> stateRmsVI(), statePower2(), statePower1(), stateMainMenu(), 


Critical Paths under _main in COMRAM

    _main->_delay
    _SPI_init->_SPI_enableClock
    _LCDNokia_sendChar->_LCDNokia_writeByte
    _LCDNokia_init->_LCDNokia_writeByte
    _LCDNokia_init->_delay
    _LCDNokia_clear->_LCDNokia_writeByte
    _LCDNokia_gotoXY->_LCDNokia_writeByte
    _LCDNokia_writeByte->___wmul

Critical Paths under _Button1 in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCDNokia_sendChar
    _LCDNokia_clear->_LCDNokia_gotoXY

Critical Paths under _Button1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Button1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Button1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   12175
                                              5 BANK0     12    12      0
                   _GPIO_sourceClock
                     _LCDNokia_clear
                      _LCDNokia_init
                  _LCDNokia_sendChar
                           _SPI_init
                              _delay
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             4     2      2     366
                                             20 COMRAM     4     2      2
                    _SPI_enableClock
                     _SPI_enablePins
 ---------------------------------------------------------------------------------
 (2) _SPI_enablePins                                       1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_enableClock                                      2     1      1     152
                                             18 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCDNokia_sendChar                                    5     5      0    2460
                                              0 BANK0      5     5      0
                 _LCDNokia_writeByte
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCDNokia_init                                        0     0      0    4409
                      _GPIO_clearPIN
              _GPIO_dataDirectionPIN
                        _GPIO_setPIN
                 _LCDNokia_writeByte
                          _LCD_delay
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                8     4      4     819
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_delay                                            4     4      0      68
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_dataDirectionPIN                                5     3      2     999
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCDNokia_clear                                       2     2      0    4053
                                              2 BANK0      2     2      0
                    _LCDNokia_gotoXY
                 _LCDNokia_writeByte
 ---------------------------------------------------------------------------------
 (2) _LCDNokia_gotoXY                                      2     1      1    2067
                                              0 BANK0      2     1      1
                 _LCDNokia_writeByte
 ---------------------------------------------------------------------------------
 (2) _LCDNokia_writeByte                                   2     1      1    1915
                                             24 COMRAM     2     1      1
                      _GPIO_clearPIN
                        _GPIO_setPIN
                          _SPI_write
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _SPI_write                                            3     3      0      75
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _GPIO_setPIN                                          4     3      1     304
                                             18 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _GPIO_clearPIN                                        4     3      1     304
                                             18 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_sourceClock                                     1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Button1                                             18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_sourceClock
   _LCDNokia_clear
     _LCDNokia_gotoXY
       _LCDNokia_writeByte
         _GPIO_clearPIN
         _GPIO_setPIN
         _SPI_write
         ___wmul (ARG)
     _LCDNokia_writeByte
       _GPIO_clearPIN
       _GPIO_setPIN
       _SPI_write
       ___wmul (ARG)
   _LCDNokia_init
     _GPIO_clearPIN
     _GPIO_dataDirectionPIN
     _GPIO_setPIN
     _LCDNokia_writeByte
       _GPIO_clearPIN
       _GPIO_setPIN
       _SPI_write
       ___wmul (ARG)
     _LCD_delay
     _delay
   _LCDNokia_sendChar
     _LCDNokia_writeByte
       _GPIO_clearPIN
       _GPIO_setPIN
       _SPI_write
       ___wmul (ARG)
     ___wmul
   _SPI_init
     _SPI_enableClock
     _SPI_enablePins
   _delay

 _Button1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      49       5       45.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95       3        0.0%
DATA                 0      0      95      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Jun 05 20:15:48 2018

                    _LCDNokia_clear 0546                       _LCDNokia_init 00A6  
                     _stateMainMenu 000000             __size_of_SPI_enablePins 002C  
                       _statePower1 000000                         _statePower2 000000  
                  GPIO_clearPIN@pin 0045                     _LCDNokia_gotoXY 0656  
          __size_of_SPI_enableClock 003E                         _SSPSTATbits 000FC7  
                                l60 03F6                                  l61 03CE  
                                l63 03D4                                  l39 045C  
                                l64 03DA                                  l80 01C8  
                                l65 03E0                                  l66 03E4  
                                l74 025C                                  l67 03EA  
                                l68 03EE                                  l84 0246  
                                l76 01E2                                  l69 03F2  
                                l85 01F8                                  l77 0194  
                                l87 0212                                  l79 01AE  
                                l88 022C                 ___wmul@multiplicand 0047  
            __size_of_GPIO_clearPIN 006E                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                                 l122 03B4  
                               l131 034C                                 l123 0366  
                               l132 02F8                                 l125 0380  
                               l134 0314                                 l126 039A  
                               l135 0330                                 l160 0516  
                               l162 051A                                 l164 0536  
                               l172 05C8                                 l165 052E  
                               l173 05BA                                 l174 05DC  
                               l167 0532                                 l159 051E  
                               l175 05C0                                 l176 05C4  
                               l185 0686                                 l506 0644  
                               l507 064E                                 l532 05B4  
                               _GIE 007F97                        __CFG_CPB$OFF 000000  
                    _stateFrequency 000000                        __CFG_CPD$OFF 000000  
                               u954 0376                                 u955 0372  
                               u964 0390                                 u965 038C  
                               u974 03AA                                 u975 03A6  
                               u984 0308                                 u985 0304  
                               u994 0324                                 u995 0320  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      __CFG_LVP$OFF 000000             phPower1@currentPower1_2 0005  
                              l2318 05F2                                l2424 0558  
                              l2442 028E                                l2452 02E8  
                              l2382 0592                   _LCDNokia_sendChar 026C  
                              u1004 0340                                u1005 033C  
                              u1104 023C                                u1105 0238  
                              u1211 0454                                u1140 0576  
                              u1054 01A4                                u1055 01A0  
                              u1064 01BE                                u1160 02E8  
                              u1065 01BA                                u1074 01D8  
                              u1075 01D4                                u1084 0208  
                              u1085 0204                                u1094 0222  
                              u1095 021E                       __CFG_FCMEN$ON 000000  
                      ?_GPIO_setPIN 0045                  ?_LCDNokia_sendChar 0033  
                              _main 042A  exitTemperature@currentTemperature2 0060  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 004D                       __CFG_BOREN$ON 000000  
                              prodh 000FF4                                prodl 000FF3  
                              start 00A2              __end_of_LCDNokia_clear 0582  
                __size_of_LCD_delay 0034                     _statePhaseAngle 000000  
                    ?_LCDNokia_init 0033                 ??_LCDNokia_sendChar 008D  
                      ___param_bank 000000                     __end_of_Button1 00A2  
            LCDNokia_sendChar@index 0090                  phRmsVI@currentRms1 007B  
                             ?_main 0033                               _ASCII 1DDF  
                             _SPBRG 000FAF                               _PORTA 000F80  
                             _PORTB 000F81                               _PORTC 000F82  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TXREG 000FAD  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                    __CFG_EBTR0$OFF 000000                      __CFG_EBTR1$OFF 000000  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                    GPIO_setPIN@pin 0045                       __CFG_WRTD$OFF 000000  
         __end_of_LCDNokia_sendChar 02F4                      __CFG_EBTRB$OFF 000000  
                             _delay 05E2            viewMenu@currentMainMenu3 0021  
                             pclath 000FFA                         _typesPower1 000000  
                             tablat 000FF5                    __end_of_SPI_init 04C2  
                     _GPIO_clearPIN 02F4                               plusw1 000FE3  
                             plusw2 000FDB                               status 000FD8  
                             wtemp6 004E             phPower2@currentPower2_2 0081  
         __size_of_GPIO_sourceClock 0060             __end_of_LCDNokia_gotoXY 0678  
                   ?_LCDNokia_clear 0033                  __size_of_SPI_write 001A  
                    __CFG_MCLRE$OFF 000000                     __initialization 04C2  
                    __CFG_HPOL$HIGH 000000                        __end_of_main 047A  
                _LCDNokia_writeByte 0630                      __CFG_OSC$IRCIO 000000  
                    __CFG_LPOL$HIGH 000000                              ??_main 004D  
                     __activetblptr 000002                 ?_LCDNokia_writeByte 004B  
    phPhaseAngle@currentPhaseAngle1 0072                   ??_SPI_enableClock 0046  
                 __end_of_LCD_delay 05B6                       main@arrayTest 0092  
                            ?_delay 0045                              _ANSEL0 000FB8  
    exitFrequency@currentFrequency2 0066                      ?_GPIO_clearPIN 0045  
                            _INT0IE 007F94                              _INT0IF 007F91  
                    __CFG_WDTEN$OFF 000000                              _OSCCON 000FD3  
                    __CFG_WINEN$OFF 000000                              _SSPCON 000FC6  
                            _SSPBUF 000FC9                ??_LCDNokia_writeByte 004C  
                   ??_LCDNokia_init 004D                       _phPowerFactor 000000  
                         ??_Button1 0033                    LCDNokia_gotoXY@x 008E  
                  LCDNokia_gotoXY@y 008D         initialLoad@currentMainMenu1 0025  
                    _SPI_enablePins 05B6                              ___wmul 060A  
    __size_of_GPIO_dataDirectionPIN 00DC                      __CFG_STVREN$ON 000000  
     __end_of_GPIO_dataDirectionPIN 026C                              clear_0 04E8  
                            clear_1 04F4                 SPI_enableClock@cpol 0045  
                      __mediumconst 1DDE                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                 __end_of_SPI_write 0692          __size_of_LCDNokia_sendChar 0088  
                  _stateTemperature 000000                          __accesstop 0060  
           __end_of__initialization 04FA                       __end_of_ASCII 1FBF  
                     ___rparam_used 000001                __size_of_GPIO_setPIN 0068  
                  ?_LCDNokia_gotoXY 008D              __end_of_SPI_enablePins 05E2  
                  _statePowerFactor 000000                     __CFG_T1OSCMX$ON 000000  
                   stateRmsVI@phase 002F                 GPIO_setPIN@portName 0048  
           neutralRmsVI@currentRms2 0078                      __pcstackCOMRAM 0033  
                      __pidataBANK0 0692                       __end_of_delay 060A  
                 _phasesTemperature 1FEF                           ?_SPI_init 0047  
                     _exitFrequency 000000               GPIO_clearPIN@portName 0048  
                   _exitTemperature 000000                             ??_delay 0049  
                   ??_GPIO_clearPIN 0046    exitPhaseAngle@currentPhaseAngle3 006C  
                 _phasesPowerFactor 1FF7                          __pbssBANK0 0060  
                  _GPIO_sourceClock 03CA                     _exitPowerFactor 000000  
                   ?_SPI_enablePins 0033                      SPI_write@dummy 0047  
                           ?___wmul 0045                     __CFG_WDPS$32768 000000  
         __end_of_phasesTemperature 1FF3          LCDNokia_sendChar@character 008F  
                        ??_SPI_init 0049                    SPI_write@success 0045  
         __end_of_phasesPowerFactor 1FFB         LCDNokia_writeByte@DataOrCmd 004C  
                           _SSPSTAT 000FC7               stateTemperature@phase 002B  
                  ??_LCDNokia_clear 004D      viPhaseAngle@currentPhaseAngle2 006F  
                   __CFG_PWMPIN$OFF 000000                             _Button1 0008  
                   __CFG_PWRTEN$OFF 000000                             __Hparam 0000  
                           __Lparam 0000                     _SPI_enableClock 0508  
                SPI_init@SPI_Config 0047                     __size_of___wmul 0026  
            statePower1@phasePower1 001A                 LCDNokia_clear@index 008F  
     GPIO_dataDirectionPIN@portName 0049                             __pcinit 04C2  
           fhPower2@currentPower2_1 0084                          _exitPower1 000000  
                        _exitPower2 000000                             __ramtop 0300  
                           __ptext0 042A                             __ptext1 047A  
                           __ptext2 05B6                             __ptext3 0508  
                           __ptext4 026C                             __ptext5 060A  
                           __ptext6 00A6                             __ptext7 05E2  
                           __ptext8 0582                             __ptext9 0190  
        typesPower1@currentPower1_1 0008                             _phRmsVI 000000  
                        delay@delay 0045                     _showTemperature 000000  
                __end_of_SPI_Config 1FFE                           _LCD_delay 0582  
              end_of_initialization 04FA      showFrequency@currentFrequency1 0069  
                     __Lmediumconst 1DDE                SPI_enableClock@phase 0046  
            stateMainMenu@phaseMain 0029                 GPIO_sourceClock@clk 0045  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postinc0 000FEE              statePower2@phasePower2 0017  
              __end_of_phasesPower1 1FD7                __end_of_phasesPower2 1FE9  
              exitRmsVI@currentRms3 0075      statePhaseAngle@phasePhaseAngle 0011  
                         _TRISCbits 000F94                          _stateRmsVI 000000  
                        ?_LCD_delay 0033                           _SPI_write 0678  
           __end_of_SPI_enableClock 0546                           _TXSTAbits 000FAC  
       __size_of_LCDNokia_writeByte 0026                        _phPhaseAngle 000000  
             __end_of_LCDNokia_init 0190    stateTemperature@phaseTemperature 000B  
                    __end_of___wmul 0630                         _BAUDCTLbits 000FAA  
             _GPIO_dataDirectionPIN 0190        stateFrequency@phaseFrequency 000E  
          __end_of_GPIO_sourceClock 042A                 start_initialization 04C2  
                 __size_of_SPI_init 0048                stateRmsVI@phaseRmsVI 0014  
                        ?_SPI_write 0033                    ??_SPI_enablePins 0045  
                     ??_GPIO_setPIN 0046                    _phasesPhaseAngle 1FD7  
                    _exitPhaseAngle 000000                statePhaseAngle@phase 002D  
                          ??___wmul 0049                         __pdataBANK0 009E  
          __size_of_LCDNokia_gotoXY 0022         generalView@currentMainMenu2 0023  
                  LCD_delay@counter 0045                         __pbssCOMRAM 0001  
                     __pcstackBANK0 008D                         ??_LCD_delay 0045  
             __end_of_GPIO_clearPIN 0362                    statePower1@phase 0031  
                  statePower2@phase 0030                    ?_SPI_enableClock 0045  
                          ?_Button1 0033                SPI_enablePins@serial 0045  
               __end_of_GPIO_setPIN 03CA                       SPI_write@data 0046  
                         __pintcode 0008                       __pmediumconst 1DDE  
            ?_GPIO_dataDirectionPIN 0045                __end_of_StateProgram 1FCF  
                    __size_of_delay 0028                           _exitRmsVI 000000  
                      delay@counter 0049                         ??_SPI_write 0045  
                       _generalView 000000                      ___wmul@product 0049  
               stateFrequency@phase 002C                        _phasesPower1 1FCF  
                      _phasesPower2 1FE3                            _PIR1bits 000F9E  
                         main@F3282 009E         vectorPower1@currentPower1_3 008A  
               __end_of_phasesRmsVI 1FE3                        _viPhaseAngle 000000  
  statePowerFactor@phasePowerFactor 0027                   ___wmul@multiplier 0045  
                          _SPI_init 047A  showTemperature@currentTemperature1 0063  
                    expBASE10@value 0001                   ??_LCDNokia_gotoXY 004D  
                         copy_data0 04D6                     _phasesFrequency 1FF3  
                       _GPIO_setPIN 0362              LCDNokia_writeByte@data 004B  
                          __Hrparam 0000                    __size_of_Button1 009A  
                      _neutralRmsVI 000000                            __Lrparam 0000  
           __size_of_LCDNokia_clear 003C            __end_of_phasesPhaseAngle 1FDD  
                     _showFrequency 000000                   ?_GPIO_sourceClock 0033  
                          _fhPower2 000000                         _initialLoad 000000  
                ??_GPIO_sourceClock 0045                            __ptext10 0546  
                          __ptext11 0656                            __ptext12 0630  
                          __ptext13 0678                            __ptext14 0362  
                          __ptext15 02F4                            __ptext16 03CA  
  phPowerFactor@currentPowerFactor1 001F  exitPowerFactor@currentPowerFactor2 001D  
        __end_of_LCDNokia_writeByte 0656                            _phPower1 000000  
                          _phPower2 000000                       __size_of_main 0050  
                       _phasesRmsVI 1FDD                            _viewMenu 000000  
                          int$flags 004D                            main@test 009D  
                    _phasesMainMenu 1FE9             __end_of_phasesFrequency 1FF7  
            __size_of_LCDNokia_init 00EA                  stateMainMenu@phase 0032  
         exitPower1@currentPower1_4 0087          GPIO_dataDirectionPIN@state 0046  
                          intlevel2 0000                        _vectorPower1 000000  
             statePowerFactor@phase 002E            GPIO_dataDirectionPIN@pin 0045  
                      _StateProgram 1FBF             ??_GPIO_dataDirectionPIN 0047  
            __end_of_phasesMainMenu 1FEF           exitPower2@currentPower2_3 007E  
                        _SSPCONbits 000FC6                          _SPI_Config 1FFB  
