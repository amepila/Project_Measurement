

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri May 25 02:16:45 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F2331 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	smallconst
    53  000300                     __psmallconst:
    54                           	opt stack 0
    55  000300  00                 	db	0
    56  000301                     _SPI_Config:
    57                           	opt stack 0
    58  000301  00                 	db	0
    59  000302  00                 	db	0
    60  000303  00                 	db	0
    61  000304                     __end_of_SPI_Config:
    62                           	opt stack 0
    63  0000                     _TXREG	set	4013
    64  0000                     _SPBRG	set	4015
    65  0000                     _BAUDCTLbits	set	4010
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _TXSTAbits	set	4012
    68  0000                     _SSPBUF	set	4041
    69  0000                     _TRISCbits	set	3988
    70  0000                     _SSPSTATbits	set	4039
    71  0000                     _SSPCONbits	set	4038
    72  0000                     _SSPCON	set	4038
    73  0000                     _SSPSTAT	set	4039
    74  0000                     _ANSEL0	set	4024
    75  0000                     _TRISC	set	3988
    76  0000                     _TRISB	set	3987
    77  0000                     _TRISA	set	3986
    78  0000                     _OSCCON	set	4051
    79  000304  00                 	db	0	; dummy byte at the end
    80  0000                     
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84  000430                     __pcinit:
    85                           	opt stack 0
    86  000430                     start_initialization:
    87                           	opt stack 0
    88  000430                     __initialization:
    89                           	opt stack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (4 bytes)
    92  000430  6A0A               	clrf	(__pbssCOMRAM+3)& (0+255),c
    93  000432  6A09               	clrf	(__pbssCOMRAM+2)& (0+255),c
    94  000434  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    95  000436  6A07               	clrf	__pbssCOMRAM& (0+255),c
    96  000438                     end_of_initialization:
    97                           	opt stack 0
    98  000438                     __end_of__initialization:
    99                           	opt stack 0
   100  000438  0E00               	movlw	low (__Lmediumconst shr (0+16))
   101  00043A  6EF8               	movwf	tblptru,c
   102  00043C  0100               	movlb	0
   103  00043E  EF0E  F002         	goto	_main	;jump to C main() function
   104                           tblptru	equ	0xFF8
   105                           
   106                           	psect	bssCOMRAM
   107  000007                     __pbssCOMRAM:
   108                           	opt stack 0
   109  000007                     expBASE10@value:
   110                           	opt stack 0
   111  000007                     	ds	4
   112                           tblptru	equ	0xFF8
   113                           
   114                           	psect	cstackCOMRAM
   115  000001                     __pcstackCOMRAM:
   116                           	opt stack 0
   117  000001                     GPIO_sourceClock@clk:
   118                           	opt stack 0
   119  000001                     SPI_enableClock@cpol:
   120                           	opt stack 0
   121  000001                     SPI_enablePins@serial:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x0
   125  000001                     	ds	1
   126  000002                     SPI_enableClock@phase:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0x1
   130  000002                     	ds	1
   131  000003                     SPI_init@SPI_Config:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x2
   135  000003                     	ds	2
   136  000005                     ??_SPI_init:
   137                           
   138                           ; 1 bytes @ 0x4
   139  000005                     	ds	2
   140  000007                     tblptru	equ	0xFF8
   141                           
   142                           ; 1 bytes @ 0x6
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 16 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;		None
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   162 ;;      Params:         0       0       0       0
   163 ;;      Locals:         0       0       0       0
   164 ;;      Temps:          0       0       0       0
   165 ;;      Totals:         0       0       0       0
   166 ;;Total ram usage:        0 bytes
   167 ;; Hardware stack levels required when called:    2
   168 ;; This function calls:
   169 ;;		_GPIO_sourceClock
   170 ;;		_SPI_init
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           	psect	text0
   177  00041C                     __ptext0:
   178                           	opt stack 0
   179  00041C                     _main:
   180                           	opt stack 29
   181                           
   182                           ;main.c: 19: GPIO_sourceClock(CLK_8MHZ);
   183                           
   184                           ;incstack = 0
   185  00041C  0E00               	movlw	0
   186  00041E  EC83  F001         	call	_GPIO_sourceClock
   187                           
   188                           ;main.c: 22: SPI_init(&SPI_Config);
   189  000422  0E01               	movlw	low _SPI_Config
   190  000424  6E03               	movwf	SPI_init@SPI_Config,c
   191  000426  0E03               	movlw	high _SPI_Config
   192  000428  6E04               	movwf	SPI_init@SPI_Config+1,c
   193  00042A  ECB3  F001         	call	_SPI_init	;wreg free
   194  00042E                     l11:
   195                           
   196                           ;main.c: 25: {
   197                           ;main.c: 27: }
   198  00042E  D7FF               	goto	l11
   199  000430                     __end_of_main:
   200                           	opt stack 0
   201                           tblptru	equ	0xFF8
   202                           
   203 ;; *************** function _SPI_init *****************
   204 ;; Defined at:
   205 ;;		line 76 in file "SPI.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;  SPI_Config      2    2[COMRAM] PTR const struct .
   208 ;;		 -> SPI_Config(3), 
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   220 ;;      Params:         2       0       0       0
   221 ;;      Locals:         0       0       0       0
   222 ;;      Temps:          2       0       0       0
   223 ;;      Totals:         4       0       0       0
   224 ;;Total ram usage:        4 bytes
   225 ;; Hardware stack levels used:    1
   226 ;; Hardware stack levels required when called:    1
   227 ;; This function calls:
   228 ;;		_SPI_enableClock
   229 ;;		_SPI_enablePins
   230 ;; This function is called by:
   231 ;;		_main
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text1
   236  000366                     __ptext1:
   237                           	opt stack 0
   238  000366                     _SPI_init:
   239                           	opt stack 29
   240                           
   241                           ;SPI.c: 78: SPI_enableClock(SPI_Config->SPI_Polarity, SPI_Config->SPI_Phase);
   242                           
   243                           ;incstack = 0
   244  000366  0E01               	movlw	1
   245  000368  2403               	addwf	SPI_init@SPI_Config,w,c
   246  00036A  6E05               	movwf	??_SPI_init& (0+255),c
   247  00036C  0E00               	movlw	0
   248  00036E  2004               	addwfc	SPI_init@SPI_Config+1,w,c
   249  000370  6E06               	movwf	(??_SPI_init+1)& (0+255),c
   250  000372  C005  FFF6         	movff	??_SPI_init,tblptrl
   251  000376  C006  FFF7         	movff	??_SPI_init+1,tblptrh
   252  00037A                     	if	0	;tblptru may be non-zero
   253  00037A                     	endif
   254  00037A                     	if	0	;tblptru may be non-zero
   255  00037A                     	endif
   256  00037A  0008               	tblrd		*
   257  00037C  CFF5 F001          	movff	tablat,SPI_enableClock@cpol
   258  000380  C003  FFF6         	movff	SPI_init@SPI_Config,tblptrl
   259  000384  C004  FFF7         	movff	SPI_init@SPI_Config+1,tblptrh
   260  000388                     	if	0	;tblptru may be non-zero
   261  000388                     	endif
   262  000388                     	if	0	;tblptru may be non-zero
   263  000388                     	endif
   264  000388  0008               	tblrd		*
   265  00038A  50F5               	movf	tablat,w,c
   266  00038C  ECD7  F001         	call	_SPI_enableClock
   267                           
   268                           ;SPI.c: 79: SPI_enablePins(SPI_Config->SPI_Clk);
   269  000390  0E02               	movlw	2
   270  000392  2403               	addwf	SPI_init@SPI_Config,w,c
   271  000394  6E05               	movwf	??_SPI_init& (0+255),c
   272  000396  0E00               	movlw	0
   273  000398  2004               	addwfc	SPI_init@SPI_Config+1,w,c
   274  00039A  6E06               	movwf	(??_SPI_init+1)& (0+255),c
   275  00039C  C005  FFF6         	movff	??_SPI_init,tblptrl
   276  0003A0  C006  FFF7         	movff	??_SPI_init+1,tblptrh
   277  0003A4                     	if	0	;tblptru may be non-zero
   278  0003A4                     	endif
   279  0003A4                     	if	0	;tblptru may be non-zero
   280  0003A4                     	endif
   281  0003A4  0008               	tblrd		*
   282  0003A6  50F5               	movf	tablat,w,c
   283  0003A8  ECF6  F001         	call	_SPI_enablePins
   284  0003AC  0012               	return		;funcret
   285  0003AE                     __end_of_SPI_init:
   286                           	opt stack 0
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           
   292 ;; *************** function _SPI_enablePins *****************
   293 ;; Defined at:
   294 ;;		line 48 in file "SPI.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;  serial          1    wreg     enum E3069
   297 ;; Auto vars:     Size  Location     Type
   298 ;;  serial          1    0[COMRAM] enum E3069
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   308 ;;      Params:         0       0       0       0
   309 ;;      Locals:         1       0       0       0
   310 ;;      Temps:          0       0       0       0
   311 ;;      Totals:         1       0       0       0
   312 ;;Total ram usage:        1 bytes
   313 ;; Hardware stack levels used:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_SPI_init
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text2
   322  0003EC                     __ptext2:
   323                           	opt stack 0
   324  0003EC                     _SPI_enablePins:
   325                           	opt stack 29
   326                           
   327                           ;incstack = 0
   328                           ;SPI_enablePins@serial stored from wreg
   329  0003EC  6E01               	movwf	SPI_enablePins@serial,c
   330                           
   331                           ;SPI.c: 50: switch(serial)
   332  0003EE  D007               	goto	l118
   333  0003F0                     
   334                           ;SPI.c: 53: SSPCON &= (0x00);
   335  0003F0  0E00               	movlw	0
   336  0003F2  6EC6               	movwf	4038,c	;volatile
   337                           
   338                           ;SPI.c: 54: break;
   339  0003F4  D00E               	goto	l120
   340  0003F6                     
   341                           ;SPI.c: 56: SSPCON |= (0x01);
   342  0003F6  80C6               	bsf	4038,0,c	;volatile
   343                           
   344                           ;SPI.c: 57: break;
   345  0003F8  D00C               	goto	l120
   346  0003FA                     
   347                           ;SPI.c: 59: SSPCON |= (0x02);
   348  0003FA  82C6               	bsf	4038,1,c	;volatile
   349                           
   350                           ;SPI.c: 63: }
   351                           
   352                           ;SPI.c: 62: break;
   353                           
   354                           ;SPI.c: 61: default:
   355                           
   356                           ;SPI.c: 60: break;
   357  0003FC  D00A               	goto	l120
   358  0003FE                     l118:
   359  0003FE  5001               	movf	SPI_enablePins@serial,w,c
   360                           
   361                           ; Switch size 1, requested type "space"
   362                           ; Number of cases is 3, Range of values is 0 to 2
   363                           ; switch strategies available:
   364                           ; Name         Instructions Cycles
   365                           ; simple_byte           10     6 (average)
   366                           ;	Chosen strategy is simple_byte
   367  000400  0A00               	xorlw	0	; case 0
   368  000402  B4D8               	btfsc	status,2,c
   369  000404  D7F5               	goto	l119
   370  000406  0A01               	xorlw	1	; case 1
   371  000408  B4D8               	btfsc	status,2,c
   372  00040A  D7F5               	goto	l121
   373  00040C  0A03               	xorlw	3	; case 2
   374  00040E  B4D8               	btfsc	status,2,c
   375  000410  D7F4               	goto	l122
   376  000412                     l120:
   377                           
   378                           ;SPI.c: 66: TRISCbits.TRISC5 = 0;
   379  000412  9A94               	bcf	3988,5,c	;volatile
   380                           
   381                           ;SPI.c: 68: TRISCbits.TRISC4 = 1;
   382  000414  8894               	bsf	3988,4,c	;volatile
   383                           
   384                           ;SPI.c: 70: TRISCbits.TRISC7 = 0;
   385  000416  9E94               	bcf	3988,7,c	;volatile
   386                           
   387                           ;SPI.c: 73: SSPCON |= (0x20);
   388  000418  8AC6               	bsf	4038,5,c	;volatile
   389  00041A  0012               	return		;funcret
   390  00041C                     __end_of_SPI_enablePins:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           status	equ	0xFD8
   397                           
   398 ;; *************** function _SPI_enableClock *****************
   399 ;; Defined at:
   400 ;;		line 14 in file "SPI.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  phase           1    wreg     enum E3065
   403 ;;  cpol            1    0[COMRAM] enum E3061
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  phase           1    1[COMRAM] enum E3065
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   415 ;;      Params:         1       0       0       0
   416 ;;      Locals:         1       0       0       0
   417 ;;      Temps:          0       0       0       0
   418 ;;      Totals:         2       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_SPI_init
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text3
   429  0003AE                     __ptext3:
   430                           	opt stack 0
   431  0003AE                     _SPI_enableClock:
   432                           	opt stack 29
   433                           
   434                           ;incstack = 0
   435                           ;SPI_enableClock@phase stored from wreg
   436  0003AE  6E02               	movwf	SPI_enableClock@phase,c
   437                           
   438                           ;SPI.c: 17: SSPSTAT &= (0x3F);
   439  0003B0  0E3F               	movlw	63
   440  0003B2  16C7               	andwf	4039,f,c	;volatile
   441                           
   442                           ;SPI.c: 18: SSPCON &= (0xC0);
   443  0003B4  0EC0               	movlw	192
   444  0003B6  16C6               	andwf	4038,f,c	;volatile
   445                           
   446                           ;SPI.c: 21: SSPSTAT |= (0x40);
   447  0003B8  8CC7               	bsf	4039,6,c	;volatile
   448                           
   449                           ;SPI.c: 23: switch(phase)
   450  0003BA  D004               	goto	l105
   451  0003BC                     l106:
   452                           
   453                           ;SPI.c: 26: SSPCONbits.CKP = 0;
   454  0003BC  98C6               	bcf	4038,4,c	;volatile
   455                           
   456                           ;SPI.c: 27: break;
   457  0003BE  D00E               	goto	l110
   458  0003C0                     l108:
   459                           
   460                           ;SPI.c: 29: SSPCONbits.CKP = 1;
   461  0003C0  88C6               	bsf	4038,4,c	;volatile
   462                           
   463                           ;SPI.c: 33: }
   464                           
   465                           ;SPI.c: 32: break;
   466                           
   467                           ;SPI.c: 31: default:
   468                           
   469                           ;SPI.c: 30: break;
   470  0003C2  D00C               	goto	l110
   471  0003C4                     l105:
   472  0003C4  5002               	movf	SPI_enableClock@phase,w,c
   473                           
   474                           ; Switch size 1, requested type "space"
   475                           ; Number of cases is 2, Range of values is 0 to 1
   476                           ; switch strategies available:
   477                           ; Name         Instructions Cycles
   478                           ; simple_byte            7     4 (average)
   479                           ;	Chosen strategy is simple_byte
   480  0003C6  0A00               	xorlw	0	; case 0
   481  0003C8  B4D8               	btfsc	status,2,c
   482  0003CA  D7F8               	goto	l106
   483  0003CC  0A01               	xorlw	1	; case 1
   484  0003CE  B4D8               	btfsc	status,2,c
   485  0003D0  D7F7               	goto	l108
   486                           
   487                           ;SPI.c: 35: switch(cpol)
   488  0003D2  D004               	goto	l110
   489  0003D4                     l111:
   490                           
   491                           ;SPI.c: 38: SSPSTATbits.CKE = 0;
   492  0003D4  9CC7               	bcf	4039,6,c	;volatile
   493                           
   494                           ;SPI.c: 39: break;
   495  0003D6  0012               	return	
   496  0003D8                     l113:
   497                           
   498                           ;SPI.c: 41: SSPSTATbits.CKE = 1;
   499  0003D8  8CC7               	bsf	4039,6,c	;volatile
   500                           
   501                           ;SPI.c: 45: }
   502                           
   503                           ;SPI.c: 44: break;
   504                           
   505                           ;SPI.c: 43: default:
   506                           
   507                           ;SPI.c: 42: break;
   508  0003DA  0012               	return	
   509  0003DC                     l110:
   510  0003DC  5001               	movf	SPI_enableClock@cpol,w,c
   511                           
   512                           ; Switch size 1, requested type "space"
   513                           ; Number of cases is 2, Range of values is 0 to 1
   514                           ; switch strategies available:
   515                           ; Name         Instructions Cycles
   516                           ; simple_byte            7     4 (average)
   517                           ;	Chosen strategy is simple_byte
   518  0003DE  0A00               	xorlw	0	; case 0
   519  0003E0  B4D8               	btfsc	status,2,c
   520  0003E2  D7F8               	goto	l111
   521  0003E4  0A01               	xorlw	1	; case 1
   522  0003E6  A4D8               	btfss	status,2,c
   523  0003E8  0012               	return	
   524  0003EA  D7F6               	goto	l113
   525  0003EC                     __end_of_SPI_enableClock:
   526                           	opt stack 0
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           status	equ	0xFD8
   532                           
   533 ;; *************** function _GPIO_sourceClock *****************
   534 ;; Defined at:
   535 ;;		line 18 in file "GPIO.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  clk             1    wreg     enum E3061
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  clk             1    0[COMRAM] enum E3061
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   549 ;;      Params:         0       0       0       0
   550 ;;      Locals:         1       0       0       0
   551 ;;      Temps:          0       0       0       0
   552 ;;      Totals:         1       0       0       0
   553 ;;Total ram usage:        1 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text4
   563  000306                     __ptext4:
   564                           	opt stack 0
   565  000306                     _GPIO_sourceClock:
   566                           	opt stack 30
   567                           
   568                           ;incstack = 0
   569                           ;GPIO_sourceClock@clk stored from wreg
   570  000306  6E01               	movwf	GPIO_sourceClock@clk,c
   571                           
   572                           ;GPIO.c: 20: switch(clk)
   573  000308  D014               	goto	l26
   574  00030A                     
   575                           ;GPIO.c: 23: OSCCON |= (0x70);
   576  00030A  0E70               	movlw	112
   577  00030C  12D3               	iorwf	4051,f,c	;volatile
   578                           
   579                           ;GPIO.c: 24: break;
   580  00030E  0012               	return	
   581  000310                     
   582                           ;GPIO.c: 26: OSCCON |= (0x60);
   583  000310  0E60               	movlw	96
   584  000312  12D3               	iorwf	4051,f,c	;volatile
   585                           
   586                           ;GPIO.c: 27: break;
   587  000314  0012               	return	
   588  000316                     
   589                           ;GPIO.c: 29: OSCCON |= (0x50);
   590  000316  0E50               	movlw	80
   591  000318  12D3               	iorwf	4051,f,c	;volatile
   592                           
   593                           ;GPIO.c: 30: break;
   594  00031A  0012               	return	
   595  00031C                     
   596                           ;GPIO.c: 32: OSCCON |= (0x40);
   597  00031C  8CD3               	bsf	4051,6,c	;volatile
   598                           
   599                           ;GPIO.c: 33: break;
   600  00031E  0012               	return	
   601  000320                     
   602                           ;GPIO.c: 35: OSCCON |= (0x30);
   603  000320  0E30               	movlw	48
   604  000322  12D3               	iorwf	4051,f,c	;volatile
   605                           
   606                           ;GPIO.c: 36: break;
   607  000324  0012               	return	
   608  000326                     
   609                           ;GPIO.c: 38: OSCCON |= (0x20);
   610  000326  8AD3               	bsf	4051,5,c	;volatile
   611                           
   612                           ;GPIO.c: 39: break;
   613  000328  0012               	return	
   614  00032A                     
   615                           ;GPIO.c: 41: OSCCON |= (0x10);
   616  00032A  88D3               	bsf	4051,4,c	;volatile
   617                           
   618                           ;GPIO.c: 42: break;
   619  00032C  0012               	return	
   620  00032E                     
   621                           ;GPIO.c: 44: OSCCON |= (0x00);
   622  00032E  50D3               	movf	4051,w,c	;volatile
   623                           
   624                           ;GPIO.c: 48: }
   625                           
   626                           ;GPIO.c: 47: break;
   627                           
   628                           ;GPIO.c: 46: default:
   629                           
   630                           ;GPIO.c: 45: break;
   631  000330  0012               	return	
   632  000332                     l26:
   633  000332  5001               	movf	GPIO_sourceClock@clk,w,c
   634                           
   635                           ; Switch size 1, requested type "space"
   636                           ; Number of cases is 8, Range of values is 0 to 7
   637                           ; switch strategies available:
   638                           ; Name         Instructions Cycles
   639                           ; simple_byte           25    13 (average)
   640                           ;	Chosen strategy is simple_byte
   641  000334  0A00               	xorlw	0	; case 0
   642  000336  B4D8               	btfsc	status,2,c
   643  000338  D7E8               	goto	l27
   644  00033A  0A01               	xorlw	1	; case 1
   645  00033C  B4D8               	btfsc	status,2,c
   646  00033E  D7E8               	goto	l29
   647  000340  0A03               	xorlw	3	; case 2
   648  000342  B4D8               	btfsc	status,2,c
   649  000344  D7E8               	goto	l30
   650  000346  0A01               	xorlw	1	; case 3
   651  000348  B4D8               	btfsc	status,2,c
   652  00034A  D7E8               	goto	l31
   653  00034C  0A07               	xorlw	7	; case 4
   654  00034E  B4D8               	btfsc	status,2,c
   655  000350  D7E7               	goto	l32
   656  000352  0A01               	xorlw	1	; case 5
   657  000354  B4D8               	btfsc	status,2,c
   658  000356  D7E7               	goto	l33
   659  000358  0A03               	xorlw	3	; case 6
   660  00035A  B4D8               	btfsc	status,2,c
   661  00035C  D7E6               	goto	l34
   662  00035E  0A01               	xorlw	1	; case 7
   663  000360  A4D8               	btfss	status,2,c
   664  000362  0012               	return	
   665  000364  D7E4               	goto	l35
   666  000366                     __end_of_GPIO_sourceClock:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           status	equ	0xFD8
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           status	equ	0xFD8
   678                           
   679                           	psect	rparam
   680  0000                     tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    SPI_init@SPI_Config	PTR const struct . size(2) Largest target is 3
		 -> SPI_Config(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_SPI_init
    _SPI_init->_SPI_enableClock

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     292
                   _GPIO_sourceClock
                           _SPI_init
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             4     2      2     277
                                              2 COMRAM     4     2      2
                    _SPI_enableClock
                     _SPI_enablePins
 ---------------------------------------------------------------------------------
 (2) _SPI_enablePins                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_enableClock                                      2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_sourceClock                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_sourceClock
   _SPI_init
     _SPI_enableClock
     _SPI_enablePins

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       A       1       10.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A       3        0.0%
DATA                 0      0       A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri May 25 02:16:45 2018

  __size_of_SPI_enablePins 0030   __size_of_SPI_enableClock 003E                _SSPSTATbits 000FC7  
                       l11 042E                         l30 0316                         l31 031C  
                       l32 0320                         l33 0326                         l26 0332  
                       l34 032A                         l35 032E                         l27 030A  
                       l29 0310                        l110 03DC                        l111 03D4  
                      l120 0412                        l113 03D8                        l105 03C4  
                      l121 03F6                        l106 03BC                        l122 03FA  
                      l108 03C0                        l118 03FE                        l119 03F0  
                     _main 041C                       start 0000               ___param_bank 000000  
                    ?_main 0001                      _SPBRG 000FAF                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TXREG 000FAD  
                    tablat 000FF5           __end_of_SPI_init 03AE                      status 000FD8  
__size_of_GPIO_sourceClock 0060            __initialization 0430               __end_of_main 0430  
                   ??_main 0007              __activetblptr 000002          ??_SPI_enableClock 0002  
                   _ANSEL0 000FB8                     _OSCCON 000FD3                     _SSPCON 000FC6  
                   _SSPBUF 000FC9             _SPI_enablePins 03EC        SPI_enableClock@cpol 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0060    __end_of__initialization 0438  
            ___rparam_used 000001     __end_of_SPI_enablePins 041C             __pcstackCOMRAM 0001  
                ?_SPI_init 0003           _GPIO_sourceClock 0306            ?_SPI_enablePins 0001  
               ??_SPI_init 0005                    _SSPSTAT 000FC7                    __Hparam 0000  
                  __Lparam 0000            _SPI_enableClock 03AE         SPI_init@SPI_Config 0003  
             __psmallconst 0300                    __pcinit 0430                    __ramtop 0300  
                  __ptext0 041C                    __ptext1 0366                    __ptext2 03EC  
                  __ptext3 03AE                    __ptext4 0306         __end_of_SPI_Config 0304  
     end_of_initialization 0438              __Lmediumconst 0000       SPI_enableClock@phase 0002  
      GPIO_sourceClock@clk 0001                  _RCSTAbits 000FAB                  _TRISCbits 000F94  
  __end_of_SPI_enableClock 03EC                  _TXSTAbits 000FAC                _BAUDCTLbits 000FAA  
 __end_of_GPIO_sourceClock 0366        start_initialization 0430          __size_of_SPI_init 0048  
         ??_SPI_enablePins 0001                __pbssCOMRAM 0007           ?_SPI_enableClock 0001  
     SPI_enablePins@serial 0001                __smallconst 0300                   _SPI_init 0366  
           expBASE10@value 0007                   __Hrparam 0000                   __Lrparam 0000  
        ?_GPIO_sourceClock 0001         ??_GPIO_sourceClock 0001              __size_of_main 0014  
               _SSPCONbits 000FC6                 _SPI_Config 0301  
