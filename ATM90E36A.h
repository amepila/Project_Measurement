#ifndef ATM90E36A_H_
#define	ATM90E36A_H_

#include <stdint.h>


void ATM_init(void);

void ATM_calibration(void);

typedef enum
{
    ACTIVE_ENERGY,
    REACTIVE_ENERGY,
    APPARENT_ENERGY,
    FUNDAMENTAL_ENERGY,
    HARMONIC_ENERGY,
    ACTIVE_POWER,
    REACTIVE_POWER,
    APPARENT_POWER,
    POWER_FACTOR,
    FUNDAMENTAL_POWER,
    HARMONIC_POWER,
    VOLTAGE_RMS,
    CURRENT_RMS,
    THDN_REG,
    FREQUENCY_REG,
    PHASE_ANGLE_REG,
    TEMPERATURE_REG
} ATM_type_t;

typedef enum
{
    TOTAL_FORW_ACTIVE_ENERGY,
    PHASE_A_FORW_ACTIVE_ENERGY,
    PHASE_B_FORW_ACTIVE_ENERGY,
    PHASE_C_FORW_ACTIVE_ENERGY,
    TOTAL_REV_ACTIVE_ENERGY,
    PHASE_A_REV_ACTIVE_ENERGY,
    PHASE_B_REV_ACTIVE_ENERGY,
    PHASE_C_REV_ACTIVE_ENERGY,
    TOTAL_FORW_REACTIVE_ENERGY,
    PHASE_A_FORW_REACTIVE_ENERGY,
    PHASE_B_FORW_REACTIVE_ENERGY,
    PHASE_C_FORW_REACTIVE_ENERGY,
    TOTAL_REVERSE_REACTIVE_ENERGY,
    PHASE_A_REV_REACTIVE_ENERGY,
    PHASE_B_REV_REACTIVE_ENERGY,
    PHACE_C_REV_REACTIVE_ENERGY,
    TOTAL_ARIT_APPARENT_ENERGY,
    PHASE_A_APPARENT_ENERGY,
    PHASE_B_APPARENT_ENERGY,
    PHASE_C_APPARENT_ENERGY,
    TOTAL_VECT_APPARENT_ENERGY,
} ATM_reg_t;


#endif	

